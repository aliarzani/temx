{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(sendCodeSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../../api';\nimport { alertPush } from '../../../../public/alert';\nimport { sendCodeData, sendCodeError, resendCode } from '../actions';\nvar sessionsConfig = {\n  apiVersion: 'barong'\n};\nexport function sendCodeSaga(action) {\n  return _regeneratorRuntime.wrap(function sendCodeSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.post(sessionsConfig), '/resource/phones', action.payload);\n\n        case 3:\n          _context.next = 5;\n          return put(sendCodeData());\n\n        case 5:\n          _context.next = 7;\n          return put(alertPush({\n            message: ['success.phone.verification.send'],\n            type: 'success'\n          }));\n\n        case 7:\n          _context.next = 22;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n\n          if (!(_context.t0.message.toString() === 'resource.phone.exists')) {\n            _context.next = 18;\n            break;\n          }\n\n          _context.next = 14;\n          return put(resendCode(action.payload));\n\n        case 14:\n          _context.next = 16;\n          return put(alertPush({\n            message: _context.t0.message,\n            type: 'success'\n          }));\n\n        case 16:\n          _context.next = 22;\n          break;\n\n        case 18:\n          _context.next = 20;\n          return put(sendCodeError(_context.t0));\n\n        case 20:\n          _context.next = 22;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/kyc/phone/sagas/sendCodeSaga.ts"],"names":["sendCodeSaga","call","put","API","alertPush","sendCodeData","sendCodeError","resendCode","sessionsConfig","apiVersion","action","post","payload","message","type","toString","code"],"mappings":";;;;yBAeiBA,Y;;AAfjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,oBAApC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SACIC,YADJ,EAEIC,aAFJ,EAIIC,UAJJ,QAKO,YALP;AAOA,IAAMC,cAA8B,GAAG;AACnCC,EAAAA,UAAU,EAAE;AADuB,CAAvC;AAIA,OAAO,SAAUT,YAAV,CAAuBU,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,iBAAMT,IAAI,CAACE,GAAG,CAACQ,IAAJ,CAASH,cAAT,CAAD,EAA2B,kBAA3B,EAA+CE,MAAM,CAACE,OAAtD,CAAV;;AAFD;AAAA;AAGC,iBAAMV,GAAG,CAACG,YAAY,EAAb,CAAT;;AAHD;AAAA;AAIC,iBAAMH,GAAG,CAACE,SAAS,CAAC;AAACS,YAAAA,OAAO,EAAE,CAAC,iCAAD,CAAV;AAA+CC,YAAAA,IAAI,EAAE;AAArD,WAAD,CAAV,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,gBAMK,YAAMD,OAAN,CAAcE,QAAd,OAA6B,uBANlC;AAAA;AAAA;AAAA;;AAAA;AAOK,iBAAMb,GAAG,CAACK,UAAU,CAACG,MAAM,CAACE,OAAR,CAAX,CAAT;;AAPL;AAAA;AAQK,iBAAMV,GAAG,CAACE,SAAS,CAAC;AAACS,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBC,YAAAA,IAAI,EAAE;AAA/B,WAAD,CAAV,CAAT;;AARL;AAAA;AAAA;;AAAA;AAAA;AAUK,iBAAMZ,GAAG,CAACI,aAAa,aAAd,CAAT;;AAVL;AAAA;AAWK,iBAAMJ,GAAG,CAACE,SAAS,CAAC;AAACS,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBG,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CF,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../../api';\nimport { alertPush } from '../../../../public/alert';\nimport {\n    sendCodeData,\n    sendCodeError,\n    SendCodeFetch,\n    resendCode,\n} from '../actions';\n\nconst sessionsConfig: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* sendCodeSaga(action: SendCodeFetch) {\n    try {\n        yield call(API.post(sessionsConfig), '/resource/phones', action.payload);\n        yield put(sendCodeData());\n        yield put(alertPush({message: ['success.phone.verification.send'], type: 'success'}));\n    } catch (error) {\n        if (error.message.toString() === 'resource.phone.exists') {\n            yield put(resendCode(action.payload));\n            yield put(alertPush({message: error.message, type: 'success'}));\n        } else {\n            yield put(sendCodeError(error));\n            yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}