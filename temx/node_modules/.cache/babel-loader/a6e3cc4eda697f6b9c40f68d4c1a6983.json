{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(apiKeysSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { apiKeys2FAModal, apiKeysData } from '../actions';\nvar apiKeysOptions = {\n  apiVersion: 'barong'\n};\nexport function apiKeysSaga(action) {\n  var apiKeys;\n  return _regeneratorRuntime.wrap(function apiKeysSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.get(apiKeysOptions), '/resource/api_keys');\n\n        case 3:\n          apiKeys = _context.sent;\n          _context.next = 6;\n          return put(apiKeysData(apiKeys));\n\n        case 6:\n          _context.next = 12;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 12:\n          _context.prev = 12;\n          _context.next = 15;\n          return put(apiKeys2FAModal({\n            active: false\n          }));\n\n        case 15:\n          return _context.finish(12);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8, 12, 16]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/apiKeys/sagas/apiKeysSaga.ts"],"names":["apiKeysSaga","call","put","API","alertPush","apiKeys2FAModal","apiKeysData","apiKeysOptions","apiVersion","action","get","apiKeys","message","code","type","active"],"mappings":";;;;yBAUiBA,W;;AAVjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA2D,YAA3D;AAEA,IAAMC,cAA8B,GAAG;AACnCC,EAAAA,UAAU,EAAE;AADuB,CAAvC;AAIA,OAAO,SAAUR,WAAV,CAAsBS,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEiB,iBAAMR,IAAI,CAACE,GAAG,CAACO,GAAJ,CAAQH,cAAR,CAAD,EAA0B,oBAA1B,CAAV;;AAFjB;AAEOI,UAAAA,OAFP;AAAA;AAGC,iBAAMT,GAAG,CAACI,WAAW,CAACK,OAAD,CAAZ,CAAT;;AAHD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKC,iBAAMT,GAAG,CAACE,SAAS,CAAC;AAACQ,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBC,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CC,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AALD;AAAA;AAAA;AAOC,iBAAMZ,GAAG,CAACG,eAAe,CAAC;AAACU,YAAAA,MAAM,EAAE;AAAT,WAAD,CAAhB,CAAT;;AAPD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { apiKeys2FAModal, apiKeysData, ApiKeysFetch } from '../actions';\n\nconst apiKeysOptions: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* apiKeysSaga(action: ApiKeysFetch) {\n    try {\n        const apiKeys = yield call(API.get(apiKeysOptions), '/resource/api_keys');\n        yield put(apiKeysData(apiKeys));\n    } catch (error) {\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    } finally {\n        yield put(apiKeys2FAModal({active: false}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}