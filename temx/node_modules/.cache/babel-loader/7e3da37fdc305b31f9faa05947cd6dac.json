{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(beneficiariesActivateSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../../modules/public/alert';\nimport { beneficiariesActivateData, beneficiariesActivateError } from '../actions';\nvar config = {\n  apiVersion: 'peatio'\n};\nexport function beneficiariesActivateSaga(action) {\n  var id, payload;\n  return _regeneratorRuntime.wrap(function beneficiariesActivateSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          id = action.payload.id;\n          _context.next = 4;\n          return call(API.patch(config), \"/account/beneficiaries/\".concat(id, \"/activate\"), action.payload);\n\n        case 4:\n          payload = _context.sent;\n          _context.next = 7;\n          return put(beneficiariesActivateData(payload));\n\n        case 7:\n          _context.next = 9;\n          return put(alertPush({\n            message: ['success.beneficiaries.activated'],\n            type: 'success'\n          }));\n\n        case 9:\n          _context.next = 17;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 15;\n          return put(beneficiariesActivateError(_context.t0));\n\n        case 15:\n          _context.next = 17;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 11]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/beneficiaries/sagas/beneficiariesActivateSaga.ts"],"names":["beneficiariesActivateSaga","call","put","API","alertPush","beneficiariesActivateData","beneficiariesActivateError","config","apiVersion","action","id","payload","patch","message","type","code"],"mappings":";;;;yBAciBA,yB;;AAdjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,SAEIC,yBAFJ,EAGIC,0BAHJ,QAIO,YAJP;AAMA,IAAMC,MAAsB,GAAG;AAC3BC,EAAAA,UAAU,EAAE;AADe,CAA/B;AAIA,OAAO,SAAUR,yBAAV,CAAoCS,MAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAESC,UAAAA,EAFT,GAEgBD,MAAM,CAACE,OAFvB,CAESD,EAFT;AAAA;AAGiB,iBAAMT,IAAI,CAACE,GAAG,CAACS,KAAJ,CAAUL,MAAV,CAAD,mCAA8CG,EAA9C,gBAA6DD,MAAM,CAACE,OAApE,CAAV;;AAHjB;AAGOA,UAAAA,OAHP;AAAA;AAIC,iBAAMT,GAAG,CAACG,yBAAyB,CAACM,OAAD,CAA1B,CAAT;;AAJD;AAAA;AAKC,iBAAMT,GAAG,CAACE,SAAS,CAAC;AAACS,YAAAA,OAAO,EAAE,CAAC,iCAAD,CAAV;AAA+CC,YAAAA,IAAI,EAAE;AAArD,WAAD,CAAV,CAAT;;AALD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOC,iBAAMZ,GAAG,CAACI,0BAA0B,aAA3B,CAAT;;AAPD;AAAA;AAQC,iBAAMJ,GAAG,CAACE,SAAS,CAAC;AAACS,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBE,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CD,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../../modules/public/alert';\nimport {\n    BeneficiariesActivate,\n    beneficiariesActivateData,\n    beneficiariesActivateError,\n} from '../actions';\n\nconst config: RequestOptions = {\n    apiVersion: 'peatio',\n};\n\nexport function* beneficiariesActivateSaga(action: BeneficiariesActivate) {\n    try {\n        const { id } = action.payload;\n        const payload = yield call(API.patch(config), `/account/beneficiaries/${id}/activate`, action.payload);\n        yield put(beneficiariesActivateData(payload));\n        yield put(alertPush({message: ['success.beneficiaries.activated'], type: 'success'}));\n    } catch (error) {\n        yield put(beneficiariesActivateError(error));\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}