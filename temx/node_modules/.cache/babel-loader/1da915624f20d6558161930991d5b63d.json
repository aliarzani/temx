{"ast":null,"code":"import _classCallCheck from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/codespaces-blank/baseapp-master/src/components/TwoFactorAuth/index.tsx\";\nimport { Button } from '@openware/components';\nimport cr from 'classnames';\nimport { CustomInput } from '../';\nimport * as React from 'react';\n\nvar TwoFactorAuthComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TwoFactorAuthComponent, _React$Component);\n\n  function TwoFactorAuthComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TwoFactorAuthComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TwoFactorAuthComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleCancel = function () {\n      _this.props.handleClose2fa();\n    };\n\n    _this.handleSubmit = function () {\n      _this.props.onSubmit();\n    };\n\n    _this.handleEnterPress = function (event) {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n\n        _this.handleSubmit();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TwoFactorAuthComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          errorMessage = _this$props.errorMessage,\n          isLoading = _this$props.isLoading,\n          title = _this$props.title,\n          label = _this$props.label,\n          buttonLabel = _this$props.buttonLabel,\n          message = _this$props.message,\n          error = _this$props.error,\n          otpCode = _this$props.otpCode,\n          codeFocused = _this$props.codeFocused;\n      var errors = errorMessage || error;\n      var buttonWrapperClass = cr('cr-email-form__button-wrapper', {\n        'cr-email-form__button-wrapper--empty': !errors\n      });\n      var emailGroupClass = cr('cr-email-form__group', {\n        'cr-email-form__group--focused': codeFocused\n      });\n      return React.createElement(\"div\", {\n        className: \"pg-2fa___form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-email-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-email-form__options-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-email-form__option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-email-form__option-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, title || '2FA verification', React.createElement(\"div\", {\n        className: \"cr-email-form__cros-icon\",\n        onClick: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"\",\n        src: require('../EmailForm/close.svg'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"cr-email-form__form-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-email-form__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, message), React.createElement(\"div\", {\n        className: emailGroupClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        type: \"number\",\n        label: label || '6-digit Google Authenticator Code',\n        placeholder: label || '6-digit Google Authenticator Code',\n        defaultLabel: \"6-digit Google Authenticator Code\",\n        handleChangeInput: this.props.handleOtpCodeChange,\n        inputValue: otpCode,\n        handleFocusInput: this.props.handleChangeFocusField,\n        classNameLabel: \"cr-email-form__label\",\n        classNameInput: \"cr-email-form__input\",\n        onKeyPress: this.handleEnterPress,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), errorMessage && React.createElement(\"div\", {\n        className: \"cr-email-form__error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, errorMessage)), React.createElement(\"div\", {\n        className: buttonWrapperClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Button, {\n        label: isLoading ? 'Loading...' : buttonLabel ? buttonLabel : 'Sign in',\n        className: otpCode ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled',\n        disabled: isLoading || !otpCode.match(/.{6}/g),\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return TwoFactorAuthComponent;\n}(React.Component);\n\nexport var TwoFactorAuth = TwoFactorAuthComponent;","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/components/TwoFactorAuth/index.tsx"],"names":["Button","cr","CustomInput","React","TwoFactorAuthComponent","handleCancel","props","handleClose2fa","handleSubmit","onSubmit","handleEnterPress","event","key","preventDefault","errorMessage","isLoading","title","label","buttonLabel","message","error","otpCode","codeFocused","errors","buttonWrapperClass","emailGroupClass","require","handleOtpCodeChange","handleChangeFocusField","match","Component","TwoFactorAuth"],"mappings":"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","sourcesContent":["import { Button } from '@openware/components';\nimport cr from 'classnames';\nimport { CustomInput } from '../';\n\nimport * as React from 'react';\n\nexport interface TwoFactorAuthProps {\n    errorMessage?: string;\n    isLoading?: boolean;\n    onSubmit: () => void;\n    title: string;\n    label: string;\n    buttonLabel: string;\n    message: string;\n    otpCode: string;\n    error: string;\n    codeFocused: boolean;\n    handleOtpCodeChange: (otp: string) => void;\n    handleChangeFocusField: () => void;\n    handleClose2fa: () => void;\n}\n\nclass TwoFactorAuthComponent extends React.Component<TwoFactorAuthProps> {\n    public render() {\n        const {\n            errorMessage,\n            isLoading,\n            title,\n            label,\n            buttonLabel,\n            message,\n            error,\n            otpCode,\n            codeFocused,\n        } = this.props;\n\n        const errors = errorMessage || error;\n        const buttonWrapperClass = cr('cr-email-form__button-wrapper', {\n            'cr-email-form__button-wrapper--empty': !errors,\n        });\n        const emailGroupClass = cr('cr-email-form__group', {\n            'cr-email-form__group--focused': codeFocused,\n        });\n        return (\n            <div className=\"pg-2fa___form\">\n                <form>\n                    <div className=\"cr-email-form\">\n                        <div className=\"cr-email-form__options-group\">\n                            <div className=\"cr-email-form__option\">\n                                <div className=\"cr-email-form__option-inner\">\n                                    {title || '2FA verification'}\n                                    <div className=\"cr-email-form__cros-icon\" onClick={this.handleCancel}>\n                                        <img alt=\"\" src={require('../EmailForm/close.svg')}/>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"cr-email-form__form-content\">\n                            <div className=\"cr-email-form__header\">\n                              {message}\n                            </div>\n                            <div className={emailGroupClass}>\n                                <CustomInput\n                                    type=\"number\"\n                                    label={label || '6-digit Google Authenticator Code'}\n                                    placeholder={label || '6-digit Google Authenticator Code'}\n                                    defaultLabel=\"6-digit Google Authenticator Code\"\n                                    handleChangeInput={this.props.handleOtpCodeChange}\n                                    inputValue={otpCode}\n                                    handleFocusInput={this.props.handleChangeFocusField}\n                                    classNameLabel=\"cr-email-form__label\"\n                                    classNameInput=\"cr-email-form__input\"\n                                    onKeyPress={this.handleEnterPress}\n                                    autoFocus={true}\n                                />\n                                {errorMessage && <div className=\"cr-email-form__error\">{errorMessage}</div>}\n                            </div>\n                            <div className={buttonWrapperClass}>\n                                <Button\n                                    label={isLoading ? 'Loading...' : (buttonLabel ? buttonLabel : 'Sign in')}\n                                    className={otpCode ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled'}\n                                    disabled={isLoading || !otpCode.match(/.{6}/g)}\n                                    onClick={this.handleSubmit}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n\n    private handleCancel = () => {\n        this.props.handleClose2fa();\n    }\n\n    private handleSubmit = () => {\n        this.props.onSubmit();\n    };\n\n    private handleEnterPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            this.handleSubmit();\n        }\n    }\n}\n\nexport const TwoFactorAuth = TwoFactorAuthComponent;\n"]},"metadata":{},"sourceType":"module"}