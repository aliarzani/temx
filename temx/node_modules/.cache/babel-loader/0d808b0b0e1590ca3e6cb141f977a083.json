{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(walletsAddressSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { walletsAddressData, walletsAddressError } from '../actions';\nvar walletsAddressOptions = {\n  apiVersion: 'peatio'\n};\nexport function walletsAddressSaga(action) {\n  var currency, url, _ref, address;\n\n  return _regeneratorRuntime.wrap(function walletsAddressSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          currency = action.payload.currency.toLocaleLowerCase();\n          url = \"/account/deposit_address/\".concat(currency);\n          _context.next = 5;\n          return call(API.get(walletsAddressOptions), url);\n\n        case 5:\n          _ref = _context.sent;\n          address = _ref.address;\n          _context.next = 9;\n          return put(walletsAddressData({\n            address: address,\n            currency: currency\n          }));\n\n        case 9:\n          _context.next = 17;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 15;\n          return put(walletsAddressError(_context.t0));\n\n        case 15:\n          _context.next = 17;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 11]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/wallets/sagas/walletsAddressSaga.ts"],"names":["walletsAddressSaga","call","put","API","alertPush","walletsAddressData","walletsAddressError","walletsAddressOptions","apiVersion","action","currency","payload","toLocaleLowerCase","url","get","address","message","code","type"],"mappings":";;;;yBAciBA,kB;;AAdjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SACIC,kBADJ,EAEIC,mBAFJ,QAIO,YAJP;AAMA,IAAMC,qBAAqC,GAAG;AAC1CC,EAAAA,UAAU,EAAE;AAD8B,CAA9C;AAIA,OAAO,SAAUR,kBAAV,CAA6BS,MAA7B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEOC,UAAAA,QAFP,GAEkBD,MAAM,CAACE,OAAP,CAAeD,QAAf,CAAwBE,iBAAxB,EAFlB;AAGOC,UAAAA,GAHP,sCAGyCH,QAHzC;AAAA;AAIqB,iBAAMT,IAAI,CAACE,GAAG,CAACW,GAAJ,CAAQP,qBAAR,CAAD,EAAiCM,GAAjC,CAAV;;AAJrB;AAAA;AAISE,UAAAA,OAJT,QAISA,OAJT;AAAA;AAKC,iBAAMb,GAAG,CAACG,kBAAkB,CAAC;AACzBU,YAAAA,OAAO,EAAPA,OADyB;AAEzBL,YAAAA,QAAQ,EAARA;AAFyB,WAAD,CAAnB,CAAT;;AALD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAUC,iBAAMR,GAAG,CAACI,mBAAmB,aAApB,CAAT;;AAVD;AAAA;AAWC,iBAAMJ,GAAG,CAACE,SAAS,CAAC;AAACY,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBC,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CC,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AAXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport {\n    walletsAddressData,\n    walletsAddressError,\n    WalletsAddressFetch,\n} from '../actions';\n\nconst walletsAddressOptions: RequestOptions = {\n    apiVersion: 'peatio',\n};\n\nexport function* walletsAddressSaga(action: WalletsAddressFetch) {\n    try {\n        const currency = action.payload.currency.toLocaleLowerCase();\n        const url = `/account/deposit_address/${currency}`;\n        const { address } = yield call(API.get(walletsAddressOptions), url);\n        yield put(walletsAddressData({\n            address,\n            currency,\n        }));\n    } catch (error) {\n        yield put(walletsAddressError(error));\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}