{"ast":null,"code":"import _classCallCheck from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/codespaces-blank/baseapp-master/src/components/SignUp/index.tsx\";\nimport { Button, Checkbox } from '@openware/components';\nimport cr from 'classnames';\nimport { CustomInput } from '../';\nimport * as React from 'react';\nimport { EMAIL_REGEX, PASSWORD_REGEX } from '../../helpers';\nexport var SignUpForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignUpForm, _React$Component);\n\n  function SignUpForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignUpForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignUpForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.disableButton = function () {\n      var _this$props = _this.props,\n          email = _this$props.email,\n          password = _this$props.password,\n          confirmPassword = _this$props.confirmPassword,\n          hasConfirmed = _this$props.hasConfirmed,\n          reCaptchaSuccess = _this$props.reCaptchaSuccess,\n          isLoading = _this$props.isLoading,\n          captchaType = _this$props.captchaType,\n          geetestCaptchaSuccess = _this$props.geetestCaptchaSuccess;\n\n      if (!hasConfirmed || isLoading || !email.match(EMAIL_REGEX) || !password || !confirmPassword) {\n        return true;\n      }\n\n      if (captchaType === 'recaptcha' && !reCaptchaSuccess) {\n        return true;\n      }\n\n      if (captchaType === 'geetest' && !geetestCaptchaSuccess) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.handleClick = function (label, e) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      if (!_this.isValidForm()) {\n        _this.props.validateForm();\n      } else {\n        _this.handleSubmitForm();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SignUpForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          email = _this$props2.email,\n          password = _this$props2.password,\n          confirmPassword = _this$props2.confirmPassword,\n          refId = _this$props2.refId,\n          onSignIn = _this$props2.onSignIn,\n          image = _this$props2.image,\n          isLoading = _this$props2.isLoading,\n          labelSignIn = _this$props2.labelSignIn,\n          labelSignUp = _this$props2.labelSignUp,\n          emailLabel = _this$props2.emailLabel,\n          passwordLabel = _this$props2.passwordLabel,\n          confirmPasswordLabel = _this$props2.confirmPasswordLabel,\n          referalCodeLabel = _this$props2.referalCodeLabel,\n          termsMessage = _this$props2.termsMessage,\n          hasConfirmed = _this$props2.hasConfirmed,\n          emailError = _this$props2.emailError,\n          passwordError = _this$props2.passwordError,\n          confirmationError = _this$props2.confirmationError,\n          emailFocused = _this$props2.emailFocused,\n          passwordFocused = _this$props2.passwordFocused,\n          confirmPasswordFocused = _this$props2.confirmPasswordFocused,\n          refIdFocused = _this$props2.refIdFocused;\n      var emailGroupClass = cr('cr-sign-up-form__group', {\n        'cr-sign-up-form__group--focused': emailFocused\n      });\n      var passwordGroupClass = cr('cr-sign-up-form__group', {\n        'cr-sign-up-form__group--focused': passwordFocused\n      });\n      var confirmPasswordGroupClass = cr('cr-sign-up-form__group', {\n        'cr-sign-up-form__group--focused': confirmPasswordFocused\n      });\n      var refIdGroupClass = cr('cr-sign-up-form__group', {\n        'cr-sign-up-form__group--focused': refIdFocused\n      });\n      var logo = image ? React.createElement(\"h1\", {\n        className: \"cr-sign-up-form__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"cr-sign-up-form__image\",\n        src: image,\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })) : null;\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-sign-up-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-sign-up-form__options-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-sign-up-form__option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-sign-up-form__option-inner cr-sign-in-form__tab-signin\",\n        onClick: onSignIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, labelSignIn ? labelSignIn : 'Sign In')), React.createElement(\"div\", {\n        className: \"cr-sign-up-form__option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-sign-up-form__option-inner __selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, labelSignUp ? labelSignUp : 'Sign Up'))), React.createElement(\"div\", {\n        className: \"cr-sign-up-form__form-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, logo, React.createElement(\"div\", {\n        className: emailGroupClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        type: \"email\",\n        label: emailLabel || 'Email',\n        placeholder: emailLabel || 'Email',\n        defaultLabel: \"Email\",\n        handleChangeInput: this.props.handleChangeEmail,\n        inputValue: email,\n        handleFocusInput: this.props.handleFocusEmail,\n        classNameLabel: \"cr-sign-up-form__label\",\n        classNameInput: \"cr-sign-up-form__input\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), emailError && React.createElement(\"div\", {\n        className: \"cr-sign-up-form__error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, emailError)), React.createElement(\"div\", {\n        className: passwordGroupClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        type: \"password\",\n        label: passwordLabel || 'Password',\n        placeholder: passwordLabel || 'Password',\n        defaultLabel: \"Password\",\n        handleChangeInput: this.props.handleChangePassword,\n        inputValue: password,\n        handleFocusInput: this.props.handleFocusPassword,\n        classNameLabel: \"cr-sign-up-form__label\",\n        classNameInput: \"cr-sign-up-form__input\",\n        autoFocus: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), passwordError && React.createElement(\"div\", {\n        className: 'cr-sign-up-form__error',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, passwordError)), React.createElement(\"div\", {\n        className: confirmPasswordGroupClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        type: \"password\",\n        label: confirmPasswordLabel || 'Confirm Password',\n        placeholder: confirmPasswordLabel || 'Confirm Password',\n        defaultLabel: \"Confirm Password\",\n        handleChangeInput: this.props.handleChangeConfirmPassword,\n        inputValue: confirmPassword,\n        handleFocusInput: this.props.handleFocusConfirmPassword,\n        classNameLabel: \"cr-sign-up-form__label\",\n        classNameInput: \"cr-sign-up-form__input\",\n        autoFocus: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), confirmationError && React.createElement(\"div\", {\n        className: 'cr-sign-up-form__error',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, confirmationError)), React.createElement(\"div\", {\n        className: refIdGroupClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        type: \"text\",\n        label: referalCodeLabel || 'Referral code',\n        placeholder: referalCodeLabel || 'Referral code',\n        defaultLabel: \"Referral code\",\n        handleChangeInput: this.props.handleChangeRefId,\n        inputValue: refId,\n        handleFocusInput: this.props.handleFocusRefId,\n        classNameLabel: \"cr-sign-up-form__label\",\n        classNameInput: \"cr-sign-up-form__input\",\n        autoFocus: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      })), React.createElement(Checkbox, {\n        checked: hasConfirmed,\n        className: \"cr-sign-up-form__checkbox\",\n        onChange: this.props.clickCheckBox,\n        label: termsMessage ? termsMessage : 'I  agree all statements in terms of service',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }), this.props.renderCaptcha, React.createElement(\"div\", {\n        className: \"cr-sign-up-form__button-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        className: \"cr-sign-up-form__button\",\n        label: isLoading ? 'Loading...' : labelSignUp ? labelSignUp : 'Sign up',\n        disabled: this.disableButton(),\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })))));\n    }\n  }, {\n    key: \"handleSubmitForm\",\n    value: function handleSubmitForm() {\n      this.props.onSignUp();\n    }\n  }, {\n    key: \"isValidForm\",\n    value: function isValidForm() {\n      var _this$props3 = this.props,\n          email = _this$props3.email,\n          password = _this$props3.password,\n          confirmPassword = _this$props3.confirmPassword;\n      var isEmailValid = email.match(EMAIL_REGEX);\n      var isPasswordValid = password.match(PASSWORD_REGEX);\n      var isConfirmPasswordValid = password === confirmPassword;\n      return email && isEmailValid && password && isPasswordValid && confirmPassword && isConfirmPasswordValid;\n    }\n  }]);\n\n  return SignUpForm;\n}(React.Component);","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/components/SignUp/index.tsx"],"names":["Button","Checkbox","cr","CustomInput","React","EMAIL_REGEX","PASSWORD_REGEX","SignUpForm","disableButton","props","email","password","confirmPassword","hasConfirmed","reCaptchaSuccess","isLoading","captchaType","geetestCaptchaSuccess","match","handleClick","label","e","preventDefault","isValidForm","validateForm","handleSubmitForm","refId","onSignIn","image","labelSignIn","labelSignUp","emailLabel","passwordLabel","confirmPasswordLabel","referalCodeLabel","termsMessage","emailError","passwordError","confirmationError","emailFocused","passwordFocused","confirmPasswordFocused","refIdFocused","emailGroupClass","passwordGroupClass","confirmPasswordGroupClass","refIdGroupClass","logo","handleChangeEmail","handleFocusEmail","handleChangePassword","handleFocusPassword","handleChangeConfirmPassword","handleFocusConfirmPassword","handleChangeRefId","handleFocusRefId","clickCheckBox","renderCaptcha","onSignUp","isEmailValid","isPasswordValid","isConfirmPasswordValid","Component"],"mappings":"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","sourcesContent":["import {\n    Button,\n    Checkbox,\n} from '@openware/components';\nimport cr from 'classnames';\nimport { CustomInput } from '../';\nimport * as React from 'react';\nimport { EMAIL_REGEX, PASSWORD_REGEX } from '../../helpers';\n\nexport interface SignUpFormProps {\n    isLoading?: boolean;\n    title?: string;\n    onSignUp: () => void;\n    onSignIn?: () => void;\n    className?: string;\n    image?: string;\n    labelSignIn?: string;\n    labelSignUp?: string;\n    emailLabel?: string;\n    passwordLabel?: string;\n    confirmPasswordLabel?: string;\n    referalCodeLabel?: string;\n    termsMessage?: string;\n    refId: string;\n    password: string;\n    email: string;\n    confirmPassword: string;\n    handleChangeEmail: (value: string) => void;\n    handleChangePassword: (value: string) => void;\n    handleChangeConfirmPassword: (value: string) => void;\n    handleChangeRefId: (value: string) => void;\n    hasConfirmed: boolean;\n    clickCheckBox: () => void;\n    validateForm: () => void;\n    emailError: string;\n    passwordError: string;\n    confirmationError: string;\n    handleFocusEmail: () => void;\n    handleFocusPassword: () => void;\n    handleFocusConfirmPassword: () => void;\n    handleFocusRefId: () => void;\n    confirmPasswordFocused: boolean;\n    refIdFocused: boolean;\n    emailFocused: boolean;\n    passwordFocused: boolean;\n    captchaType: 'recaptcha' | 'geetest' | 'none';\n    renderCaptcha: JSX.Element | null;\n    reCaptchaSuccess: boolean;\n    geetestCaptchaSuccess: boolean;\n    captcha_response: string;\n}\n\nexport class SignUpForm extends React.Component<SignUpFormProps> {\n    public render() {\n        const {\n            email,\n            password,\n            confirmPassword,\n            refId,\n            onSignIn,\n            image,\n            isLoading,\n            labelSignIn,\n            labelSignUp,\n            emailLabel,\n            passwordLabel,\n            confirmPasswordLabel,\n            referalCodeLabel,\n            termsMessage,\n            hasConfirmed,\n            emailError,\n            passwordError,\n            confirmationError,\n            emailFocused,\n            passwordFocused,\n            confirmPasswordFocused,\n            refIdFocused,\n        } = this.props;\n\n        const emailGroupClass = cr('cr-sign-up-form__group', {\n            'cr-sign-up-form__group--focused': emailFocused,\n        });\n\n        const passwordGroupClass = cr('cr-sign-up-form__group', {\n            'cr-sign-up-form__group--focused': passwordFocused,\n        });\n\n        const confirmPasswordGroupClass = cr('cr-sign-up-form__group', {\n            'cr-sign-up-form__group--focused': confirmPasswordFocused,\n        });\n        const refIdGroupClass = cr('cr-sign-up-form__group', {\n            'cr-sign-up-form__group--focused': refIdFocused,\n        });\n        const logo = image ? (\n            <h1 className=\"cr-sign-up-form__title\">\n                <img className=\"cr-sign-up-form__image\" src={image} alt=\"logo\" />\n            </h1>\n        ) : null;\n\n        return (\n            <form>\n                <div className=\"cr-sign-up-form\">\n                    <div className=\"cr-sign-up-form__options-group\">\n                        <div className=\"cr-sign-up-form__option\">\n                            <div className=\"cr-sign-up-form__option-inner cr-sign-in-form__tab-signin\" onClick={onSignIn}>\n                                {labelSignIn ? labelSignIn : 'Sign In'}\n                            </div>\n                        </div>\n                        <div className=\"cr-sign-up-form__option\">\n                            <div className=\"cr-sign-up-form__option-inner __selected\">\n                                {labelSignUp ? labelSignUp : 'Sign Up'}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"cr-sign-up-form__form-content\">\n                        {logo}\n                        <div className={emailGroupClass}>\n                            <CustomInput\n                                type=\"email\"\n                                label={emailLabel || 'Email'}\n                                placeholder={emailLabel || 'Email'}\n                                defaultLabel=\"Email\"\n                                handleChangeInput={this.props.handleChangeEmail}\n                                inputValue={email}\n                                handleFocusInput={this.props.handleFocusEmail}\n                                classNameLabel=\"cr-sign-up-form__label\"\n                                classNameInput=\"cr-sign-up-form__input\"\n                                autoFocus={true}\n                            />\n                            {emailError && <div className=\"cr-sign-up-form__error\">{emailError}</div>}\n                        </div>\n                        <div className={passwordGroupClass}>\n                            <CustomInput\n                                type=\"password\"\n                                label={passwordLabel || 'Password'}\n                                placeholder={passwordLabel || 'Password'}\n                                defaultLabel=\"Password\"\n                                handleChangeInput={this.props.handleChangePassword}\n                                inputValue={password}\n                                handleFocusInput={this.props.handleFocusPassword}\n                                classNameLabel=\"cr-sign-up-form__label\"\n                                classNameInput=\"cr-sign-up-form__input\"\n                                autoFocus={false}\n                            />\n                            {passwordError && <div className={'cr-sign-up-form__error'}>{passwordError}</div>}\n                        </div>\n                        <div className={confirmPasswordGroupClass}>\n                            <CustomInput\n                                type=\"password\"\n                                label={confirmPasswordLabel || 'Confirm Password'}\n                                placeholder={confirmPasswordLabel || 'Confirm Password'}\n                                defaultLabel=\"Confirm Password\"\n                                handleChangeInput={this.props.handleChangeConfirmPassword}\n                                inputValue={confirmPassword}\n                                handleFocusInput={this.props.handleFocusConfirmPassword}\n                                classNameLabel=\"cr-sign-up-form__label\"\n                                classNameInput=\"cr-sign-up-form__input\"\n                                autoFocus={false}\n                            />\n                            {confirmationError && <div className={'cr-sign-up-form__error'}>{confirmationError}</div>}\n                        </div>\n                        <div className={refIdGroupClass}>\n                            <CustomInput\n                                type=\"text\"\n                                label={referalCodeLabel || 'Referral code'}\n                                placeholder={referalCodeLabel || 'Referral code'}\n                                defaultLabel=\"Referral code\"\n                                handleChangeInput={this.props.handleChangeRefId}\n                                inputValue={refId}\n                                handleFocusInput={this.props.handleFocusRefId}\n                                classNameLabel=\"cr-sign-up-form__label\"\n                                classNameInput=\"cr-sign-up-form__input\"\n                                autoFocus={false}\n                            />\n                        </div>\n                        <Checkbox\n                            checked={hasConfirmed}\n                            className=\"cr-sign-up-form__checkbox\"\n                            onChange={this.props.clickCheckBox}\n                            label={termsMessage ? termsMessage : 'I  agree all statements in terms of service'}\n                        />\n                        {this.props.renderCaptcha}\n                        <div className=\"cr-sign-up-form__button-wrapper\">\n                            <Button\n                                type=\"submit\"\n                                className=\"cr-sign-up-form__button\"\n                                label={isLoading ? 'Loading...' : (labelSignUp ? labelSignUp : 'Sign up')}\n                                disabled={this.disableButton()}\n                                onClick={this.handleClick}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n\n    private disableButton = (): boolean => {\n        const {\n            email,\n            password,\n            confirmPassword,\n            hasConfirmed,\n            reCaptchaSuccess,\n            isLoading,\n            captchaType,\n            geetestCaptchaSuccess,\n        } = this.props;\n\n        if (!hasConfirmed || isLoading || !email.match(EMAIL_REGEX) || !password || !confirmPassword) {\n            return true;\n        }\n        if (captchaType === 'recaptcha' && !reCaptchaSuccess) {\n            return true;\n        }\n        if (captchaType === 'geetest' && !geetestCaptchaSuccess) {\n            return true;\n        }\n        return false;\n    };\n\n    private handleSubmitForm() {\n        this.props.onSignUp();\n    }\n\n    private isValidForm() {\n        const { email, password, confirmPassword } = this.props;\n        const isEmailValid = email.match(EMAIL_REGEX);\n        const isPasswordValid = password.match(PASSWORD_REGEX);\n        const isConfirmPasswordValid = password === confirmPassword;\n\n        return (email && isEmailValid) &&\n            (password && isPasswordValid) &&\n            (confirmPassword && isConfirmPasswordValid);\n    }\n\n    private handleClick = (label?: string, e?: React.FormEvent<HTMLInputElement>) => {\n        if (e) {\n            e.preventDefault();\n        }\n        if (!this.isValidForm()) {\n            this.props.validateForm();\n        } else {\n            this.handleSubmitForm();\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}