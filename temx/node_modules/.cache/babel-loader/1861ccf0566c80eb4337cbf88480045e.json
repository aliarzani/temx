{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(memberLevelsSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../alert';\nimport { memberLevelsData, memberLevelsError } from '../actions';\nvar requestOptions = {\n  apiVersion: 'peatio'\n};\nexport function memberLevelsSaga() {\n  var data;\n  return _regeneratorRuntime.wrap(function memberLevelsSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.get(requestOptions), '/public/member-levels');\n\n        case 3:\n          data = _context.sent;\n          _context.next = 6;\n          return put(memberLevelsData(data));\n\n        case 6:\n          _context.next = 14;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(memberLevelsError());\n\n        case 12:\n          _context.next = 14;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/public/memberLevels/sagas/memberLevelsSaga.ts"],"names":["memberLevelsSaga","call","put","API","alertPush","memberLevelsData","memberLevelsError","requestOptions","apiVersion","get","data","message","code","type"],"mappings":";;;;yBAUiBA,gB;;AAVjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,gBAAT,EAA2BC,iBAA3B,QAAoD,YAApD;AAEA,IAAMC,cAA8B,GAAG;AACnCC,EAAAA,UAAU,EAAE;AADuB,CAAvC;AAIA,OAAO,SAAUR,gBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMC,IAAI,CAACE,GAAG,CAACM,GAAJ,CAAQF,cAAR,CAAD,EAA0B,uBAA1B,CAAV;;AAFd;AAEOG,UAAAA,IAFP;AAAA;AAGC,iBAAMR,GAAG,CAACG,gBAAgB,CAACK,IAAD,CAAjB,CAAT;;AAHD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKC,iBAAMR,GAAG,CAACI,iBAAiB,EAAlB,CAAT;;AALD;AAAA;AAMC,iBAAMJ,GAAG,CAACE,SAAS,CAAC;AAACO,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBC,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CC,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../alert';\nimport { memberLevelsData, memberLevelsError } from '../actions';\n\nconst requestOptions: RequestOptions = {\n    apiVersion: 'peatio',\n};\n\nexport function* memberLevelsSaga() {\n    try {\n        const data = yield call(API.get(requestOptions), '/public/member-levels');\n        yield put(memberLevelsData(data));\n    } catch (error) {\n        yield put(memberLevelsError());\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}