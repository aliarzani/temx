{"ast":null,"code":"import { CHANGE_LANGUAGE } from './constants';\nimport { languageMap } from '../../../translations';\nvar defaultLanguage = {\n  code: 'en'\n};\nvar currentLang = localStorage.getItem('lang_code') || defaultLanguage.code;\nexport var initialChangeLanguageState = {\n  lang: currentLang,\n  messages: languageMap[currentLang]\n};\nexport var changeLanguageReducer = function changeLanguageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialChangeLanguageState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CHANGE_LANGUAGE:\n      localStorage.setItem('lang_code', action.payload);\n      return {\n        lang: action.payload,\n        messages: languageMap[action.payload]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/public/i18n/reducer.ts"],"names":["CHANGE_LANGUAGE","languageMap","defaultLanguage","code","currentLang","localStorage","getItem","initialChangeLanguageState","lang","messages","changeLanguageReducer","state","action","type","setItem","payload"],"mappings":"AAAA,SACIA,eADJ,QAEO,aAFP;AAIA,SAASC,WAAT,QAA4B,uBAA5B;AAUA,IAAMC,eAAe,GAAG;AACpBC,EAAAA,IAAI,EAAE;AADc,CAAxB;AAIA,IAAMC,WAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,KAAqCJ,eAAe,CAACC,IAAjF;AAEA,OAAO,IAAMI,0BAAyC,GAAG;AACrDC,EAAAA,IAAI,EAAEJ,WAD+C;AAErDK,EAAAA,QAAQ,EAAER,WAAW,CAACG,WAAD;AAFgC,CAAlD;AAKP,OAAO,IAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAsE;AAAA,MAArEC,KAAqE,uEAA7DJ,0BAA6D;AAAA,MAAjCK,MAAiC;;AACvG,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,eAAL;AACIK,MAAAA,YAAY,CAACS,OAAb,CAAqB,WAArB,EAAkCF,MAAM,CAACG,OAAzC;AACA,aAAO;AACHP,QAAAA,IAAI,EAAEI,MAAM,CAACG,OADV;AAEHN,QAAAA,QAAQ,EAAER,WAAW,CAACW,MAAM,CAACG,OAAR;AAFlB,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AARR;AAUH,CAXM","sourcesContent":["import {\n    CHANGE_LANGUAGE,\n} from './constants';\n\nimport { languageMap } from '../../../translations';\nimport {\n    ChangeLanguageAction,\n} from './actions';\n\nexport interface LanguageState {\n    lang: string;\n    messages: { [pair: string]: string };\n}\n\nconst defaultLanguage = {\n    code: 'en',\n};\n\nconst currentLang: string = localStorage.getItem('lang_code') || defaultLanguage.code;\n\nexport const initialChangeLanguageState: LanguageState = {\n    lang: currentLang,\n    messages: languageMap[currentLang],\n};\n\nexport const changeLanguageReducer = (state = initialChangeLanguageState, action: ChangeLanguageAction) => {\n    switch (action.type) {\n        case CHANGE_LANGUAGE:\n            localStorage.setItem('lang_code', action.payload);\n            return {\n                lang: action.payload,\n                messages: languageMap[action.payload],\n             };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}