{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(logoutSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { signInRequire2FA } from '../../auth';\nimport { resetHistory } from '../../history';\nimport { userOpenOrdersReset } from '../../openOrders';\nimport { userReset } from '../../profile';\nimport { logoutError } from '../actions';\nvar requestOptions = {\n  apiVersion: 'barong'\n};\nexport function logoutSaga(action) {\n  return _regeneratorRuntime.wrap(function logoutSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.delete(requestOptions), '/identity/sessions');\n\n        case 3:\n          _context.next = 5;\n          return put(userReset());\n\n        case 5:\n          _context.next = 7;\n          return put(userOpenOrdersReset());\n\n        case 7:\n          _context.next = 9;\n          return put(signInRequire2FA({\n            require2fa: false\n          }));\n\n        case 9:\n          _context.next = 11;\n          return put(resetHistory());\n\n        case 11:\n          _context.next = 19;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 17;\n          return put(logoutError(_context.t0));\n\n        case 17:\n          _context.next = 19;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 13]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/auth/sagas/logoutSaga.ts"],"names":["logoutSaga","call","put","API","alertPush","signInRequire2FA","resetHistory","userOpenOrdersReset","userReset","logoutError","requestOptions","apiVersion","action","delete","require2fa","message","code","type"],"mappings":";;;;yBAciBA,U;;AAdjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,WAAT,QAAyC,YAAzC;AAEA,IAAMC,cAA8B,GAAG;AACnCC,EAAAA,UAAU,EAAE;AADuB,CAAvC;AAIA,OAAO,SAAUX,UAAV,CAAqBY,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,iBAAMX,IAAI,CAACE,GAAG,CAACU,MAAJ,CAAWH,cAAX,CAAD,EAA6B,oBAA7B,CAAV;;AAFD;AAAA;AAGC,iBAAMR,GAAG,CAACM,SAAS,EAAV,CAAT;;AAHD;AAAA;AAIC,iBAAMN,GAAG,CAACK,mBAAmB,EAApB,CAAT;;AAJD;AAAA;AAKC,iBAAML,GAAG,CAACG,gBAAgB,CAAC;AAAES,YAAAA,UAAU,EAAE;AAAd,WAAD,CAAjB,CAAT;;AALD;AAAA;AAMC,iBAAMZ,GAAG,CAACI,YAAY,EAAb,CAAT;;AAND;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQC,iBAAMJ,GAAG,CAACO,WAAW,aAAZ,CAAT;;AARD;AAAA;AASC,iBAAMP,GAAG,CAACE,SAAS,CAAC;AAACW,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBC,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CC,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AATD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { signInRequire2FA } from '../../auth';\nimport { resetHistory } from '../../history';\nimport { userOpenOrdersReset } from '../../openOrders';\nimport { userReset } from '../../profile';\nimport { logoutError, LogoutFetch } from '../actions';\n\nconst requestOptions: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* logoutSaga(action: LogoutFetch) {\n    try {\n        yield call(API.delete(requestOptions), '/identity/sessions');\n        yield put(userReset());\n        yield put(userOpenOrdersReset());\n        yield put(signInRequire2FA({ require2fa: false }));\n        yield put(resetHistory());\n    } catch (error) {\n        yield put(logoutError(error));\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}