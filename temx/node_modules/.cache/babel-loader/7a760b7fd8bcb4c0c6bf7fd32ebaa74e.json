{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(tiersSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { tiersData, tiersDisable, tiersError } from '../actions';\nvar tiersOptions = {\n  apiVersion: 'applogic'\n};\nexport function tiersSaga(action) {\n  var _action$payload, uid, currency, tier, tiersDisabled;\n\n  return _regeneratorRuntime.wrap(function tiersSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _action$payload = action.payload, uid = _action$payload.uid, currency = _action$payload.currency;\n          _context.next = 4;\n          return call(API.get(tiersOptions), \"/tiers/\".concat(uid, \"?currency=\").concat(currency));\n\n        case 4:\n          tier = _context.sent;\n          _context.next = 7;\n          return put(tiersData(tier));\n\n        case 7:\n          _context.next = 19;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          tiersDisabled = _context.t0.code === 204;\n\n          if (!tiersDisabled) {\n            _context.next = 17;\n            break;\n          }\n\n          _context.next = 15;\n          return put(tiersDisable());\n\n        case 15:\n          _context.next = 19;\n          break;\n\n        case 17:\n          _context.next = 19;\n          return put(tiersError(_context.t0));\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/profile/sagas/tiersSaga.ts"],"names":["tiersSaga","call","put","API","tiersData","tiersDisable","tiersError","tiersOptions","apiVersion","action","payload","uid","currency","get","tier","tiersDisabled","code"],"mappings":";;;;yBAciBA,S;;AAdjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SACIC,SADJ,EAEIC,YAFJ,EAGIC,UAHJ,QAKO,YALP;AAOA,IAAMC,YAA4B,GAAG;AACjCC,EAAAA,UAAU,EAAE;AADqB,CAArC;AAIA,OAAO,SAAUR,SAAV,CAAoBS,MAApB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAE2BA,MAAM,CAACC,OAFlC,EAESC,GAFT,mBAESA,GAFT,EAEcC,QAFd,mBAEcA,QAFd;AAAA;AAGc,iBAAMX,IAAI,CAACE,GAAG,CAACU,GAAJ,CAAQN,YAAR,CAAD,mBAAkCI,GAAlC,uBAAkDC,QAAlD,EAAV;;AAHd;AAGOE,UAAAA,IAHP;AAAA;AAIC,iBAAMZ,GAAG,CAACE,SAAS,CAACU,IAAD,CAAV,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAMOC,UAAAA,aANP,GAMuB,YAAMC,IAAN,KAAe,GANtC;;AAAA,eAOKD,aAPL;AAAA;AAAA;AAAA;;AAAA;AAQK,iBAAMb,GAAG,CAACG,YAAY,EAAb,CAAT;;AARL;AAAA;AAAA;;AAAA;AAAA;AAUK,iBAAMH,GAAG,CAACI,UAAU,aAAX,CAAT;;AAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport {\n    tiersData,\n    tiersDisable,\n    tiersError,\n    TiersFetch,\n} from '../actions';\n\nconst tiersOptions: RequestOptions = {\n    apiVersion: 'applogic',\n};\n\nexport function* tiersSaga(action: TiersFetch) {\n    try {\n        const { uid, currency } = action.payload;\n        const tier = yield call(API.get(tiersOptions), `/tiers/${uid}?currency=${currency}`);\n        yield put(tiersData(tier));\n    } catch (error) {\n        const tiersDisabled = error.code === 204;\n        if (tiersDisabled) {\n            yield put(tiersDisable());\n        } else {\n            yield put(tiersError(error));\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}