{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(confirmPhoneSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../../api';\nimport { alertPush } from '../../../../public/alert';\nimport { changeUserLevel } from '../../../profile';\nimport { verifyPhoneData, verifyPhoneError } from '../actions';\nvar sessionsConfig = {\n  apiVersion: 'barong'\n};\nexport function confirmPhoneSaga(action) {\n  return _regeneratorRuntime.wrap(function confirmPhoneSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.post(sessionsConfig), '/resource/phones/verify', action.payload);\n\n        case 3:\n          _context.next = 5;\n          return put(verifyPhoneData({\n            message: 'success.phone.confirmation.message'\n          }));\n\n        case 5:\n          _context.next = 7;\n          return put(changeUserLevel({\n            level: 2\n          }));\n\n        case 7:\n          _context.next = 9;\n          return put(alertPush({\n            message: ['success.phone.confirmed'],\n            type: 'success'\n          }));\n\n        case 9:\n          _context.next = 17;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 15;\n          return put(verifyPhoneError(_context.t0));\n\n        case 15:\n          _context.next = 17;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 11]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/kyc/phone/sagas/confirmPhoneSaga.ts"],"names":["confirmPhoneSaga","call","put","API","alertPush","changeUserLevel","verifyPhoneData","verifyPhoneError","sessionsConfig","apiVersion","action","post","payload","message","level","type","code"],"mappings":";;;;yBAeiBA,gB;;AAfjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,oBAApC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAEIC,eAFJ,EAGIC,gBAHJ,QAIO,YAJP;AAMA,IAAMC,cAA8B,GAAG;AACnCC,EAAAA,UAAU,EAAE;AADuB,CAAvC;AAIA,OAAO,SAAUT,gBAAV,CAA2BU,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,iBAAMT,IAAI,CAACE,GAAG,CAACQ,IAAJ,CAASH,cAAT,CAAD,EAA2B,yBAA3B,EAAsDE,MAAM,CAACE,OAA7D,CAAV;;AAFD;AAAA;AAGC,iBAAMV,GAAG,CAACI,eAAe,CAAC;AAAEO,YAAAA,OAAO,EAAE;AAAX,WAAD,CAAhB,CAAT;;AAHD;AAAA;AAIC,iBAAMX,GAAG,CAACG,eAAe,CAAC;AAAES,YAAAA,KAAK,EAAE;AAAT,WAAD,CAAhB,CAAT;;AAJD;AAAA;AAKC,iBAAMZ,GAAG,CAACE,SAAS,CAAC;AAACS,YAAAA,OAAO,EAAE,CAAC,yBAAD,CAAV;AAAuCE,YAAAA,IAAI,EAAE;AAA7C,WAAD,CAAV,CAAT;;AALD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOC,iBAAMb,GAAG,CAACK,gBAAgB,aAAjB,CAAT;;AAPD;AAAA;AAQC,iBAAML,GAAG,CAACE,SAAS,CAAC;AAACS,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBG,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CD,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../../api';\nimport { alertPush } from '../../../../public/alert';\nimport { changeUserLevel } from '../../../profile';\nimport {\n    SendCodeFetch,\n    verifyPhoneData,\n    verifyPhoneError,\n} from '../actions';\n\nconst sessionsConfig: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* confirmPhoneSaga(action: SendCodeFetch) {\n    try {\n        yield call(API.post(sessionsConfig), '/resource/phones/verify', action.payload);\n        yield put(verifyPhoneData({ message: 'success.phone.confirmation.message' }));\n        yield put(changeUserLevel({ level: 2 }));\n        yield put(alertPush({message: ['success.phone.confirmed'], type: 'success'}));\n    } catch (error) {\n        yield put(verifyPhoneError(error));\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}