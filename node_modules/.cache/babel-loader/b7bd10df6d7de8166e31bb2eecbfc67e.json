{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userOpenOrdersFetchSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { userOpenOrdersData, userOpenOrdersError } from '../actions';\nvar ordersOptions = {\n  apiVersion: 'peatio'\n};\nexport function userOpenOrdersFetchSaga(action) {\n  var market, list;\n  return _regeneratorRuntime.wrap(function userOpenOrdersFetchSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          market = action.payload.market;\n          _context.next = 4;\n          return call(API.get(ordersOptions), \"/market/orders?market=\".concat(market.id, \"&state=wait\"));\n\n        case 4:\n          list = _context.sent;\n          _context.next = 7;\n          return put(userOpenOrdersData(list));\n\n        case 7:\n          _context.next = 15;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 13;\n          return put(userOpenOrdersError());\n\n        case 13:\n          _context.next = 15;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/openOrders/sagas/userOpenOrdersFetchSaga.ts"],"names":["userOpenOrdersFetchSaga","call","put","API","alertPush","userOpenOrdersData","userOpenOrdersError","ordersOptions","apiVersion","action","market","payload","get","id","list","message","code","type"],"mappings":";;;;yBAeiBA,uB;;AAfjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SACIC,kBADJ,EAEIC,mBAFJ,QAIO,YAJP;AAOA,IAAMC,aAA6B,GAAG;AAClCC,EAAAA,UAAU,EAAE;AADsB,CAAtC;AAIA,OAAO,SAAUR,uBAAV,CAAkCS,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAESC,UAAAA,MAFT,GAEoBD,MAAM,CAACE,OAF3B,CAESD,MAFT;AAAA;AAGc,iBAAMT,IAAI,CAACE,GAAG,CAACS,GAAJ,CAAQL,aAAR,CAAD,kCAAkDG,MAAM,CAACG,EAAzD,iBAAV;;AAHd;AAGOC,UAAAA,IAHP;AAAA;AAKC,iBAAMZ,GAAG,CAACG,kBAAkB,CAACS,IAAD,CAAnB,CAAT;;AALD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOC,iBAAMZ,GAAG,CAACI,mBAAmB,EAApB,CAAT;;AAPD;AAAA;AAQC,iBAAMJ,GAAG,CAACE,SAAS,CAAC;AAACW,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBC,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CC,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AARD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport {\n    userOpenOrdersData,\n    userOpenOrdersError,\n    UserOpenOrdersFetch,\n} from '../actions';\n\n\nconst ordersOptions: RequestOptions = {\n    apiVersion: 'peatio',\n};\n\nexport function* userOpenOrdersFetchSaga(action: UserOpenOrdersFetch) {\n    try {\n        const { market } = action.payload;\n        const list = yield call(API.get(ordersOptions), `/market/orders?market=${market.id}&state=wait`);\n\n        yield put(userOpenOrdersData(list));\n    } catch (error) {\n        yield put(userOpenOrdersError());\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}