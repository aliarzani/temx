{"ast":null,"code":"import _slicedToArray from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/temx/src/containers/ToolBar/MarketSelector/MarketsList/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Decimal, Table } from '@openware/components';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { injectIntl, intlShape } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { incrementalOrderBook } from '../../../../api';\nimport { SortAsc, SortDefault, SortDesc } from '../../../../assets/images/SortIcons';\nimport { depthFetch, selectCurrentMarket, selectMarkets, selectMarketTickers, setCurrentMarket, setCurrentPrice } from '../../../../modules';\n\nvar handleChangeSortIcon = function handleChangeSortIcon(sortBy, id, reverseOrder) {\n  if (sortBy !== 'none' && id === sortBy && !reverseOrder) {\n    return React.createElement(SortDesc, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n  }\n\n  if (sortBy !== 'none' && id === sortBy && reverseOrder) {\n    return React.createElement(SortAsc, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(SortDefault, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  });\n};\n\n//tslint:disable jsx-no-lambda\nvar MarketsListComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MarketsListComponent, _React$Component);\n\n  //tslint:disable-next-line:no-any\n  function MarketsListComponent(props) {\n    var _this;\n\n    _classCallCheck(this, MarketsListComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MarketsListComponent).call(this, props));\n\n    _this.currencyPairSelectHandler = function (key) {\n      var markets = _this.props.markets;\n      var marketToSet = markets.find(function (el) {\n        return el.name === key;\n      });\n\n      _this.props.setCurrentPrice();\n\n      if (marketToSet) {\n        _this.props.setCurrentMarket(marketToSet);\n\n        if (!incrementalOrderBook()) {\n          _this.props.depthFetch(marketToSet);\n        }\n      }\n    };\n\n    _this.getHeaders = function () {\n      return [{\n        id: 'id',\n        translationKey: 'market'\n      }, {\n        id: 'last',\n        translationKey: 'last_price'\n      }, {\n        id: 'vol',\n        translationKey: 'volume'\n      }, {\n        id: 'price_change_percent_num',\n        translationKey: 'change'\n      }].map(function (obj) {\n        var _this$state = _this.state,\n            sortBy = _this$state.sortBy,\n            reverseOrder = _this$state.reverseOrder;\n        return _objectSpread({}, obj, {\n          selected: sortBy === obj.id,\n          reversed: sortBy === obj.id && reverseOrder\n        });\n      }).map(function (obj) {\n        var _this$state2 = _this.state,\n            sortBy = _this$state2.sortBy,\n            reverseOrder = _this$state2.reverseOrder;\n        var classname = classnames({\n          'pg-dropdown-markets-list-container__header-selected': obj.selected\n        });\n        return React.createElement(\"span\", {\n          className: classname,\n          key: obj.id,\n          onClick: function onClick() {\n            return _this.handleHeaderClick(obj.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, _this.props.intl.formatMessage({\n          id: \"page.body.trade.header.markets.content.\".concat(obj.translationKey)\n        }), React.createElement(\"span\", {\n          className: \"sort-icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, handleChangeSortIcon(sortBy, obj.id, reverseOrder)));\n      });\n    };\n\n    _this.handleHeaderClick = function (key) {\n      var _this$state3 = _this.state,\n          sortBy = _this$state3.sortBy,\n          reverseOrder = _this$state3.reverseOrder;\n\n      if (key !== sortBy) {\n        _this.setState({\n          sortBy: key,\n          reverseOrder: false\n        });\n      } else if (key === sortBy && !reverseOrder) {\n        _this.setState({\n          reverseOrder: true\n        });\n      } else {\n        _this.setState({\n          sortBy: 'none',\n          reverseOrder: false\n        });\n      }\n    };\n\n    _this.state = {\n      sortBy: 'none',\n      reverseOrder: false\n    };\n    return _this;\n  }\n\n  _createClass(MarketsListComponent, [{\n    key: \"render\",\n    value: function render() {\n      var data = this.mapMarkets();\n      return React.createElement(\"div\", {\n        className: \"pg-dropdown-markets-list-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Table, {\n        data: data.length > 0 ? data : [[]],\n        header: this.getHeaders(),\n        onSelect: this.currencyPairSelectHandler,\n        selectedKey: this.props.currentMarket && this.props.currentMarket.name,\n        rowKeyIndex: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"mapMarkets\",\n    value: function mapMarkets() {\n      var _this$props = this.props,\n          markets = _this$props.markets,\n          marketTickers = _this$props.marketTickers,\n          search = _this$props.search,\n          currencyQuote = _this$props.currencyQuote;\n      var defaultTicker = {\n        last: 0,\n        vol: 0,\n        price_change_percent: '+0.00%'\n      };\n      var regExp = new RegExp(search.toLowerCase());\n      var arr = [];\n      var marketsMapped = markets.map(function (market) {\n        return _objectSpread({}, market, {\n          last: (marketTickers[market.id] || defaultTicker).last,\n          vol: (marketTickers[market.id] || defaultTicker).vol,\n          price_change_percent: (marketTickers[market.id] || defaultTicker).price_change_percent,\n          price_change_percent_num: Number.parseFloat((marketTickers[market.id] || defaultTicker).price_change_percent)\n        });\n      });\n      var _this$state4 = this.state,\n          sortBy = _this$state4.sortBy,\n          reverseOrder = _this$state4.reverseOrder;\n\n      if (sortBy !== 'none') {\n        marketsMapped.sort(function (a, b) {\n          return a[sortBy] > b[sortBy] ? 1 : b[sortBy] > a[sortBy] ? -1 : 0;\n        });\n      }\n\n      reverseOrder && marketsMapped.reverse();\n      return marketsMapped.reduce(function (pV, cV) {\n        var _cV$name$toLowerCase$ = cV.name.toLowerCase().split('/'),\n            _cV$name$toLowerCase$2 = _slicedToArray(_cV$name$toLowerCase$, 2),\n            quote = _cV$name$toLowerCase$2[1];\n\n        if (regExp.test(cV.id.toLowerCase()) && (currencyQuote === '' || currencyQuote.toLowerCase() === quote || currencyQuote.toLowerCase() === 'all')) {\n          pV.push(cV);\n        }\n\n        return pV;\n      }, arr).map(function (market, index) {\n        var isPositive = /\\+/.test((marketTickers[market.id] || defaultTicker).price_change_percent);\n        var classname = classnames({\n          'pg-dropdown-markets-list-container__positive': isPositive,\n          'pg-dropdown-markets-list-container__negative': !isPositive\n        });\n        return [market.name, React.createElement(\"span\", {\n          className: classname,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, Decimal.format(Number(market.last), market.price_precision)), React.createElement(\"span\", {\n          className: classname,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, Decimal.format(Number(market.vol), market.amount_precision)), React.createElement(\"span\", {\n          className: classname,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, market.price_change_percent)];\n      });\n    }\n  }]);\n\n  return MarketsListComponent;\n}(React.Component);\n\nMarketsListComponent.propTypes = {\n  intl: intlShape.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentMarket: selectCurrentMarket(state),\n    markets: selectMarkets(state),\n    marketTickers: selectMarketTickers(state)\n  };\n};\n\nvar mapDispatchToProps = {\n  setCurrentMarket: setCurrentMarket,\n  depthFetch: depthFetch,\n  setCurrentPrice: setCurrentPrice\n};\nexport var MarketsList = injectIntl(connect(mapStateToProps, mapDispatchToProps)(MarketsListComponent));","map":{"version":3,"sources":["/workspaces/temx/src/containers/ToolBar/MarketSelector/MarketsList/index.tsx"],"names":["Decimal","Table","classnames","React","injectIntl","intlShape","connect","incrementalOrderBook","SortAsc","SortDefault","SortDesc","depthFetch","selectCurrentMarket","selectMarkets","selectMarketTickers","setCurrentMarket","setCurrentPrice","handleChangeSortIcon","sortBy","id","reverseOrder","MarketsListComponent","props","currencyPairSelectHandler","key","markets","marketToSet","find","el","name","getHeaders","translationKey","map","obj","state","selected","reversed","classname","handleHeaderClick","intl","formatMessage","setState","data","mapMarkets","length","currentMarket","marketTickers","search","currencyQuote","defaultTicker","last","vol","price_change_percent","regExp","RegExp","toLowerCase","arr","marketsMapped","market","price_change_percent_num","Number","parseFloat","sort","a","b","reverse","reduce","pV","cV","split","quote","test","push","index","isPositive","format","price_precision","amount_precision","Component","propTypes","isRequired","mapStateToProps","mapDispatchToProps","MarketsList"],"mappings":"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","sourcesContent":["import { Decimal, Table } from '@openware/components';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport {\n    InjectedIntlProps,\n    injectIntl,\n    intlShape,\n} from 'react-intl';\nimport { connect } from 'react-redux';\nimport { incrementalOrderBook } from '../../../../api';\nimport { SortAsc, SortDefault, SortDesc } from '../../../../assets/images/SortIcons';\nimport {\n    depthFetch,\n    Market,\n    RootState,\n    selectCurrentMarket,\n    selectMarkets,\n    selectMarketTickers,\n    setCurrentMarket,\n    setCurrentPrice,\n    Ticker,\n} from '../../../../modules';\n\ninterface ReduxProps {\n    currentMarket: Market | undefined;\n    markets: Market[];\n    marketTickers: {\n        [key: string]: Ticker,\n    };\n}\n\ninterface DispatchProps {\n    setCurrentMarket: typeof setCurrentMarket;\n    depthFetch: typeof depthFetch;\n    setCurrentPrice: typeof setCurrentPrice;\n}\n\ninterface OwnProps {\n    search: string;\n    currencyQuote: string;\n}\n\ninterface State {\n    sortBy: string;\n    reverseOrder: boolean;\n}\n\nconst handleChangeSortIcon = (sortBy: string, id: string, reverseOrder: boolean) => {\n    if (sortBy !== 'none' && id === sortBy && !reverseOrder) {\n        return <SortDesc/>;\n    }\n\n    if (sortBy !== 'none' && id === sortBy && reverseOrder) {\n        return <SortAsc/>;\n    }\n\n    return <SortDefault/>;\n};\n\ntype Props = ReduxProps & OwnProps & DispatchProps & InjectedIntlProps;\n\n//tslint:disable jsx-no-lambda\nclass MarketsListComponent extends React.Component<Props, State> {\n    //tslint:disable-next-line:no-any\n    public static propTypes: React.ValidationMap<any> = {\n        intl: intlShape.isRequired,\n    };\n\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            sortBy: 'none',\n            reverseOrder: false,\n        };\n    }\n\n    public render() {\n        const data = this.mapMarkets();\n        return (\n            <div className=\"pg-dropdown-markets-list-container\">\n                <Table\n                    data={data.length > 0 ? data : [[]]}\n                    header={this.getHeaders()}\n                    onSelect={this.currencyPairSelectHandler}\n                    selectedKey={this.props.currentMarket && this.props.currentMarket.name}\n                    rowKeyIndex={0}\n                />\n            </div>\n        );\n    }\n\n    private currencyPairSelectHandler = (key: string) => {\n        const { markets } = this.props;\n        const marketToSet = markets.find(el => el.name === key);\n\n        this.props.setCurrentPrice();\n        if (marketToSet) {\n            this.props.setCurrentMarket(marketToSet);\n            if (!incrementalOrderBook()) {\n              this.props.depthFetch(marketToSet);\n            }\n        }\n    };\n\n    private getHeaders = () => [\n        {id: 'id', translationKey: 'market'},\n        {id: 'last', translationKey: 'last_price'},\n        {id: 'vol', translationKey: 'volume'},\n        {id: 'price_change_percent_num', translationKey: 'change'},\n    ].map(obj => {\n        const {sortBy, reverseOrder} = this.state;\n        return (\n            {\n                ...obj,\n                selected: sortBy === obj.id,\n                reversed: sortBy === obj.id && reverseOrder,\n            }\n        );\n    }).map(obj => {\n        const {sortBy, reverseOrder} = this.state;\n        const classname = classnames({\n            'pg-dropdown-markets-list-container__header-selected': obj.selected,\n        });\n\n        return (\n            <span className={classname} key={obj.id} onClick={() => this.handleHeaderClick(obj.id)}>\n            {this.props.intl.formatMessage({id: `page.body.trade.header.markets.content.${obj.translationKey}`})}\n                <span className=\"sort-icon\">\n                    {handleChangeSortIcon(sortBy, obj.id, reverseOrder)}\n                </span>\n            </span>\n        );\n    });\n\n    private mapMarkets() {\n        const { markets, marketTickers, search, currencyQuote } = this.props;\n        const defaultTicker = {\n            last: 0,\n            vol: 0,\n            price_change_percent: '+0.00%',\n        };\n        const regExp = new RegExp(search.toLowerCase());\n        const arr: Market[] = [];\n\n        const marketsMapped = markets.map((market: Market) => {\n            return {\n                ...market,\n                last: (marketTickers[market.id] || defaultTicker).last,\n                vol: (marketTickers[market.id] || defaultTicker).vol,\n                price_change_percent: (marketTickers[market.id] || defaultTicker).price_change_percent,\n                price_change_percent_num: Number.parseFloat((marketTickers[market.id] || defaultTicker).price_change_percent),\n            };\n        });\n\n        const {sortBy, reverseOrder} = this.state;\n\n        if (sortBy !== 'none') {\n            marketsMapped.sort((a, b) => a[sortBy] > b[sortBy] ? 1 : b[sortBy] > a[sortBy] ? -1 : 0);\n        }\n\n        reverseOrder && marketsMapped.reverse();\n\n        return marketsMapped.reduce((pV, cV) => {\n            const [,quote] = cV.name.toLowerCase().split('/');\n            if (\n                regExp.test(cV.id.toLowerCase()) &&\n                (\n                    currencyQuote === '' ||\n                    currencyQuote.toLowerCase() === quote ||\n                    currencyQuote.toLowerCase() === 'all'\n                )\n            ) {\n                pV.push(cV);\n            }\n            return pV;\n        }, arr).map((market: Market & Ticker, index: number) => {\n            const isPositive = /\\+/.test((marketTickers[market.id] || defaultTicker).price_change_percent);\n            const classname = classnames({\n                'pg-dropdown-markets-list-container__positive': isPositive,\n                'pg-dropdown-markets-list-container__negative': !isPositive,\n            });\n            return [\n                market.name,\n                (<span className={classname}>{Decimal.format(Number(market.last), market.price_precision)}</span>),\n                (<span className={classname}>{Decimal.format(Number(market.vol), market.amount_precision)}</span>),\n                (<span className={classname}>{market.price_change_percent}</span>),\n            ];\n        });\n    }\n\n    private handleHeaderClick = (key: string) => {\n        const {sortBy, reverseOrder} = this.state;\n        if (key !== sortBy) {\n            this.setState({sortBy: key, reverseOrder: false});\n        } else if (key === sortBy && !reverseOrder) {\n            this.setState({reverseOrder: true});\n        } else {\n            this.setState({sortBy: 'none', reverseOrder: false});\n        }\n    }\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    currentMarket: selectCurrentMarket(state),\n    markets: selectMarkets(state),\n    marketTickers: selectMarketTickers(state),\n});\n\nconst mapDispatchToProps = {\n    setCurrentMarket,\n    depthFetch,\n    setCurrentPrice,\n};\n\nexport const MarketsList = injectIntl(connect(mapStateToProps, mapDispatchToProps)(MarketsListComponent));\n"]},"metadata":{},"sourceType":"module"}