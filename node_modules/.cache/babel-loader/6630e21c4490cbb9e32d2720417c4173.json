{"ast":null,"code":"import _defineProperty from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { handleIncrementalUpdate } from '../../../helpers';\nimport { DEPTH_DATA, DEPTH_DATA_INCREMENT, DEPTH_DATA_SNAPSHOT, DEPTH_ERROR, DEPTH_FETCH, DEPTH_INCREMENT_SUBSCRIBE, ORDER_BOOK_DATA, ORDER_BOOK_ERROR, ORDER_BOOK_FETCH } from './constants';\n// TODO: Move market depth to his own module\nexport var initialOrderBook = {\n  asks: [],\n  bids: [],\n  loading: false\n};\nexport var initialDepth = {\n  asks: [],\n  bids: [],\n  loading: false\n};\nexport var initialIncrementDepth = {\n  marketId: undefined,\n  asks: [],\n  bids: [],\n  loading: false\n};\nexport var orderBookReducer = function orderBookReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialOrderBook;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ORDER_BOOK_FETCH:\n      return _objectSpread({}, state, {\n        loading: true,\n        error: undefined\n      });\n\n    case ORDER_BOOK_DATA:\n      var _action$payload = action.payload,\n          asks = _action$payload.asks,\n          bids = _action$payload.bids;\n      return _objectSpread({}, state, {\n        asks: asks,\n        bids: bids,\n        loading: false,\n        error: undefined\n      });\n\n    case ORDER_BOOK_ERROR:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n};\nexport var depthReducer = function depthReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialDepth;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case DEPTH_FETCH:\n      return _objectSpread({}, state, {\n        loading: true,\n        error: undefined\n      });\n\n    case DEPTH_DATA:\n      var _action$payload2 = action.payload,\n          asks = _action$payload2.asks,\n          bids = _action$payload2.bids;\n      return _objectSpread({}, state, {\n        asks: asks,\n        bids: bids,\n        loading: false,\n        error: undefined\n      });\n\n    case DEPTH_ERROR:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.error\n      });\n\n    default:\n      return state;\n  }\n};\nexport var incrementDepthReducer = function incrementDepthReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialIncrementDepth;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case DEPTH_INCREMENT_SUBSCRIBE:\n      return _objectSpread({}, state, {\n        marketId: action.payload,\n        loading: state.marketId === undefined || state.marketId !== action.payload\n      });\n\n    case DEPTH_DATA_INCREMENT:\n      if (action.payload.asks) {\n        return _objectSpread({}, state, {\n          asks: handleIncrementalUpdate(state.asks, action.payload.asks, 'asks')\n        });\n      }\n\n      if (action.payload.bids) {\n        return _objectSpread({}, state, {\n          bids: handleIncrementalUpdate(state.bids, action.payload.bids, 'bids')\n        });\n      }\n\n      return state;\n\n    case DEPTH_DATA_SNAPSHOT:\n      return _objectSpread({}, state, {\n        asks: action.payload.asks,\n        bids: action.payload.bids,\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/workspaces/temx/src/modules/public/orderBook/reducer.ts"],"names":["handleIncrementalUpdate","DEPTH_DATA","DEPTH_DATA_INCREMENT","DEPTH_DATA_SNAPSHOT","DEPTH_ERROR","DEPTH_FETCH","DEPTH_INCREMENT_SUBSCRIBE","ORDER_BOOK_DATA","ORDER_BOOK_ERROR","ORDER_BOOK_FETCH","initialOrderBook","asks","bids","loading","initialDepth","initialIncrementDepth","marketId","undefined","orderBookReducer","state","action","type","error","payload","depthReducer","incrementDepthReducer"],"mappings":"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","sourcesContent":["import { handleIncrementalUpdate } from '../../../helpers';\nimport { DepthActions, OrderBookActions } from './actions';\nimport {\n  DEPTH_DATA,\n  DEPTH_DATA_INCREMENT,\n  DEPTH_DATA_SNAPSHOT,\n  DEPTH_ERROR,\n  DEPTH_FETCH,\n  DEPTH_INCREMENT_SUBSCRIBE,\n  ORDER_BOOK_DATA,\n  ORDER_BOOK_ERROR,\n  ORDER_BOOK_FETCH,\n} from './constants';\nimport {\n  DepthIncrementState,\n  DepthState,\n  OrderBookState,\n} from './types';\n\n// TODO: Move market depth to his own module\n\nexport const initialOrderBook: OrderBookState = {\n  asks: [],\n  bids: [],\n  loading: false,\n};\n\nexport const initialDepth: DepthState = {\n  asks: [],\n  bids: [],\n  loading: false,\n};\n\nexport const initialIncrementDepth: DepthIncrementState = {\n  marketId: undefined,\n  asks: [],\n  bids: [],\n  loading: false,\n};\n\nexport const orderBookReducer = (state = initialOrderBook, action: OrderBookActions): OrderBookState => {\n  switch (action.type) {\n    case ORDER_BOOK_FETCH:\n      return {\n        ...state,\n        loading: true,\n        error: undefined,\n      };\n    case ORDER_BOOK_DATA:\n      const { asks, bids } = action.payload;\n      return {\n        ...state,\n        asks,\n        bids,\n        loading: false,\n        error: undefined,\n      };\n    case ORDER_BOOK_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    default:\n      return state;\n    }\n};\n\nexport const depthReducer = (state = initialDepth, action: DepthActions): DepthState => {\n  switch (action.type) {\n    case DEPTH_FETCH:\n      return {\n        ...state,\n        loading: true,\n        error: undefined,\n      };\n    case DEPTH_DATA:\n      const { asks, bids } = action.payload;\n      return {\n        ...state,\n        asks,\n        bids,\n        loading: false,\n        error: undefined,\n      };\n    case DEPTH_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.error,\n      };\n    default:\n      return state;\n    }\n};\n\nexport const incrementDepthReducer = (state = initialIncrementDepth, action: DepthActions): DepthIncrementState => {\n  switch (action.type) {\n    case DEPTH_INCREMENT_SUBSCRIBE:\n      return {\n        ...state,\n        marketId: action.payload,\n        loading: state.marketId === undefined || state.marketId !== action.payload,\n      };\n    case DEPTH_DATA_INCREMENT:\n      if (action.payload.asks) {\n        return {\n          ...state,\n          asks: handleIncrementalUpdate(state.asks, action.payload.asks, 'asks'),\n        };\n      }\n\n      if (action.payload.bids) {\n        return {\n          ...state,\n          bids: handleIncrementalUpdate(state.bids, action.payload.bids, 'bids'),\n        };\n      }\n\n      return state;\n    case DEPTH_DATA_SNAPSHOT:\n      return {\n        ...state,\n        asks: action.payload.asks,\n        bids: action.payload.bids,\n        loading: false,\n      };\n    default:\n      return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}