{"ast":null,"code":"import _classCallCheck from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/temx/src/components/Beneficiaries/index.tsx\";\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { TipIcon } from '../../assets/images/TipIcon';\nimport { TrashBin } from '../../assets/images/TrashBin';\nimport { beneficiariesDelete, selectBeneficiaries, selectBeneficiariesCreate, selectMemberLevels, selectUserInfo, memberLevelsFetch as _memberLevelsFetch } from '../../modules';\nimport { BeneficiariesActivateModal } from './BeneficiariesActivateModal';\nimport { BeneficiariesAddModal } from './BeneficiariesAddModal';\nimport { BeneficiariesFailAddModal } from './BeneficiariesFailAddModal';\nvar defaultBeneficiary = {\n  id: 0,\n  currency: '',\n  name: '',\n  state: '',\n  data: {\n    address: ''\n  }\n};\n\n// tslint:disable jsx-no-multiline-js\nvar BeneficiariesComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BeneficiariesComponent, _React$Component);\n\n  function BeneficiariesComponent(props) {\n    var _this;\n\n    _classCallCheck(this, BeneficiariesComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BeneficiariesComponent).call(this, props));\n\n    _this.renderAddAddress = function () {\n      return React.createElement(\"div\", {\n        className: \"pg-beneficiaries__add\",\n        onClick: _this.handleClickToggleAddAddressModal(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"pg-beneficiaries__add__label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, _this.translate('page.body.wallets.beneficiaries.addAddress')), React.createElement(\"img\", {\n        alt: \"plus-icon\",\n        src: require('../../assets/images/PlusIcon.svg'),\n        className: \"pg-beneficiaries__add__icon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderDropdownItem = function (item, index, type) {\n      if (type === 'fiat') {\n        return React.createElement(\"div\", {\n          key: index,\n          className: \"pg-beneficiaries__dropdown__body__item item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"item__left\",\n          onClick: _this.handleClickSelectAddress(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"item__left__title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.name')), React.createElement(\"span\", {\n          className: \"item__left__address\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, item.name)), React.createElement(\"div\", {\n          className: \"item__left\",\n          onClick: _this.handleClickSelectAddress(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 165\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"item__left__title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166\n          },\n          __self: this\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.fullName')), React.createElement(\"span\", {\n          className: \"item__left__address\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, item.data ? item.data.full_name : '')), React.createElement(\"div\", {\n          className: \"item__right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"item__right__delete\",\n          onClick: _this.handleClickDeleteAddress(item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(TrashBin, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }))));\n      }\n\n      return React.createElement(\"div\", {\n        key: index,\n        className: \"pg-beneficiaries__dropdown__body__item item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"item__left\",\n        onClick: _this.handleClickSelectAddress(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"item__left__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, _this.translate('page.body.wallets.beneficiaries.dropdown.address')), React.createElement(\"span\", {\n        className: \"item__left__address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, item.data ? item.data.address : '')), React.createElement(\"div\", {\n        className: \"item__right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"item__right__delete\",\n        onClick: _this.handleClickDeleteAddress(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(TrashBin, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }))));\n    };\n\n    _this.renderDropdownBody = function (beneficiaries, type) {\n      var dropdownBodyClassName = classnames('pg-beneficiaries__dropdown__body', {\n        'fiat-body': type === 'fiat'\n      });\n      return React.createElement(\"div\", {\n        className: dropdownBodyClassName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, beneficiaries && beneficiaries.map(function (item, index) {\n        return _this.renderDropdownItem(item, index, type);\n      }), React.createElement(\"div\", {\n        className: \"pg-beneficiaries__dropdown__body__add add\",\n        onClick: _this.handleClickToggleAddAddressModal(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"add__label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, _this.translate('page.body.wallets.beneficiaries.addAddress')), React.createElement(\"img\", {\n        alt: \"add-icon\",\n        className: \"add__icon\",\n        src: require('../../assets/images/PlusIcon.svg'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })));\n    };\n\n    _this.renderDropdownTipCryptoNote = function (note) {\n      return React.createElement(\"div\", {\n        className: \"tip__content__block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"tip__content__block__label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, _this.translate('page.body.wallets.beneficiaries.tipDescription')), React.createElement(\"span\", {\n        className: \"tip__content__block__value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, note));\n    };\n\n    _this.renderDropdownTipCrypto = function (currentWithdrawalBeneficiary) {\n      if (currentWithdrawalBeneficiary) {\n        return React.createElement(\"div\", {\n          className: \"pg-beneficiaries__dropdown__tip tip\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"tip__content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"tip__content__block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"tip__content__block__label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, _this.translate('page.body.wallets.beneficiaries.tipAddress')), React.createElement(\"span\", {\n          className: \"tip__content__block__value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, currentWithdrawalBeneficiary.data.address)), React.createElement(\"div\", {\n          className: \"tip__content__block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"tip__content__block__label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, _this.translate('page.body.wallets.beneficiaries.tipName')), React.createElement(\"span\", {\n          className: \"tip__content__block__value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, currentWithdrawalBeneficiary.name)), currentWithdrawalBeneficiary.description && _this.renderDropdownTipCryptoNote(currentWithdrawalBeneficiary.description)));\n      }\n\n      return;\n    };\n\n    _this.renderDropdownTipFiatDescription = function (description) {\n      return React.createElement(\"div\", {\n        className: \"tip__content__block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"tip__content__block__label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.description')), React.createElement(\"span\", {\n        className: \"tip__content__block__value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, description));\n    };\n\n    _this.renderDropdownTipFiat = function (currentWithdrawalBeneficiary) {\n      if (currentWithdrawalBeneficiary) {\n        return React.createElement(\"div\", {\n          className: \"pg-beneficiaries__dropdown__tip tip fiat-tip\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"tip__content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"tip__content__block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"tip__content__block__label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.name')), React.createElement(\"span\", {\n          className: \"tip__content__block__value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, currentWithdrawalBeneficiary.name)), currentWithdrawalBeneficiary.description && _this.renderDropdownTipFiatDescription(currentWithdrawalBeneficiary.description), React.createElement(\"div\", {\n          className: \"tip__content__block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"tip__content__block__label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.account')), React.createElement(\"span\", {\n          className: \"tip__content__block__value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257\n          },\n          __self: this\n        }, currentWithdrawalBeneficiary.data.account_number)), React.createElement(\"div\", {\n          className: \"tip__content__block\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"tip__content__block__label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260\n          },\n          __self: this\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.bankOfBeneficiary')), React.createElement(\"span\", {\n          className: \"tip__content__block__value\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, currentWithdrawalBeneficiary.data.bank_name))));\n      }\n\n      return;\n    };\n\n    _this.renderAddressDropdown = function (beneficiaries, currentWithdrawalBeneficiary, type) {\n      var _this$state = _this.state,\n          isOpenDropdown = _this$state.isOpenDropdown,\n          isOpenTip = _this$state.isOpenTip;\n      var dropdownClassName = classnames('pg-beneficiaries__dropdown', {\n        'pg-beneficiaries__dropdown--open': isOpenDropdown\n      });\n\n      if (type === 'fiat') {\n        return React.createElement(\"div\", {\n          className: dropdownClassName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"pg-beneficiaries__dropdown__select fiat-select select\",\n          onClick: _this.handleToggleDropdown,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"select__left\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"select__left__title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283\n          },\n          __self: this\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.name')), React.createElement(\"span\", {\n          className: \"select__left__address\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          },\n          __self: this\n        }, currentWithdrawalBeneficiary.name), React.createElement(\"span\", {\n          className: \"select_left__title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          },\n          __self: this\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.fiat.fullName')), React.createElement(\"span\", {\n          className: \"select__left__address\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          },\n          __self: this\n        }, currentWithdrawalBeneficiary.data ? currentWithdrawalBeneficiary.data.full_name : '')), React.createElement(\"div\", {\n          className: \"select__right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"select__right__tip\",\n          onMouseOver: _this.handleToggleTip,\n          onMouseOut: _this.handleToggleTip,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, React.createElement(TipIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          className: \"select__right__select\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, _this.translate('page.body.wallets.beneficiaries.dropdown.select')), React.createElement(\"span\", {\n          className: \"select__right__chevron\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: \"right-chevron\",\n          src: require('../../assets/images/ChevronIcon.svg'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        })))), isOpenDropdown && _this.renderDropdownBody(beneficiaries, type), isOpenTip && _this.renderDropdownTipFiat(currentWithdrawalBeneficiary));\n      }\n\n      return React.createElement(\"div\", {\n        className: dropdownClassName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pg-beneficiaries__dropdown__select select\",\n        onClick: _this.handleToggleDropdown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"select__left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"select__left__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, _this.translate('page.body.wallets.beneficiaries.dropdown.address')), React.createElement(\"span\", {\n        className: \"select__left__address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, currentWithdrawalBeneficiary.data.address)), React.createElement(\"div\", {\n        className: \"select__right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"select__right__tip\",\n        onMouseOver: _this.handleToggleTip,\n        onMouseOut: _this.handleToggleTip,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(TipIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: \"select__right__select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, _this.translate('page.body.wallets.beneficiaries.dropdown.select')), React.createElement(\"span\", {\n        className: \"select__right__chevron\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"right-chevron\",\n        src: require('../../assets/images/ChevronIcon.svg'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      })))), isOpenDropdown && _this.renderDropdownBody(beneficiaries, type), isOpenTip && _this.renderDropdownTipCrypto(currentWithdrawalBeneficiary));\n    };\n\n    _this.handleClickDeleteAddress = function (item) {\n      return function () {\n        _this.handleDeleteAddress(item);\n      };\n    };\n\n    _this.handleClickSelectAddress = function (item) {\n      return function () {\n        _this.handleSetCurrentAddress(item);\n      };\n    };\n\n    _this.handleClickToggleAddAddressModal = function () {\n      return function () {\n        var _this$props = _this.props,\n            memberLevels = _this$props.memberLevels,\n            userData = _this$props.userData;\n\n        if (userData.level < memberLevels.withdraw.minimum_level) {\n          _this.handleToggleFailModal();\n        } else {\n          _this.handleToggleAddAddressModal();\n        }\n      };\n    };\n\n    _this.handleDeleteAddress = function (item) {\n      var payload = {\n        id: item.id\n      };\n\n      _this.props.deleteAddress(payload);\n    };\n\n    _this.handleFilterByCurrency = function (beneficiaries, currency) {\n      if (beneficiaries.length && currency) {\n        return beneficiaries.filter(function (item) {\n          return item.currency.toLowerCase() === currency.toLowerCase();\n        });\n      }\n\n      return [];\n    };\n\n    _this.handleFilterByState = function (beneficiaries) {\n      if (beneficiaries.length) {\n        return beneficiaries.filter(function (item) {\n          return item.state.toLowerCase() === 'active';\n        });\n      }\n\n      return [];\n    };\n\n    _this.handleSetCurrentAddress = function (item) {\n      if (item.data) {\n        _this.setState({\n          currentWithdrawalBeneficiary: item,\n          isOpenDropdown: false\n        });\n\n        _this.props.onChangeValue(item);\n      }\n    };\n\n    _this.handleToggleAddAddressModal = function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpenAddressModal: !prevState.isOpenAddressModal\n        };\n      });\n    };\n\n    _this.handleToggleConfirmationModal = function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpenConfirmationModal: !prevState.isOpenConfirmationModal\n        };\n      });\n    };\n\n    _this.handleToggleFailModal = function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpenFailModal: !prevState.isOpenFailModal\n        };\n      });\n    };\n\n    _this.handleToggleDropdown = function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpenDropdown: !prevState.isOpenDropdown\n        };\n      });\n    };\n\n    _this.handleToggleTip = function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpenTip: !prevState.isOpenTip\n        };\n      });\n    };\n\n    _this.translate = function (id) {\n      return _this.props.intl.formatMessage({\n        id: id\n      });\n    };\n\n    _this.state = {\n      currentWithdrawalBeneficiary: defaultBeneficiary,\n      isOpenAddressModal: false,\n      isOpenConfirmationModal: false,\n      isOpenDropdown: false,\n      isOpenTip: false,\n      isOpenFailModal: false\n    };\n    return _this;\n  }\n\n  _createClass(BeneficiariesComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          currency = _this$props2.currency,\n          beneficiaries = _this$props2.beneficiaries,\n          memberLevels = _this$props2.memberLevels;\n\n      if (currency && beneficiaries.length) {\n        var filtredBeneficiaries = this.handleFilterByState(this.handleFilterByCurrency(beneficiaries, currency));\n\n        if (filtredBeneficiaries.length) {\n          this.handleSetCurrentAddress(filtredBeneficiaries[0]);\n        }\n      }\n\n      if (!memberLevels) {\n        this.props.memberLevelsFetch();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props3 = this.props,\n          currency = _this$props3.currency,\n          beneficiaries = _this$props3.beneficiaries;\n\n      if (nextProps.currency && nextProps.currency !== currency || nextProps.beneficiaries.length && nextProps.beneficiaries !== beneficiaries) {\n        var filtredBeneficiaries = this.handleFilterByState(this.handleFilterByCurrency(nextProps.beneficiaries, nextProps.currency));\n\n        if (filtredBeneficiaries.length) {\n          this.handleSetCurrentAddress(filtredBeneficiaries[0]);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          currency = _this$props4.currency,\n          type = _this$props4.type,\n          beneficiaries = _this$props4.beneficiaries,\n          beneficiariesAddData = _this$props4.beneficiariesAddData;\n      var _this$state2 = this.state,\n          currentWithdrawalBeneficiary = _this$state2.currentWithdrawalBeneficiary,\n          isOpenAddressModal = _this$state2.isOpenAddressModal,\n          isOpenConfirmationModal = _this$state2.isOpenConfirmationModal,\n          isOpenFailModal = _this$state2.isOpenFailModal;\n      var filtredBeneficiaries = this.handleFilterByState(this.handleFilterByCurrency(beneficiaries, currency));\n      return React.createElement(\"div\", {\n        className: \"pg-beneficiaries\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"pg-beneficiaries__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, type === 'coin' ? this.translate('page.body.wallets.beneficiaries.title') : this.translate('page.body.wallets.beneficiaries.fiat.title')), filtredBeneficiaries.length ? this.renderAddressDropdown(filtredBeneficiaries, currentWithdrawalBeneficiary, type) : this.renderAddAddress(), isOpenAddressModal && React.createElement(BeneficiariesAddModal, {\n        currency: currency,\n        type: type,\n        handleToggleAddAddressModal: this.handleToggleAddAddressModal,\n        handleToggleConfirmationModal: this.handleToggleConfirmationModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), isOpenConfirmationModal && React.createElement(BeneficiariesActivateModal, {\n        beneficiariesAddData: beneficiariesAddData,\n        handleToggleConfirmationModal: this.handleToggleConfirmationModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), isOpenFailModal && React.createElement(BeneficiariesFailAddModal, {\n        handleToggleFailModal: this.handleToggleFailModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BeneficiariesComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    beneficiaries: selectBeneficiaries(state),\n    beneficiariesAddData: selectBeneficiariesCreate(state),\n    memberLevels: selectMemberLevels(state),\n    userData: selectUserInfo(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    deleteAddress: function deleteAddress(payload) {\n      return dispatch(beneficiariesDelete(payload));\n    },\n    memberLevelsFetch: function memberLevelsFetch() {\n      return dispatch(_memberLevelsFetch());\n    }\n  };\n}; // tslint:disable-next-line:no-any\n\n\nexport var Beneficiaries = injectIntl(connect(mapStateToProps, mapDispatchToProps)(BeneficiariesComponent));","map":{"version":3,"sources":["/workspaces/temx/src/components/Beneficiaries/index.tsx"],"names":["classnames","React","injectIntl","connect","TipIcon","TrashBin","beneficiariesDelete","selectBeneficiaries","selectBeneficiariesCreate","selectMemberLevels","selectUserInfo","memberLevelsFetch","BeneficiariesActivateModal","BeneficiariesAddModal","BeneficiariesFailAddModal","defaultBeneficiary","id","currency","name","state","data","address","BeneficiariesComponent","props","renderAddAddress","handleClickToggleAddAddressModal","translate","require","renderDropdownItem","item","index","type","handleClickSelectAddress","full_name","handleClickDeleteAddress","renderDropdownBody","beneficiaries","dropdownBodyClassName","map","renderDropdownTipCryptoNote","note","renderDropdownTipCrypto","currentWithdrawalBeneficiary","description","renderDropdownTipFiatDescription","renderDropdownTipFiat","account_number","bank_name","renderAddressDropdown","isOpenDropdown","isOpenTip","dropdownClassName","handleToggleDropdown","handleToggleTip","handleDeleteAddress","handleSetCurrentAddress","memberLevels","userData","level","withdraw","minimum_level","handleToggleFailModal","handleToggleAddAddressModal","payload","deleteAddress","handleFilterByCurrency","length","filter","toLowerCase","handleFilterByState","setState","onChangeValue","prevState","isOpenAddressModal","handleToggleConfirmationModal","isOpenConfirmationModal","isOpenFailModal","intl","formatMessage","filtredBeneficiaries","nextProps","beneficiariesAddData","Component","mapStateToProps","mapDispatchToProps","dispatch","Beneficiaries"],"mappings":"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","sourcesContent":["import classnames from 'classnames';\nimport * as React from 'react';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { connect, MapDispatchToProps } from 'react-redux';\nimport { TipIcon } from '../../assets/images/TipIcon';\nimport { TrashBin } from '../../assets/images/TrashBin';\nimport {\n    beneficiariesDelete,\n    Beneficiary,\n    BeneficiaryBank,\n    RootState,\n    selectBeneficiaries,\n    selectBeneficiariesCreate,\n    selectMemberLevels,\n    selectUserInfo,\n    memberLevelsFetch,\n    MemberLevels,\n    User,\n} from '../../modules';\nimport { BeneficiariesActivateModal } from './BeneficiariesActivateModal';\nimport { BeneficiariesAddModal } from './BeneficiariesAddModal';\nimport { BeneficiariesFailAddModal } from './BeneficiariesFailAddModal';\n\ninterface ReduxProps {\n    beneficiaries: Beneficiary[];\n    beneficiariesAddData: Beneficiary;\n    memberLevels?: MemberLevels;\n    userData: User;\n}\n\ninterface DispatchProps {\n    deleteAddress: typeof beneficiariesDelete;\n    memberLevelsFetch: typeof memberLevelsFetch;\n}\n\ninterface OwnProps {\n    currency: string;\n    type: 'fiat' | 'coin';\n    onChangeValue: (beneficiary: Beneficiary) => void;\n}\n\ninterface State {\n    currentWithdrawalBeneficiary: Beneficiary;\n    isOpenAddressModal: boolean;\n    isOpenConfirmationModal: boolean;\n    isOpenDropdown: boolean;\n    isOpenTip: boolean;\n    isOpenFailModal: boolean;\n}\n\nconst defaultBeneficiary: Beneficiary = {\n    id: 0,\n    currency: '',\n    name: '',\n    state: '',\n    data: {\n        address: '',\n    },\n};\n\ntype Props = ReduxProps & DispatchProps & OwnProps & InjectedIntlProps;\n\n// tslint:disable jsx-no-multiline-js\nclass BeneficiariesComponent extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            currentWithdrawalBeneficiary: defaultBeneficiary,\n            isOpenAddressModal: false,\n            isOpenConfirmationModal: false,\n            isOpenDropdown: false,\n            isOpenTip: false,\n            isOpenFailModal: false,\n        };\n    }\n\n    public componentDidMount() {\n        const { currency, beneficiaries, memberLevels } = this.props;\n        if (currency && beneficiaries.length) {\n            const filtredBeneficiaries = this.handleFilterByState(this.handleFilterByCurrency(beneficiaries, currency));\n            if (filtredBeneficiaries.length) {\n                this.handleSetCurrentAddress(filtredBeneficiaries[0]);\n            }\n        }\n\n        if (!memberLevels) {\n            this.props.memberLevelsFetch();\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: Props) {\n        const { currency, beneficiaries } = this.props;\n\n        if ((nextProps.currency && nextProps.currency !== currency) ||\n            (nextProps.beneficiaries.length && nextProps.beneficiaries !== beneficiaries)) {\n            const filtredBeneficiaries = this.handleFilterByState(this.handleFilterByCurrency(nextProps.beneficiaries, nextProps.currency));\n\n            if (filtredBeneficiaries.length) {\n                this.handleSetCurrentAddress(filtredBeneficiaries[0]);\n            }\n        }\n    }\n\n    public render() {\n        const {\n            currency,\n            type,\n            beneficiaries,\n            beneficiariesAddData,\n        } = this.props;\n        const {\n            currentWithdrawalBeneficiary,\n            isOpenAddressModal,\n            isOpenConfirmationModal,\n            isOpenFailModal,\n        } = this.state;\n        const filtredBeneficiaries = this.handleFilterByState(this.handleFilterByCurrency(beneficiaries, currency));\n\n        return (\n            <div className=\"pg-beneficiaries\">\n                <span className=\"pg-beneficiaries__title\">{type === 'coin' ? this.translate('page.body.wallets.beneficiaries.title') : this.translate('page.body.wallets.beneficiaries.fiat.title')}</span>\n                {filtredBeneficiaries.length ? this.renderAddressDropdown(filtredBeneficiaries, currentWithdrawalBeneficiary, type) : this.renderAddAddress()}\n                {isOpenAddressModal && (\n                    <BeneficiariesAddModal\n                        currency={currency}\n                        type={type}\n                        handleToggleAddAddressModal={this.handleToggleAddAddressModal}\n                        handleToggleConfirmationModal={this.handleToggleConfirmationModal}\n                    />\n                )}\n                {isOpenConfirmationModal && (\n                    <BeneficiariesActivateModal\n                        beneficiariesAddData={beneficiariesAddData}\n                        handleToggleConfirmationModal={this.handleToggleConfirmationModal}\n                    />\n                )}\n                {isOpenFailModal && (\n                    <BeneficiariesFailAddModal handleToggleFailModal={this.handleToggleFailModal} />\n                )}\n            </div>\n        );\n    }\n\n    private renderAddAddress = () => {\n        return (\n            <div className=\"pg-beneficiaries__add\" onClick={this.handleClickToggleAddAddressModal()}>\n                <span className=\"pg-beneficiaries__add__label\">{this.translate('page.body.wallets.beneficiaries.addAddress')}</span>\n                <img\n                    alt=\"plus-icon\"\n                    src={require('../../assets/images/PlusIcon.svg')}\n                    className=\"pg-beneficiaries__add__icon\"\n                />\n            </div>\n        );\n    }\n\n    private renderDropdownItem = (item: Beneficiary, index: number, type: 'fiat' | 'coin') => {\n        if (type === 'fiat') {\n            return (\n                <div key={index} className=\"pg-beneficiaries__dropdown__body__item item\">\n                    <div className=\"item__left\" onClick={this.handleClickSelectAddress(item)}>\n                        <span className=\"item__left__title\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.name')}</span>\n                        <span className=\"item__left__address\">{item.name}</span>\n                    </div>\n                    <div className=\"item__left\" onClick={this.handleClickSelectAddress(item)}>\n                        <span className=\"item__left__title\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.fullName')}</span>\n                        <span className=\"item__left__address\">{item.data ? (item.data as BeneficiaryBank).full_name : ''}</span>\n                    </div>\n                    <div className=\"item__right\">\n                        <span className=\"item__right__delete\" onClick={this.handleClickDeleteAddress(item)}><TrashBin/></span>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div key={index} className=\"pg-beneficiaries__dropdown__body__item item\">\n                <div className=\"item__left\" onClick={this.handleClickSelectAddress(item)}>\n                    <span className=\"item__left__title\">{this.translate('page.body.wallets.beneficiaries.dropdown.address')}</span>\n                    <span className=\"item__left__address\">{item.data ? item.data.address : ''}</span>\n                </div>\n                <div className=\"item__right\">\n                    <span className=\"item__right__delete\" onClick={this.handleClickDeleteAddress(item)}><TrashBin/></span>\n                </div>\n            </div>\n        );\n    }\n\n    private renderDropdownBody = (beneficiaries: Beneficiary[], type: 'fiat' | 'coin') => {\n        const dropdownBodyClassName = classnames('pg-beneficiaries__dropdown__body', {\n            'fiat-body': type === 'fiat',\n        });\n\n        return (\n            <div className={dropdownBodyClassName}>\n                {beneficiaries && beneficiaries.map((item, index) => this.renderDropdownItem(item, index, type))}\n                <div className=\"pg-beneficiaries__dropdown__body__add add\" onClick={this.handleClickToggleAddAddressModal()}>\n                    <span className=\"add__label\">{this.translate('page.body.wallets.beneficiaries.addAddress')}</span>\n                    <img alt=\"add-icon\" className=\"add__icon\" src={require('../../assets/images/PlusIcon.svg')}/>\n                </div>\n            </div>\n        );\n    }\n\n    private renderDropdownTipCryptoNote = (note: string) => {\n        return (\n            <div className=\"tip__content__block\">\n                <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.tipDescription')}</span>\n                <span className=\"tip__content__block__value\">{note}</span>\n            </div>\n        );\n    }\n\n    private renderDropdownTipCrypto = (currentWithdrawalBeneficiary: Beneficiary) => {\n        if (currentWithdrawalBeneficiary) {\n            return (\n                <div className=\"pg-beneficiaries__dropdown__tip tip\">\n                    <div className=\"tip__content\">\n                        <div className=\"tip__content__block\">\n                            <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.tipAddress')}</span>\n                            <span className=\"tip__content__block__value\">{currentWithdrawalBeneficiary.data.address}</span>\n                        </div>\n                        <div className=\"tip__content__block\">\n                            <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.tipName')}</span>\n                            <span className=\"tip__content__block__value\">{currentWithdrawalBeneficiary.name}</span>\n                        </div>\n                        {currentWithdrawalBeneficiary.description && this.renderDropdownTipCryptoNote(currentWithdrawalBeneficiary.description)}\n                    </div>\n                </div>\n            );\n        }\n\n        return;\n    }\n\n    private renderDropdownTipFiatDescription = (description: string) => {\n        return (\n            <div className=\"tip__content__block\">\n                <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.description')}</span>\n                <span className=\"tip__content__block__value\">{description}</span>\n            </div>\n        );\n    }\n\n    private renderDropdownTipFiat = (currentWithdrawalBeneficiary: Beneficiary) => {\n        if (currentWithdrawalBeneficiary) {\n            return (\n                <div className=\"pg-beneficiaries__dropdown__tip tip fiat-tip\">\n                    <div className=\"tip__content\">\n                        <div className=\"tip__content__block\">\n                            <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.name')}</span>\n                            <span className=\"tip__content__block__value\">{currentWithdrawalBeneficiary.name}</span>\n                        </div>\n                        {currentWithdrawalBeneficiary.description && this.renderDropdownTipFiatDescription(currentWithdrawalBeneficiary.description)}\n                        <div className=\"tip__content__block\">\n                            <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.account')}</span>\n                            <span className=\"tip__content__block__value\">{(currentWithdrawalBeneficiary.data as BeneficiaryBank).account_number}</span>\n                        </div>\n                        <div className=\"tip__content__block\">\n                            <span className=\"tip__content__block__label\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.bankOfBeneficiary')}</span>\n                            <span className=\"tip__content__block__value\">{(currentWithdrawalBeneficiary.data as BeneficiaryBank).bank_name}</span>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return;\n    }\n\n    private renderAddressDropdown = (beneficiaries: Beneficiary[], currentWithdrawalBeneficiary: Beneficiary, type: 'fiat' | 'coin') => {\n        const { isOpenDropdown, isOpenTip } = this.state;\n\n        const dropdownClassName = classnames('pg-beneficiaries__dropdown', {\n            'pg-beneficiaries__dropdown--open': isOpenDropdown,\n        });\n\n        if (type === 'fiat') {\n            return (\n                <div className={dropdownClassName}>\n                    <div className=\"pg-beneficiaries__dropdown__select fiat-select select\" onClick={this.handleToggleDropdown}>\n                        <div className=\"select__left\">\n                            <span className=\"select__left__title\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.name')}</span>\n                            <span className=\"select__left__address\">{currentWithdrawalBeneficiary.name}</span>\n                            <span className=\"select_left__title\">{this.translate('page.body.wallets.beneficiaries.dropdown.fiat.fullName')}</span>\n                            <span className=\"select__left__address\">{currentWithdrawalBeneficiary.data ? (currentWithdrawalBeneficiary.data as BeneficiaryBank).full_name : ''}</span>\n                        </div>\n                        <div className=\"select__right\">\n                        <span className=\"select__right__tip\" onMouseOver={this.handleToggleTip} onMouseOut={this.handleToggleTip}><TipIcon/></span>\n                        <span className=\"select__right__select\">{this.translate('page.body.wallets.beneficiaries.dropdown.select')}</span>\n                        <span className=\"select__right__chevron\"><img alt=\"right-chevron\" src={require('../../assets/images/ChevronIcon.svg')}/></span>\n                        </div>\n                    </div>\n                    {isOpenDropdown && this.renderDropdownBody(beneficiaries, type)}\n                    {isOpenTip && this.renderDropdownTipFiat(currentWithdrawalBeneficiary)}\n                </div>\n            );\n        }\n\n        return (\n            <div className={dropdownClassName}>\n                <div className=\"pg-beneficiaries__dropdown__select select\" onClick={this.handleToggleDropdown}>\n                    <div className=\"select__left\">\n                        <span className=\"select__left__title\">{this.translate('page.body.wallets.beneficiaries.dropdown.address')}</span>\n                        <span className=\"select__left__address\">{currentWithdrawalBeneficiary.data.address}</span>\n                    </div>\n                    <div className=\"select__right\">\n                    <span className=\"select__right__tip\" onMouseOver={this.handleToggleTip} onMouseOut={this.handleToggleTip}><TipIcon/></span>\n                    <span className=\"select__right__select\">{this.translate('page.body.wallets.beneficiaries.dropdown.select')}</span>\n                    <span className=\"select__right__chevron\"><img alt=\"right-chevron\" src={require('../../assets/images/ChevronIcon.svg')}/></span>\n                    </div>\n                </div>\n                {isOpenDropdown && this.renderDropdownBody(beneficiaries, type)}\n                {isOpenTip && this.renderDropdownTipCrypto(currentWithdrawalBeneficiary)}\n            </div>\n        );\n    }\n\n    private handleClickDeleteAddress = (item: Beneficiary) => () => {\n        this.handleDeleteAddress(item);\n    }\n\n    private handleClickSelectAddress = (item: Beneficiary) => () => {\n        this.handleSetCurrentAddress(item);\n    }\n\n    private handleClickToggleAddAddressModal = () => () => {\n        const { memberLevels, userData } = this.props;\n\n        if (userData.level < memberLevels.withdraw.minimum_level) {\n            this.handleToggleFailModal();\n        } else {\n            this.handleToggleAddAddressModal();\n        }\n    }\n\n    private handleDeleteAddress = (item: Beneficiary) => {\n        const payload = {\n            id: item.id,\n        };\n\n        this.props.deleteAddress(payload);\n    }\n\n    private handleFilterByCurrency = (beneficiaries: Beneficiary[], currency: string) => {\n        if (beneficiaries.length && currency) {\n            return beneficiaries.filter(item => item.currency.toLowerCase() === currency.toLowerCase());\n        }\n\n        return [];\n    }\n\n    private handleFilterByState = (beneficiaries: Beneficiary[]) => {\n        if (beneficiaries.length) {\n            return beneficiaries.filter(item => item.state.toLowerCase() === 'active');\n        }\n        return [];\n    }\n\n    private handleSetCurrentAddress = (item: Beneficiary) => {\n        if (item.data) {\n            this.setState({\n                currentWithdrawalBeneficiary: item,\n                isOpenDropdown: false,\n            });\n            this.props.onChangeValue(item);\n        }\n    }\n\n    private handleToggleAddAddressModal = () => {\n        this.setState(prevState => ({\n            isOpenAddressModal: !prevState.isOpenAddressModal,\n        }));\n    }\n\n    private handleToggleConfirmationModal = () => {\n        this.setState(prevState => ({\n            isOpenConfirmationModal: !prevState.isOpenConfirmationModal,\n        }));\n    }\n\n    private handleToggleFailModal = () => {\n        this.setState(prevState => ({\n            isOpenFailModal: !prevState.isOpenFailModal,\n        }));\n    }\n\n    private handleToggleDropdown = () => {\n        this.setState(prevState => ({\n            isOpenDropdown: !prevState.isOpenDropdown,\n        }));\n    }\n\n    private handleToggleTip = () => {\n        this.setState(prevState => ({\n            isOpenTip: !prevState.isOpenTip,\n        }));\n    }\n\n    private translate = (id: string) => this.props.intl.formatMessage({ id });\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    beneficiaries: selectBeneficiaries(state),\n    beneficiariesAddData: selectBeneficiariesCreate(state),\n    memberLevels: selectMemberLevels(state),\n    userData: selectUserInfo(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n    deleteAddress: payload => dispatch(beneficiariesDelete(payload)),\n    memberLevelsFetch: () => dispatch(memberLevelsFetch()),\n});\n\n// tslint:disable-next-line:no-any\nexport const Beneficiaries = injectIntl(connect(mapStateToProps, mapDispatchToProps)(BeneficiariesComponent) as any);\n"]},"metadata":{},"sourceType":"module"}