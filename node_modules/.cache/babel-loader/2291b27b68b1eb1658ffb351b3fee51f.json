{"ast":null,"code":"import _classCallCheck from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/workspaces/codespaces-blank/baseapp-master/src/routes/Layout/index.tsx\";\nimport { Loader } from '@openware/components';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { minutesUntilAutoLogout } from '../../api';\nimport { WalletsFetch } from '../../containers';\nimport { toggleColorTheme } from '../../helpers';\nimport { logoutFetch, selectCurrentColorTheme, selectCurrentMarket, selectUserFetching, selectUserInfo, selectUserLoggedIn, userFetch as _userFetch, walletsReset as _walletsReset } from '../../modules';\nimport { ChangeForgottenPasswordScreen, ConfirmScreen, EmailVerificationScreen, ForgotPasswordScreen, HistoryScreen, OrdersTabScreen, ProfileScreen, ProfileTwoFactorAuthScreen, SignInScreen, SignUpScreen, TradingScreen, VerificationScreen, WalletsScreen } from '../../screens';\n\nvar renderLoader = function renderLoader() {\n  return React.createElement(\"div\", {\n    className: \"pg-loader-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nvar CHECK_INTERVAL = 15000;\nvar STORE_KEY = 'lastAction'; //tslint:disable-next-line no-any\n\nvar PrivateRoute = function PrivateRoute(_ref) {\n  var CustomComponent = _ref.component,\n      loading = _ref.loading,\n      isLogged = _ref.isLogged,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"loading\", \"isLogged\"]);\n\n  if (loading) {\n    return renderLoader();\n  }\n\n  var renderCustomerComponent = function renderCustomerComponent(props) {\n    return React.createElement(CustomComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }));\n  };\n\n  if (isLogged) {\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: renderCustomerComponent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    to: '/signin',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }));\n}; //tslint:disable-next-line no-any\n\n\nvar PublicRoute = function PublicRoute(_ref2) {\n  var CustomComponent = _ref2.component,\n      loading = _ref2.loading,\n      isLogged = _ref2.isLogged,\n      rest = _objectWithoutProperties(_ref2, [\"component\", \"loading\", \"isLogged\"]);\n\n  if (loading) {\n    return renderLoader();\n  }\n\n  if (isLogged) {\n    return React.createElement(Route, Object.assign({}, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Redirect, {\n      to: '/wallets',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n  var renderCustomerComponent = function renderCustomerComponent(props) {\n    return React.createElement(CustomComponent, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  };\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: renderCustomerComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n};\n\nvar LayoutComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LayoutComponent, _React$Component);\n\n  function LayoutComponent(props) {\n    var _this;\n\n    _classCallCheck(this, LayoutComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LayoutComponent).call(this, props));\n    _this.timer = void 0;\n    _this.walletsFetchInterval = void 0;\n\n    _this.getLastAction = function () {\n      if (localStorage.getItem(STORE_KEY) !== null) {\n        return parseInt(localStorage.getItem(STORE_KEY) || '0', 10);\n      }\n\n      return 0;\n    };\n\n    _this.setLastAction = function (lastAction) {\n      localStorage.setItem(STORE_KEY, lastAction.toString());\n    };\n\n    _this.initListener = function () {\n      _this.reset();\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = LayoutComponent.eventsListen[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var type = _step.value;\n          document.body.addEventListener(type, _this.reset);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    };\n\n    _this.reset = function () {\n      _this.setLastAction(Date.now());\n    };\n\n    _this.initInterval = function () {\n      _this.timer = setInterval(function () {\n        _this.check();\n      }, CHECK_INTERVAL);\n    };\n\n    _this.check = function () {\n      var user = _this.props.user;\n      var now = Date.now();\n      var timeleft = _this.getLastAction() + parseFloat(minutesUntilAutoLogout()) * 60 * 1000;\n      var diff = timeleft - now;\n      var isTimeout = diff < 0;\n\n      if (isTimeout && user.email) {\n        _this.props.logout();\n      }\n    };\n\n    _this.initListener();\n\n    return _this;\n  }\n\n  _createClass(LayoutComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.userFetch();\n      this.initInterval();\n      this.check();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(next) {\n      var _this$props = this.props,\n          isLoggedIn = _this$props.isLoggedIn,\n          history = _this$props.history;\n\n      if (!isLoggedIn && next.isLoggedIn) {\n        this.props.walletsReset();\n\n        if (!history.location.pathname.includes('/trading')) {\n          history.push('/trading/');\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = LayoutComponent.eventsListen[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var type = _step2.value;\n          document.body.removeEventListener(type, this.reset);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      clearInterval(this.timer);\n      clearInterval(this.walletsFetchInterval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          colorTheme = _this$props2.colorTheme,\n          isLoggedIn = _this$props2.isLoggedIn,\n          userLoading = _this$props2.userLoading;\n      var tradingCls = window.location.pathname.includes('/trading') ? 'trading-layout' : '';\n      toggleColorTheme(colorTheme);\n      return React.createElement(\"div\", {\n        className: \"container-fluid pg-layout \".concat(tradingCls),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/signin\",\n        component: SignInScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/accounts/confirmation\",\n        component: VerificationScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/signup\",\n        component: SignUpScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/forgot_password\",\n        component: ForgotPasswordScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/accounts/password_reset\",\n        component: ChangeForgottenPasswordScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(PublicRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/email-verification\",\n        component: EmailVerificationScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/trading/:market?\",\n        component: TradingScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/orders\",\n        component: OrdersTabScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/history\",\n        component: HistoryScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/confirm\",\n        component: ConfirmScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/profile\",\n        component: ProfileScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/wallets\",\n        component: WalletsScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(PrivateRoute, {\n        loading: userLoading,\n        isLogged: isLoggedIn,\n        path: \"/security/2fa\",\n        component: ProfileTwoFactorAuthScreen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"**\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Redirect, {\n        to: \"/trading/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }))), isLoggedIn && React.createElement(WalletsFetch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return LayoutComponent;\n}(React.Component);\n\nLayoutComponent.eventsListen = ['click', 'keydown', 'scroll', 'resize', 'mousemove', 'TabSelect', 'TabHide'];\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    colorTheme: selectCurrentColorTheme(state),\n    currentMarket: selectCurrentMarket(state),\n    user: selectUserInfo(state),\n    isLoggedIn: selectUserLoggedIn(state),\n    userLoading: selectUserFetching(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    logout: function logout() {\n      return dispatch(logoutFetch());\n    },\n    userFetch: function userFetch() {\n      return dispatch(_userFetch());\n    },\n    walletsReset: function walletsReset() {\n      return dispatch(_walletsReset());\n    }\n  };\n}; // tslint:disable-next-line no-any\n\n\nvar Layout = withRouter(connect(mapStateToProps, mapDispatchToProps)(LayoutComponent));\nexport { Layout };","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/routes/Layout/index.tsx"],"names":["Loader","React","connect","Route","Switch","Redirect","withRouter","minutesUntilAutoLogout","WalletsFetch","toggleColorTheme","logoutFetch","selectCurrentColorTheme","selectCurrentMarket","selectUserFetching","selectUserInfo","selectUserLoggedIn","userFetch","walletsReset","ChangeForgottenPasswordScreen","ConfirmScreen","EmailVerificationScreen","ForgotPasswordScreen","HistoryScreen","OrdersTabScreen","ProfileScreen","ProfileTwoFactorAuthScreen","SignInScreen","SignUpScreen","TradingScreen","VerificationScreen","WalletsScreen","renderLoader","CHECK_INTERVAL","STORE_KEY","PrivateRoute","CustomComponent","component","loading","isLogged","rest","renderCustomerComponent","props","PublicRoute","LayoutComponent","timer","walletsFetchInterval","getLastAction","localStorage","getItem","parseInt","setLastAction","lastAction","setItem","toString","initListener","reset","eventsListen","type","document","body","addEventListener","Date","now","initInterval","setInterval","check","user","timeleft","parseFloat","diff","isTimeout","email","logout","next","isLoggedIn","history","location","pathname","includes","push","removeEventListener","clearInterval","colorTheme","userLoading","tradingCls","window","Component","mapStateToProps","state","currentMarket","mapDispatchToProps","dispatch","Layout"],"mappings":"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","sourcesContent":["import { Loader } from '@openware/components';\nimport { History } from 'history';\nimport * as React from 'react';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { minutesUntilAutoLogout } from '../../api';\nimport { WalletsFetch } from '../../containers';\nimport { toggleColorTheme } from '../../helpers';\nimport {\n    logoutFetch,\n    Market,\n    RootState,\n    selectCurrentColorTheme,\n    selectCurrentMarket,\n    selectUserFetching,\n    selectUserInfo,\n    selectUserLoggedIn,\n    User,\n    userFetch,\n    walletsReset,\n} from '../../modules';\nimport {\n    ChangeForgottenPasswordScreen,\n    ConfirmScreen,\n    EmailVerificationScreen,\n    ForgotPasswordScreen,\n    HistoryScreen,\n    OrdersTabScreen,\n    ProfileScreen,\n    ProfileTwoFactorAuthScreen,\n    SignInScreen,\n    SignUpScreen,\n    TradingScreen,\n    VerificationScreen,\n    WalletsScreen,\n} from '../../screens';\n\ninterface ReduxProps {\n    colorTheme: string;\n    currentMarket: Market | undefined;\n    user: User;\n    isLoggedIn: boolean;\n    userLoading?: boolean;\n}\n\ninterface DispatchProps {\n    logout: typeof logoutFetch;\n    userFetch: typeof userFetch;\n    walletsReset: typeof walletsReset;\n}\n\ninterface OwnProps {\n    history: History;\n}\n\nexport type LayoutProps = ReduxProps & DispatchProps & OwnProps;\n\nconst renderLoader = () => (\n    <div className=\"pg-loader-container\">\n        <Loader />\n    </div>\n);\n\nconst CHECK_INTERVAL = 15000;\nconst STORE_KEY = 'lastAction';\n\n//tslint:disable-next-line no-any\nconst PrivateRoute: React.FunctionComponent<any> = ({ component: CustomComponent, loading, isLogged, ...rest }) => {\n    if (loading) {\n        return renderLoader();\n    }\n    const renderCustomerComponent = props => <CustomComponent {...props} />;\n\n    if (isLogged) {\n        return <Route {...rest} render={renderCustomerComponent} />;\n    }\n\n    return (\n        <Route {...rest}>\n            <Redirect to={'/signin'} />\n        </Route>\n    );\n};\n\n//tslint:disable-next-line no-any\nconst PublicRoute: React.FunctionComponent<any> = ({ component: CustomComponent, loading, isLogged, ...rest }) => {\n    if (loading) {\n        return renderLoader();\n    }\n\n    if (isLogged) {\n        return <Route {...rest}><Redirect to={'/wallets'} /></Route>;\n    }\n\n    const renderCustomerComponent = props => <CustomComponent {...props} />;\n    return <Route {...rest} render={renderCustomerComponent} />;\n};\n\nclass LayoutComponent extends React.Component<LayoutProps> {\n    public static eventsListen = [\n        'click',\n        'keydown',\n        'scroll',\n        'resize',\n        'mousemove',\n        'TabSelect',\n        'TabHide',\n    ];\n\n    public timer;\n    public walletsFetchInterval;\n\n    constructor(props: LayoutProps) {\n        super(props);\n        this.initListener();\n    }\n\n    public componentDidMount() {\n        this.props.userFetch();\n        this.initInterval();\n        this.check();\n    }\n\n    public componentDidUpdate(next: LayoutProps) {\n        const { isLoggedIn, history } = this.props;\n\n        if (!isLoggedIn && next.isLoggedIn) {\n            this.props.walletsReset();\n            if (!history.location.pathname.includes('/trading')) {\n                history.push('/trading/');\n            }\n        }\n    }\n    public componentWillUnmount() {\n        for (const type of LayoutComponent.eventsListen) {\n            document.body.removeEventListener(type, this.reset);\n        }\n        clearInterval(this.timer);\n        clearInterval(this.walletsFetchInterval);\n    }\n\n    public render() {\n        const {\n            colorTheme,\n            isLoggedIn,\n            userLoading,\n        } = this.props;\n\n        const tradingCls = window.location.pathname.includes('/trading') ? 'trading-layout' : '';\n        toggleColorTheme(colorTheme);\n\n        return (\n            <div className={`container-fluid pg-layout ${tradingCls}`}>\n                <Switch>\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signin\" component={SignInScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/confirmation\" component={VerificationScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signup\" component={SignUpScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/forgot_password\" component={ForgotPasswordScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/password_reset\" component={ChangeForgottenPasswordScreen} />\n                    <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/email-verification\" component={EmailVerificationScreen} />\n                    <Route exact={true} path=\"/trading/:market?\" component={TradingScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/orders\" component={OrdersTabScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/history\" component={HistoryScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/confirm\" component={ConfirmScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile\" component={ProfileScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets\" component={WalletsScreen} />\n                    <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/security/2fa\" component={ProfileTwoFactorAuthScreen} />\n                    <Route path=\"**\"><Redirect to=\"/trading/\" /></Route>\n                </Switch>\n                {isLoggedIn && <WalletsFetch/>}\n            </div>\n        );\n    }\n\n    private getLastAction = () => {\n        if (localStorage.getItem(STORE_KEY) !== null) {\n            return parseInt(localStorage.getItem(STORE_KEY) || '0', 10);\n        }\n        return 0;\n    };\n\n    private setLastAction = (lastAction: number) => {\n        localStorage.setItem(STORE_KEY, lastAction.toString());\n    }\n\n    private initListener = () => {\n        this.reset();\n        for (const type of LayoutComponent.eventsListen) {\n            document.body.addEventListener(type, this.reset);\n        }\n    }\n\n    private reset = () => {\n        this.setLastAction(Date.now());\n    }\n\n    private initInterval = () => {\n        this.timer = setInterval(() => {\n            this.check();\n        }, CHECK_INTERVAL);\n    }\n\n    private check = () => {\n        const { user } = this.props;\n        const now = Date.now();\n        const timeleft = this.getLastAction() + parseFloat(minutesUntilAutoLogout()) * 60 * 1000;\n        const diff = timeleft - now;\n        const isTimeout = diff < 0;\n        if (isTimeout && user.email) {\n            this.props.logout();\n        }\n    }\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n    colorTheme: selectCurrentColorTheme(state),\n    currentMarket: selectCurrentMarket(state),\n    user: selectUserInfo(state),\n    isLoggedIn: selectUserLoggedIn(state),\n    userLoading: selectUserFetching(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n    logout: () => dispatch(logoutFetch()),\n    userFetch: () => dispatch(userFetch()),\n    walletsReset: () => dispatch(walletsReset()),\n});\n\n// tslint:disable-next-line no-any\nconst Layout = withRouter(connect(mapStateToProps, mapDispatchToProps)(LayoutComponent) as any) as any;\n\nexport {\n    Layout,\n};\n"]},"metadata":{},"sourceType":"module"}