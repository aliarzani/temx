{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(verificationSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { signUpError, verificationSuccess } from '../actions';\nvar verificationConfig = {\n  apiVersion: 'barong'\n};\nexport function verificationSaga(action) {\n  return _regeneratorRuntime.wrap(function verificationSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.post(verificationConfig), '/identity/users/email/confirm_code', action.payload);\n\n        case 3:\n          _context.next = 5;\n          return put(verificationSuccess());\n\n        case 5:\n          _context.next = 7;\n          return put(alertPush({\n            message: ['success.email.confirmed'],\n            type: 'success'\n          }));\n\n        case 7:\n          _context.next = 15;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 13;\n          return put(signUpError(_context.t0));\n\n        case 13:\n          _context.next = 15;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}","map":{"version":3,"sources":["/workspaces/temx/src/modules/user/auth/sagas/verificationSaga.ts"],"names":["verificationSaga","call","put","API","alertPush","signUpError","verificationSuccess","verificationConfig","apiVersion","action","post","payload","message","type","code"],"mappings":";;;;yBAUiBA,gB;;AAVjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,WAAT,EAAyCC,mBAAzC,QAAoE,YAApE;AAEA,IAAMC,kBAAkC,GAAG;AACvCC,EAAAA,UAAU,EAAE;AAD2B,CAA3C;AAIA,OAAO,SAAUR,gBAAV,CAA2BS,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,iBAAMR,IAAI,CAACE,GAAG,CAACO,IAAJ,CAASH,kBAAT,CAAD,EAA+B,oCAA/B,EAAqEE,MAAM,CAACE,OAA5E,CAAV;;AAFD;AAAA;AAGC,iBAAMT,GAAG,CAACI,mBAAmB,EAApB,CAAT;;AAHD;AAAA;AAIC,iBAAMJ,GAAG,CAACE,SAAS,CAAC;AAACQ,YAAAA,OAAO,EAAE,CAAC,yBAAD,CAAV;AAAuCC,YAAAA,IAAI,EAAE;AAA7C,WAAD,CAAV,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMX,GAAG,CAACG,WAAW,aAAZ,CAAT;;AAND;AAAA;AAOC,iBAAMH,GAAG,CAACE,SAAS,CAAC;AAACQ,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBE,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CD,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { signUpError, VerificationFetch, verificationSuccess } from '../actions';\n\nconst verificationConfig: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* verificationSaga(action: VerificationFetch) {\n    try {\n        yield call(API.post(verificationConfig), '/identity/users/email/confirm_code', action.payload);\n        yield put(verificationSuccess());\n        yield put(alertPush({message: ['success.email.confirmed'], type: 'success'}));\n    } catch (error) {\n        yield put(signUpError(error));\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}