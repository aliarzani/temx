{"ast":null,"code":"import _classCallCheck from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/temx/src/screens/EmailVerification/index.tsx\";\nimport { Loader } from '@openware/components';\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setDocumentTitle } from '../../helpers';\nimport { emailVerificationFetch, selectCurrentLanguage, selectSendEmailVerificationLoading } from '../../modules';\n\nvar EmailVerificationComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EmailVerificationComponent, _React$Component);\n\n  function EmailVerificationComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EmailVerificationComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EmailVerificationComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleClick = function () {\n      _this.props.emailVerificationFetch({\n        email: _this.props.location.state.email,\n        lang: _this.props.i18n.toLowerCase()\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EmailVerificationComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      setDocumentTitle('Email verification');\n\n      if (!this.props.location.state || !this.props.location.state.email) {\n        this.props.history.push('/signin');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var emailVerificationLoading = this.props.emailVerificationLoading;\n      var title = this.props.intl.formatMessage({\n        id: 'page.header.signUp.modal.header'\n      });\n      var text = this.props.intl.formatMessage({\n        id: 'page.header.signUp.modal.body'\n      });\n      var button = this.props.intl.formatMessage({\n        id: 'page.resendConfirmation'\n      });\n      return React.createElement(\"div\", {\n        className: \"pg-emailverification-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pg-emailverification\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pg-emailverification-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, title), React.createElement(\"div\", {\n        className: \"pg-emailverification-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pg-emailverification-body-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, text), React.createElement(\"div\", {\n        className: \"pg-emailverification-body-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, emailVerificationLoading ? React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }) : React.createElement(\"button\", {\n        className: \"pg-emailverification-body-container-button\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, button)))));\n    }\n  }]);\n\n  return EmailVerificationComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    emailVerificationLoading: selectSendEmailVerificationLoading(state),\n    i18n: selectCurrentLanguage(state)\n  };\n};\n\nvar mapDispatchProps = {\n  emailVerificationFetch: emailVerificationFetch\n}; //tslint:disable-next-line:no-any\n\nexport var EmailVerificationScreen = injectIntl(withRouter(connect(mapStateToProps, mapDispatchProps)(EmailVerificationComponent)));","map":{"version":3,"sources":["/workspaces/temx/src/screens/EmailVerification/index.tsx"],"names":["Loader","React","injectIntl","connect","withRouter","setDocumentTitle","emailVerificationFetch","selectCurrentLanguage","selectSendEmailVerificationLoading","EmailVerificationComponent","handleClick","props","email","location","state","lang","i18n","toLowerCase","history","push","emailVerificationLoading","title","intl","formatMessage","id","text","button","Component","mapStateToProps","mapDispatchProps","EmailVerificationScreen"],"mappings":"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","sourcesContent":["import { Loader } from '@openware/components';\nimport { History } from 'history';\nimport * as React from 'react';\nimport {\n    InjectedIntlProps,\n    injectIntl,\n} from 'react-intl';\nimport { connect, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { setDocumentTitle } from '../../helpers';\nimport {\n    emailVerificationFetch,\n    RootState,\n    selectCurrentLanguage,\n    selectSendEmailVerificationLoading,\n} from '../../modules';\n\ninterface OwnProps {\n    history: History;\n    location: {\n        state: {\n            email: string;\n        };\n    };\n}\n\ninterface DispatchProps {\n    emailVerificationFetch: typeof emailVerificationFetch;\n}\n\ninterface ReduxProps {\n    emailVerificationLoading: boolean;\n}\n\ntype Props = DispatchProps & ReduxProps & OwnProps & InjectedIntlProps;\n\nclass EmailVerificationComponent extends React.Component<Props> {\n    public componentDidMount() {\n        setDocumentTitle('Email verification');\n        if (!this.props.location.state || !this.props.location.state.email) {\n            this.props.history.push('/signin');\n        }\n    }\n\n    public render() {\n        const { emailVerificationLoading } = this.props;\n\n        const title = this.props.intl.formatMessage({ id: 'page.header.signUp.modal.header' });\n        const text = this.props.intl.formatMessage({ id: 'page.header.signUp.modal.body' });\n        const button = this.props.intl.formatMessage({ id: 'page.resendConfirmation' });\n        return (\n            <div className=\"pg-emailverification-container\">\n                <div className=\"pg-emailverification\">\n                    <div className=\"pg-emailverification-title\">{title}</div>\n                    <div className=\"pg-emailverification-body\">\n                        <div className=\"pg-emailverification-body-text\">{text}</div>\n                        <div className=\"pg-emailverification-body-container\">\n                            {emailVerificationLoading ? <Loader /> : <button className=\"pg-emailverification-body-container-button\" onClick={this.handleClick}>{button}</button>}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n    private handleClick = () => {\n        this.props.emailVerificationFetch({\n          email: this.props.location.state.email,\n          lang: this.props.i18n.toLowerCase(),\n        });\n    }\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n    emailVerificationLoading: selectSendEmailVerificationLoading(state),\n    i18n: selectCurrentLanguage(state),\n});\n\nconst mapDispatchProps = {\n    emailVerificationFetch,\n};\n\n//tslint:disable-next-line:no-any\nexport const EmailVerificationScreen = injectIntl(withRouter(connect(mapStateToProps, mapDispatchProps)(EmailVerificationComponent) as any));\n"]},"metadata":{},"sourceType":"module"}