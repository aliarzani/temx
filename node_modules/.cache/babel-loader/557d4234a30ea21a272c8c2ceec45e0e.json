{"ast":null,"code":"import _classCallCheck from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/codespaces-blank/baseapp-master/src/containers/Header/index.tsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { selectCurrentColorTheme, selectCurrentMarket, selectMarketSelectorState, selectMobileWalletUi, selectSidebarState, setMobileWalletUi as _setMobileWalletUi, toggleMarketSelector as _toggleMarketSelector, toggleSidebar as _toggleSidebar } from '../../modules';\nimport { HeaderToolbar } from '../HeaderToolbar';\nimport { NavBar } from '../NavBar';\nimport logo from \"../../assets/images/logo.svg\";\nimport logoLight from \"../../assets/images/logoLight.svg\";\n\n// tslint:disable no-any jsx-no-multiline-js\nvar Head =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Head, _React$Component);\n\n  function Head() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Head);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Head)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderMobileWalletNav = function () {\n      var _this$props = _this.props,\n          colorTheme = _this$props.colorTheme,\n          mobileWallet = _this$props.mobileWallet;\n      var isLight = colorTheme === 'light' ? 'Light' : '';\n      return mobileWallet && React.createElement(\"div\", {\n        onClick: _this.backWallets,\n        className: \"pg-header__toggler\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"\",\n        src: require(\"./back\".concat(isLight, \".svg\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }));\n    };\n\n    _this.translate = function (id) {\n      return id ? _this.props.intl.formatMessage({\n        id: id\n      }) : '';\n    };\n\n    _this.renderMarketToolbar = function () {\n      var location = _this.props.location;\n\n      if (!location.pathname.includes('/trading/')) {\n        return null;\n      }\n\n      return React.createElement(HeaderToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    };\n\n    _this.renderMarketToggler = function () {\n      var _this$props2 = _this.props,\n          location = _this$props2.location,\n          currentMarket = _this$props2.currentMarket,\n          marketSelectorOpened = _this$props2.marketSelectorOpened,\n          colorTheme = _this$props2.colorTheme;\n      var isLight = colorTheme === 'light';\n\n      if (!location.pathname.includes('/trading/')) {\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"pg-header__market-selector-toggle\",\n        onClick: _this.props.toggleMarketSelector,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"pg-header__market-selector-toggle-value\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, currentMarket && currentMarket.name), marketSelectorOpened ? React.createElement(\"img\", {\n        src: require(\"./arrows/arrowBottom\".concat(isLight ? 'Light' : '', \".svg\")),\n        alt: \"arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }) : React.createElement(\"img\", {\n        src: require(\"./arrows/arrowRight\".concat(isLight ? 'Light' : '', \".svg\")),\n        alt: \"arrow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }));\n    };\n\n    _this.openSidebar = function () {\n      return _this.props.toggleSidebar(!_this.props.sidebarOpened);\n    };\n\n    _this.backWallets = function () {\n      return _this.props.setMobileWalletUi('');\n    };\n\n    _this.closeMenu = function (e) {\n      return _this.props.setMobileWalletUi('');\n    };\n\n    return _this;\n  }\n\n  _createClass(Head, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          colorTheme = _this$props3.colorTheme,\n          location = _this$props3.location,\n          mobileWallet = _this$props3.mobileWallet;\n      var tradingCls = window.location.pathname.includes('/trading') ? 'pg-container-trading' : '';\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, !['/confirm'].some(function (r) {\n        return location.pathname.includes(r);\n      }) && React.createElement(\"header\", {\n        className: \"pg-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pg-container pg-header__content \".concat(tradingCls),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pg-sidebar__toggler \".concat(mobileWallet && 'pg-sidebar__toggler-mobile'),\n        onClick: this.openSidebar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"pg-sidebar__toggler-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"pg-sidebar__toggler-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"pg-sidebar__toggler-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(Link, {\n        to: '/wallets',\n        className: \"pg-header__logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pg-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, colorTheme === 'light' ? React.createElement(\"img\", {\n        src: logoLight,\n        className: \"pg-logo__img\",\n        alt: \"Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }) : React.createElement(\"img\", {\n        src: logo,\n        className: \"pg-logo__img\",\n        alt: \"Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))), this.renderMarketToggler(), React.createElement(\"div\", {\n        className: \"pg-header__location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, mobileWallet ? React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, mobileWallet) : React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, location.pathname.split('/')[1])), this.renderMobileWalletNav(), React.createElement(\"div\", {\n        className: \"pg-header__navbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.renderMarketToolbar(), React.createElement(NavBar, {\n        onLinkChange: this.closeMenu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return Head;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentMarket: selectCurrentMarket(state),\n    colorTheme: selectCurrentColorTheme(state),\n    mobileWallet: selectMobileWalletUi(state),\n    sidebarOpened: selectSidebarState(state),\n    marketSelectorOpened: selectMarketSelectorState(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setMobileWalletUi: function setMobileWalletUi(payload) {\n      return dispatch(_setMobileWalletUi(payload));\n    },\n    toggleSidebar: function toggleSidebar(payload) {\n      return dispatch(_toggleSidebar(payload));\n    },\n    toggleMarketSelector: function toggleMarketSelector() {\n      return dispatch(_toggleMarketSelector());\n    }\n  };\n};\n\nvar Header = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(Head)));\nexport { Header };","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/containers/Header/index.tsx"],"names":["React","injectIntl","connect","Link","withRouter","selectCurrentColorTheme","selectCurrentMarket","selectMarketSelectorState","selectMobileWalletUi","selectSidebarState","setMobileWalletUi","toggleMarketSelector","toggleSidebar","HeaderToolbar","NavBar","Head","renderMobileWalletNav","props","colorTheme","mobileWallet","isLight","backWallets","require","translate","id","intl","formatMessage","renderMarketToolbar","location","pathname","includes","renderMarketToggler","currentMarket","marketSelectorOpened","name","openSidebar","sidebarOpened","closeMenu","e","tradingCls","window","some","r","logoLight","logo","split","Component","mapStateToProps","state","mapDispatchToProps","dispatch","payload","Header"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport {\n    Market,\n    RootState,\n    selectCurrentColorTheme,\n    selectCurrentMarket,\n    selectMarketSelectorState,\n    selectMobileWalletUi,\n    selectSidebarState,\n    setMobileWalletUi,\n    toggleMarketSelector,\n    toggleSidebar,\n} from '../../modules';\nimport { HeaderToolbar } from '../HeaderToolbar';\nimport { NavBar } from '../NavBar';\n\nimport logo from '../../assets/images/logo.svg';\nimport logoLight from '../../assets/images/logoLight.svg';\n\ninterface ReduxProps {\n    currentMarket: Market | undefined;\n    colorTheme: string;\n    mobileWallet: string;\n    sidebarOpened: boolean;\n    marketSelectorOpened: boolean;\n}\n\ninterface DispatchProps {\n    setMobileWalletUi: typeof setMobileWalletUi;\n    toggleSidebar: typeof toggleSidebar;\n    toggleMarketSelector: typeof toggleMarketSelector;\n}\n\n// tslint:disable no-any jsx-no-multiline-js\nclass Head extends React.Component<any> {\n    public render() {\n        const {\n            colorTheme,\n            location,\n            mobileWallet,\n        } = this.props;\n        const tradingCls = window.location.pathname.includes('/trading') ? 'pg-container-trading' : '';\n\n        return (\n            <React.Fragment>\n            {!['/confirm'].some(r => location.pathname.includes(r)) &&\n                <header className={`pg-header`}>\n                    <div className={`pg-container pg-header__content ${tradingCls}`}>\n                        <div\n                            className={`pg-sidebar__toggler ${mobileWallet && 'pg-sidebar__toggler-mobile'}`}\n                            onClick={this.openSidebar}\n                        >\n                            <span className=\"pg-sidebar__toggler-item\"/>\n                            <span className=\"pg-sidebar__toggler-item\"/>\n                            <span className=\"pg-sidebar__toggler-item\"/>\n                        </div>\n                        <Link to={'/wallets'} className=\"pg-header__logo\">\n                            <div className=\"pg-logo\">\n                                {colorTheme === 'light' ? (\n                                    <img src={logoLight} className=\"pg-logo__img\" alt=\"Logo\" />\n                                ) : (\n                                    <img src={logo} className=\"pg-logo__img\" alt=\"Logo\" />\n                               )}\n                            </div>\n                        </Link>\n                        {this.renderMarketToggler()}\n                        <div className=\"pg-header__location\">\n                            {mobileWallet ? <span>{mobileWallet}</span> : <span>{location.pathname.split('/')[1]}</span>}\n                        </div>\n                        {this.renderMobileWalletNav()}\n                        <div className=\"pg-header__navbar\">\n                            {this.renderMarketToolbar()}\n                            <NavBar onLinkChange={this.closeMenu}/>\n                        </div>\n                    </div>\n                </header>}\n          </React.Fragment>\n        );\n    }\n\n    public renderMobileWalletNav = () => {\n        const { colorTheme, mobileWallet } = this.props;\n        const isLight = colorTheme === 'light' ? 'Light' : '';\n\n        return mobileWallet && (\n            <div onClick={this.backWallets} className=\"pg-header__toggler\">\n                <img alt=\"\" src={require(`./back${isLight}.svg`)} />\n            </div>\n        );\n    };\n\n    public translate = (id: string) => {\n        return id ? this.props.intl.formatMessage({ id }) : '';\n    };\n\n    private renderMarketToolbar = () => {\n        const { location } = this.props;\n        if (!location.pathname.includes('/trading/')) {\n            return null;\n        }\n\n        return <HeaderToolbar/>;\n    };\n\n    private renderMarketToggler = () => {\n        const { location, currentMarket, marketSelectorOpened, colorTheme } = this.props;\n        const isLight = colorTheme === 'light';\n        if (!location.pathname.includes('/trading/')) {\n            return null;\n        }\n\n        return (\n            <div className=\"pg-header__market-selector-toggle\" onClick={this.props.toggleMarketSelector}>\n                <p className=\"pg-header__market-selector-toggle-value\">\n                    {currentMarket && currentMarket.name}\n                </p>\n                {marketSelectorOpened ? (\n                    <img src={require(`./arrows/arrowBottom${isLight ? 'Light' : ''}.svg`)} alt=\"arrow\"/>\n                ) : (\n                    <img src={require(`./arrows/arrowRight${isLight ? 'Light' : ''}.svg`)} alt=\"arrow\"/>\n                )}\n            </div>\n        );\n    };\n\n    private openSidebar = () => this.props.toggleSidebar(!this.props.sidebarOpened);\n\n    private backWallets = () => this.props.setMobileWalletUi('');\n\n    private closeMenu = (e: any) => this.props.setMobileWalletUi('');\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    currentMarket: selectCurrentMarket(state),\n    colorTheme: selectCurrentColorTheme(state),\n    mobileWallet: selectMobileWalletUi(state),\n    sidebarOpened: selectSidebarState(state),\n    marketSelectorOpened: selectMarketSelectorState(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        setMobileWalletUi: payload => dispatch(setMobileWalletUi(payload)),\n        toggleSidebar: payload => dispatch(toggleSidebar(payload)),\n        toggleMarketSelector: () => dispatch(toggleMarketSelector()),\n    });\n\nconst Header = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(Head) as any) as any);\n\nexport {\n    Header,\n};\n"]},"metadata":{},"sourceType":"module"}