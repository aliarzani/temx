{"ast":null,"code":"import _classCallCheck from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/codespaces-blank/baseapp-master/src/containers/ToolBar/index.tsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { selectCurrentMarket, selectMarkets, selectMarketTickers } from '../../modules';\nimport { resetLayouts as _resetLayouts } from '../../modules/public/gridLayout';\nimport { MarketSelector } from './MarketSelector';\n\nvar ToolBarComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ToolBarComponent, _React$Component);\n\n  function ToolBarComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ToolBarComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToolBarComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isOpen: false\n    };\n\n    _this.translate = function (id) {\n      return id ? _this.props.intl.formatMessage({\n        id: id\n      }) : '';\n    };\n\n    return _this;\n  }\n\n  _createClass(ToolBarComponent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"pg-trading-header-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pg-trading-header-container-selector\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(MarketSelector, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ToolBarComponent;\n}(React.Component);\n\nvar reduxProps = function reduxProps(state) {\n  return {\n    markets: selectMarkets(state),\n    currentMarket: selectCurrentMarket(state),\n    marketTickers: selectMarketTickers(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    resetLayouts: function resetLayouts(payload) {\n      return dispatch(_resetLayouts(payload));\n    }\n  };\n};\n\nexport var ToolBar = injectIntl(connect(reduxProps, mapDispatchToProps)(ToolBarComponent));","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/containers/ToolBar/index.tsx"],"names":["React","injectIntl","connect","selectCurrentMarket","selectMarkets","selectMarketTickers","resetLayouts","MarketSelector","ToolBarComponent","state","isOpen","translate","id","props","intl","formatMessage","Component","reduxProps","markets","currentMarket","marketTickers","mapDispatchToProps","dispatch","payload","ToolBar"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAA4BC,UAA5B,QAA8C,YAA9C;AACA,SACIC,OADJ,QAIO,aAJP;AAKA,SAGIC,mBAHJ,EAIIC,aAJJ,EAKIC,mBALJ,QAOO,eAPP;AAQA,SAASC,YAAY,IAAZA,aAAT,QAA6B,iCAA7B;AACA,SACIC,cADJ,QAEO,kBAFP;;IAsBMC,gB;;;;;;;;;;;;;;;;;UACcC,K,GAAQ;AACpBC,MAAAA,MAAM,EAAE;AADY,K;;UAIjBC,S,GAAY,UAACC,EAAD,EAAgB;AAC/B,aAAOA,EAAE,GAAG,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAAEH,QAAAA,EAAE,EAAFA;AAAF,OAA9B,CAAH,GAA2C,EAApD;AACH,K;;;;;;;6BAEe;AACZ,aACI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ;AAOH;;;;EAjB0BZ,KAAK,CAACgB,S;;AAoBrC,IAAMC,UAAsD,GAAG,SAAzDA,UAAyD,CAAAR,KAAK;AAAA,SAAK;AACrES,IAAAA,OAAO,EAAEd,aAAa,CAACK,KAAD,CAD+C;AAErEU,IAAAA,aAAa,EAAEhB,mBAAmB,CAACM,KAAD,CAFmC;AAGrEW,IAAAA,aAAa,EAAEf,mBAAmB,CAACI,KAAD;AAHmC,GAAL;AAAA,CAApE;;AAMA,IAAMY,kBAAiE,GAAG,SAApEA,kBAAoE,CAAAC,QAAQ;AAAA,SAAK;AACnFhB,IAAAA,YAAY,EAAE,sBAAAiB,OAAO;AAAA,aAAID,QAAQ,CAAChB,aAAY,CAACiB,OAAD,CAAb,CAAZ;AAAA;AAD8D,GAAL;AAAA,CAAlF;;AAIA,OAAO,IAAMC,OAAO,GAAGvB,UAAU,CAACC,OAAO,CAACe,UAAD,EAAaI,kBAAb,CAAP,CAAwCb,gBAAxC,CAAD,CAA1B","sourcesContent":["import * as React from 'react';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport {\n    connect,\n    MapDispatchToPropsFunction,\n    MapStateToProps,\n} from 'react-redux';\nimport {\n    Market,\n    RootState,\n    selectCurrentMarket,\n    selectMarkets,\n    selectMarketTickers,\n    Ticker,\n} from '../../modules';\nimport { resetLayouts } from '../../modules/public/gridLayout';\nimport {\n    MarketSelector,\n} from './MarketSelector';\n\ninterface ReduxProps {\n    currentMarket?: Market;\n    markets: Market[];\n    marketTickers: {\n        [key: string]: Ticker,\n    };\n}\n\ninterface State {\n    isOpen: boolean;\n}\n\ninterface DispatchProps {\n    resetLayouts: typeof resetLayouts;\n}\n\ntype Props = DispatchProps & ReduxProps & InjectedIntlProps;\n\nclass ToolBarComponent extends React.Component<Props, State> {\n    public readonly state = {\n        isOpen: false,\n    };\n\n    public translate = (id: string) => {\n        return id ? this.props.intl.formatMessage({ id }) : '';\n    };\n\n    public render() {\n        return (\n            <div className=\"pg-trading-header-container\">\n                <div className=\"pg-trading-header-container-selector\">\n                    <MarketSelector/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst reduxProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n    markets: selectMarkets(state),\n    currentMarket: selectCurrentMarket(state),\n    marketTickers: selectMarketTickers(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n    resetLayouts: payload => dispatch(resetLayouts(payload)),\n});\n\nexport const ToolBar = injectIntl(connect(reduxProps, mapDispatchToProps)(ToolBarComponent));\n"]},"metadata":{},"sourceType":"module"}