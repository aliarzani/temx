{"ast":null,"code":"import _toConsumableArray from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/temx/src/containers/HistoryElement/index.tsx\";\nimport { Decimal, Loader, Pagination } from '@openware/components';\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { History } from '../../components';\nimport { localeDate, preciseData, setDepositStatusColor, setTradesType, setWithdrawStatusColor, uppercase } from '../../helpers';\nimport { currenciesFetch, fetchHistory as _fetchHistory, selectCurrencies, selectCurrentPage, selectFirstElemIndex, selectFullHistory, selectHistory, selectHistoryLoading, selectLastElemIndex, selectMarkets, selectNextPageExists, selectPageCount, selectWallets } from '../../modules';\n\nvar HistoryComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(HistoryComponent, _React$Component);\n\n  function HistoryComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, HistoryComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HistoryComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderContent = function () {\n      var _this$props = _this.props,\n          type = _this$props.type,\n          firstElemIndex = _this$props.firstElemIndex,\n          lastElemIndex = _this$props.lastElemIndex,\n          fullHistory = _this$props.fullHistory,\n          page = _this$props.page,\n          nextPageExists = _this$props.nextPageExists;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(History, {\n        headers: _this.renderHeaders(type),\n        data: _this.retrieveData(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Pagination, {\n        firstElemIndex: firstElemIndex,\n        lastElemIndex: lastElemIndex,\n        total: fullHistory,\n        page: page,\n        nextPageExists: nextPageExists,\n        onClickPrevPage: _this.onClickPrevPage,\n        onClickNextPage: _this.onClickNextPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    };\n\n    _this.onClickPrevPage = function () {\n      var _this$props2 = _this.props,\n          page = _this$props2.page,\n          type = _this$props2.type;\n\n      _this.props.fetchHistory({\n        page: Number(page) - 1,\n        type: type,\n        limit: 25\n      });\n    };\n\n    _this.onClickNextPage = function () {\n      var _this$props3 = _this.props,\n          page = _this$props3.page,\n          type = _this$props3.type;\n\n      _this.props.fetchHistory({\n        page: Number(page) + 1,\n        type: type,\n        limit: 25\n      });\n    };\n\n    _this.renderHeaders = function (type) {\n      switch (type) {\n        case 'deposits':\n          return [_this.props.intl.formatMessage({\n            id: 'page.body.history.deposit.header.txid'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.deposit.header.date'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.deposit.header.currency'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.deposit.header.amount'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.deposit.header.status'\n          })];\n\n        case 'withdraws':\n          return [_this.props.intl.formatMessage({\n            id: 'page.body.history.withdraw.header.address'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.withdraw.header.date'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.withdraw.header.currency'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.withdraw.header.amount'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.withdraw.header.fee'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.withdraw.header.status'\n          })];\n\n        case 'trades':\n          return [_this.props.intl.formatMessage({\n            id: 'page.body.history.trade.header.date'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.trade.header.side'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.trade.header.market'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.trade.header.price'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.trade.header.amount'\n          }), _this.props.intl.formatMessage({\n            id: 'page.body.history.trade.header.total'\n          })];\n\n        default:\n          return [];\n      }\n    };\n\n    _this.retrieveData = function () {\n      var _this$props4 = _this.props,\n          type = _this$props4.type,\n          list = _this$props4.list;\n      return _toConsumableArray(list).map(function (item) {\n        return _this.renderTableRow(type, item);\n      });\n    };\n\n    _this.renderTableRow = function (type, item) {\n      var _this$props5 = _this.props,\n          currencies = _this$props5.currencies,\n          intl = _this$props5.intl,\n          marketsData = _this$props5.marketsData,\n          wallets = _this$props5.wallets;\n\n      switch (type) {\n        case 'deposits':\n          {\n            var amount = item.amount,\n                confirmations = item.confirmations,\n                created_at = item.created_at,\n                currency = item.currency,\n                txid = item.txid;\n\n            var blockchainLink = _this.getBlockchainLink(currency, txid);\n\n            var wallet = wallets.find(function (obj) {\n              return obj.currency === currency;\n            });\n            var itemCurrency = currencies && currencies.find(function (cur) {\n              return cur.id === currency;\n            });\n            var minConfirmations = itemCurrency && itemCurrency.min_confirmations;\n            var state = item.state === 'submitted' && confirmations !== undefined && minConfirmations !== undefined ? \"\".concat(confirmations, \"/\").concat(minConfirmations) : intl.formatMessage({\n              id: \"page.body.history.deposit.content.status.\".concat(item.state)\n            });\n            return [React.createElement(\"div\", {\n              className: \"pg-history-elem__hide\",\n              key: txid,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 181\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              href: blockchainLink,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 181\n              },\n              __self: this\n            }, txid)), localeDate(created_at, 'fullDate'), currency && currency.toUpperCase(), wallet && preciseData(amount, wallet.fixed), React.createElement(\"span\", {\n              style: {\n                color: setDepositStatusColor(item.state)\n              },\n              key: txid,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 185\n              },\n              __self: this\n            }, state)];\n          }\n\n        case 'withdraws':\n          {\n            var _txid = item.txid,\n                _created_at = item.created_at,\n                _currency = item.currency,\n                _amount = item.amount,\n                fee = item.fee,\n                rid = item.rid;\n\n            var _state = intl.formatMessage({\n              id: \"page.body.history.withdraw.content.status.\".concat(item.state)\n            });\n\n            var _blockchainLink = _this.getBlockchainLink(_currency, _txid, rid);\n\n            var _wallet = wallets.find(function (obj) {\n              return obj.currency === _currency;\n            });\n\n            return [React.createElement(\"div\", {\n              className: \"pg-history-elem__hide\",\n              key: _txid || rid,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 194\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              href: _blockchainLink,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 194\n              },\n              __self: this\n            }, _txid || rid)), localeDate(_created_at, 'fullDate'), uppercase(_currency), _wallet && preciseData(_amount, _wallet.fixed), fee, React.createElement(\"span\", {\n              style: {\n                color: setWithdrawStatusColor(item.state)\n              },\n              key: _txid || rid,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 199\n              },\n              __self: this\n            }, _state)];\n          }\n\n        case 'trades':\n          {\n            var id = item.id,\n                _created_at2 = item.created_at,\n                side = item.side,\n                market = item.market,\n                price = item.price,\n                _amount2 = item.amount,\n                total = item.total;\n            var marketToDisplay = marketsData.find(function (m) {\n              return m.id === market;\n            }) || {\n              name: '',\n              price_precision: 0,\n              amount_precision: 0\n            };\n            var marketName = marketToDisplay ? marketToDisplay.name : market;\n            var sideText = setTradesType(side).text.toLowerCase() ? intl.formatMessage({\n              id: \"page.body.history.trade.content.side.\".concat(setTradesType(side).text.toLowerCase())\n            }) : '';\n            return [localeDate(_created_at2, 'fullDate'), React.createElement(\"span\", {\n              style: {\n                color: setTradesType(side).color\n              },\n              key: id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 210\n              },\n              __self: this\n            }, sideText), marketName, React.createElement(Decimal, {\n              key: id,\n              fixed: marketToDisplay.price_precision,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 212\n              },\n              __self: this\n            }, price), React.createElement(Decimal, {\n              key: id,\n              fixed: marketToDisplay.amount_precision,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 213\n              },\n              __self: this\n            }, _amount2), React.createElement(Decimal, {\n              key: id,\n              fixed: marketToDisplay.amount_precision,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 214\n              },\n              __self: this\n            }, total)];\n          }\n\n        default:\n          {\n            return [];\n          }\n      }\n    };\n\n    _this.getBlockchainLink = function (currency, txid, rid) {\n      var wallets = _this.props.wallets;\n      var currencyInfo = wallets && wallets.find(function (wallet) {\n        return wallet.currency === currency;\n      });\n\n      if (currencyInfo) {\n        if (txid && currencyInfo.explorerTransaction) {\n          return currencyInfo.explorerTransaction.replace('#{txid}', txid);\n        }\n\n        if (rid && currencyInfo.explorerAddress) {\n          return currencyInfo.explorerAddress.replace('#{address}', rid);\n        }\n      }\n\n      return '';\n    };\n\n    return _this;\n  }\n\n  _createClass(HistoryComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props6 = this.props,\n          currencies = _this$props6.currencies,\n          type = _this$props6.type;\n      this.props.fetchHistory({\n        page: 0,\n        type: type,\n        limit: 25\n      });\n\n      if (currencies.length === 0) {\n        this.props.fetchCurrencies();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var currencies = this.props.currencies;\n\n      if (nextProps.currencies.length === 0 && nextProps.currencies !== currencies) {\n        this.props.fetchCurrencies();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          list = _this$props7.list,\n          fetching = _this$props7.fetching;\n      return React.createElement(\"div\", {\n        className: \"pg-history-elem \".concat(list.length ? '' : 'pg-history-elem-empty'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, fetching && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), list.length ? this.renderContent() : null, !list.length && !fetching ? React.createElement(\"p\", {\n        className: \"pg-history-elem__empty\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, this.props.intl.formatMessage({\n        id: 'page.noDataToShow'\n      })) : null);\n    }\n  }]);\n\n  return HistoryComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currencies: selectCurrencies(state),\n    marketsData: selectMarkets(state),\n    wallets: selectWallets(state),\n    list: selectHistory(state),\n    fetching: selectHistoryLoading(state),\n    fullHistory: selectFullHistory(state),\n    page: selectCurrentPage(state),\n    pageCount: selectPageCount(state, 25),\n    firstElemIndex: selectFirstElemIndex(state, 25),\n    lastElemIndex: selectLastElemIndex(state, 25),\n    nextPageExists: selectNextPageExists(state, 25)\n  };\n};\n\nexport var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchCurrencies: function fetchCurrencies() {\n      return dispatch(currenciesFetch());\n    },\n    fetchHistory: function fetchHistory(params) {\n      return dispatch(_fetchHistory(params));\n    }\n  };\n};\nvar HistoryElement = injectIntl(connect(mapStateToProps, mapDispatchToProps)(HistoryComponent));\nexport { HistoryElement };","map":{"version":3,"sources":["/workspaces/temx/src/containers/HistoryElement/index.tsx"],"names":["Decimal","Loader","Pagination","React","injectIntl","connect","History","localeDate","preciseData","setDepositStatusColor","setTradesType","setWithdrawStatusColor","uppercase","currenciesFetch","fetchHistory","selectCurrencies","selectCurrentPage","selectFirstElemIndex","selectFullHistory","selectHistory","selectHistoryLoading","selectLastElemIndex","selectMarkets","selectNextPageExists","selectPageCount","selectWallets","HistoryComponent","renderContent","props","type","firstElemIndex","lastElemIndex","fullHistory","page","nextPageExists","renderHeaders","retrieveData","onClickPrevPage","onClickNextPage","Number","limit","intl","formatMessage","id","list","map","item","renderTableRow","currencies","marketsData","wallets","amount","confirmations","created_at","currency","txid","blockchainLink","getBlockchainLink","wallet","find","obj","itemCurrency","cur","minConfirmations","min_confirmations","state","undefined","toUpperCase","fixed","color","fee","rid","side","market","price","total","marketToDisplay","m","name","price_precision","amount_precision","marketName","sideText","text","toLowerCase","currencyInfo","explorerTransaction","replace","explorerAddress","length","fetchCurrencies","nextProps","fetching","Component","mapStateToProps","pageCount","mapDispatchToProps","dispatch","params","HistoryElement"],"mappings":"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","sourcesContent":["import { Decimal, Loader, Pagination } from '@openware/components';\nimport * as React from 'react';\nimport {\n    InjectedIntlProps,\n    injectIntl,\n} from 'react-intl';\nimport {connect, MapDispatchToPropsFunction} from 'react-redux';\nimport { History } from '../../components';\nimport {\n    localeDate,\n    preciseData,\n    setDepositStatusColor,\n    setTradesType,\n    setWithdrawStatusColor,\n    uppercase,\n} from '../../helpers';\nimport {\n    currenciesFetch,\n    Currency,\n    fetchHistory,\n    Market,\n    RootState,\n    selectCurrencies,\n    selectCurrentPage,\n    selectFirstElemIndex,\n    selectFullHistory,\n    selectHistory,\n    selectHistoryLoading,\n    selectLastElemIndex,\n    selectMarkets,\n    selectNextPageExists,\n    selectPageCount,\n    selectWallets,\n    Wallet,\n    WalletHistoryList,\n} from '../../modules';\n\ninterface HistoryProps {\n    type: string;\n}\n\ninterface ReduxProps {\n    currencies: Currency[];\n    marketsData: Market[];\n    wallets: Wallet[];\n    list: WalletHistoryList;\n    fetching: boolean;\n    fullHistory: number;\n    page: number;\n    pageCount: number;\n    firstElemIndex: number;\n    lastElemIndex: number;\n    nextPageExists: boolean;\n}\n\ninterface DispatchProps {\n    fetchCurrencies: typeof currenciesFetch;\n    fetchHistory: typeof fetchHistory;\n}\n\ntype Props = HistoryProps & ReduxProps & DispatchProps & InjectedIntlProps;\n\nclass HistoryComponent extends React.Component<Props> {\n    public componentDidMount() {\n        const { currencies, type } = this.props;\n        this.props.fetchHistory({ page: 0, type, limit: 25 });\n\n        if (currencies.length === 0) {\n            this.props.fetchCurrencies();\n        }\n    }\n\n    public componentWillReceiveProps(nextProps) {\n        const { currencies } = this.props;\n\n        if (nextProps.currencies.length === 0 && nextProps.currencies !== currencies) {\n            this.props.fetchCurrencies();\n        }\n    }\n\n    public render() {\n        const { list, fetching } = this.props;\n        return (\n          <div className={`pg-history-elem ${list.length ? '' : 'pg-history-elem-empty'}`}>\n              {fetching && <Loader />}\n              {list.length ? this.renderContent() : null}\n              {!list.length && !fetching ? <p className=\"pg-history-elem__empty\">{this.props.intl.formatMessage({id: 'page.noDataToShow'})}</p> : null}\n          </div>\n        );\n    }\n\n    public renderContent = () => {\n        const { type, firstElemIndex, lastElemIndex, fullHistory, page, nextPageExists } = this.props;\n        return (\n            <React.Fragment>\n                <History headers={this.renderHeaders(type)} data={this.retrieveData()}/>\n                <Pagination\n                    firstElemIndex={firstElemIndex}\n                    lastElemIndex={lastElemIndex}\n                    total={fullHistory}\n                    page={page}\n                    nextPageExists={nextPageExists}\n                    onClickPrevPage={this.onClickPrevPage}\n                    onClickNextPage={this.onClickNextPage}\n                />\n            </React.Fragment>\n        );\n    };\n\n    private onClickPrevPage = () => {\n        const { page, type } = this.props;\n        this.props.fetchHistory({ page: Number(page) - 1, type, limit: 25 });\n    };\n\n    private onClickNextPage = () => {\n        const { page, type } = this.props;\n        this.props.fetchHistory({ page: Number(page) + 1, type, limit: 25 });\n    };\n\n    private renderHeaders = (type: string) => {\n        switch (type) {\n          case 'deposits':\n              return [\n                  this.props.intl.formatMessage({id: 'page.body.history.deposit.header.txid'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.deposit.header.date'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.deposit.header.currency'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.deposit.header.amount'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.deposit.header.status'}),\n              ];\n          case 'withdraws':\n              return [\n                  this.props.intl.formatMessage({id: 'page.body.history.withdraw.header.address'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.withdraw.header.date'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.withdraw.header.currency'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.withdraw.header.amount'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.withdraw.header.fee'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.withdraw.header.status'}),\n              ];\n          case 'trades':\n              return [\n                  this.props.intl.formatMessage({id: 'page.body.history.trade.header.date'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.trade.header.side'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.trade.header.market'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.trade.header.price'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.trade.header.amount'}),\n                  this.props.intl.formatMessage({id: 'page.body.history.trade.header.total'}),\n              ];\n          default:\n              return [];\n        }\n    };\n\n\n    private retrieveData = () => {\n        const { type, list } = this.props;\n        return [...list]\n            .map(item => this.renderTableRow(type, item));\n    };\n\n    private renderTableRow = (type, item) => {\n        const {\n            currencies,\n            intl,\n            marketsData,\n            wallets,\n        } = this.props;\n        switch (type) {\n            case 'deposits': {\n                const { amount, confirmations, created_at, currency, txid } = item;\n                const blockchainLink = this.getBlockchainLink(currency, txid);\n                const wallet = wallets.find(obj => obj.currency === currency);\n                const itemCurrency = currencies && currencies.find(cur => cur.id === currency);\n                const minConfirmations = itemCurrency && itemCurrency.min_confirmations;\n                const state = (item.state === 'submitted' && confirmations !== undefined && minConfirmations !== undefined) ? (\n                    `${confirmations}/${minConfirmations}`\n                ) : (\n                    intl.formatMessage({id: `page.body.history.deposit.content.status.${item.state}`})\n                );\n\n                return [\n                    <div className=\"pg-history-elem__hide\" key={txid}><a href={blockchainLink} target=\"_blank\" rel=\"noopener noreferrer\">{txid}</a></div>,\n                    localeDate(created_at, 'fullDate'),\n                    currency && currency.toUpperCase(),\n                    wallet && preciseData(amount, wallet.fixed),\n                    <span style={{ color: setDepositStatusColor(item.state) }} key={txid}>{state}</span>,\n                ];\n            }\n            case 'withdraws': {\n                const { txid, created_at, currency, amount, fee, rid } = item;\n                const state = intl.formatMessage({ id: `page.body.history.withdraw.content.status.${item.state}` });\n                const blockchainLink = this.getBlockchainLink(currency, txid, rid);\n                const wallet = wallets.find(obj => obj.currency === currency);\n                return [\n                    <div className=\"pg-history-elem__hide\" key={txid || rid}><a href={blockchainLink} target=\"_blank\" rel=\"noopener noreferrer\">{txid || rid}</a></div>,\n                    localeDate(created_at, 'fullDate'),\n                    uppercase(currency),\n                    wallet && preciseData(amount, wallet.fixed),\n                    fee,\n                    <span style={{ color: setWithdrawStatusColor(item.state) }} key={txid || rid}>{state}</span>,\n                ];\n            }\n            case 'trades': {\n                const { id, created_at, side, market, price, amount, total } = item;\n                const marketToDisplay = marketsData.find(m => m.id === market) ||\n                    { name: '', price_precision: 0, amount_precision: 0 };\n                const marketName = marketToDisplay ? marketToDisplay.name : market;\n                const sideText = setTradesType(side).text.toLowerCase() ? intl.formatMessage({id: `page.body.history.trade.content.side.${setTradesType(side).text.toLowerCase()}`}) : '';\n                return [\n                    localeDate(created_at, 'fullDate'),\n                    <span style={{ color: setTradesType(side).color }} key={id}>{sideText}</span>,\n                    marketName,\n                    <Decimal key={id} fixed={marketToDisplay.price_precision}>{price}</Decimal>,\n                    <Decimal key={id} fixed={marketToDisplay.amount_precision}>{amount}</Decimal>,\n                    <Decimal key={id} fixed={marketToDisplay.amount_precision}>{total}</Decimal>,\n                ];\n            }\n            default: {\n                return [];\n            }\n        }\n    };\n\n    private getBlockchainLink = (currency: string, txid: string, rid?: string) => {\n        const { wallets } = this.props;\n        const currencyInfo = wallets && wallets.find(wallet => wallet.currency === currency);\n        if (currencyInfo) {\n            if (txid && currencyInfo.explorerTransaction) {\n                return currencyInfo.explorerTransaction.replace('#{txid}', txid);\n            }\n            if (rid && currencyInfo.explorerAddress) {\n                return currencyInfo.explorerAddress.replace('#{address}', rid);\n            }\n        }\n        return '';\n    };\n}\n\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    currencies: selectCurrencies(state),\n    marketsData: selectMarkets(state),\n    wallets: selectWallets(state),\n    list: selectHistory(state),\n    fetching: selectHistoryLoading(state),\n    fullHistory: selectFullHistory(state),\n    page: selectCurrentPage(state),\n    pageCount: selectPageCount(state, 25),\n    firstElemIndex: selectFirstElemIndex(state, 25),\n    lastElemIndex: selectLastElemIndex(state, 25),\n    nextPageExists: selectNextPageExists(state, 25),\n});\n\n\nexport const mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        fetchCurrencies: () => dispatch(currenciesFetch()),\n        fetchHistory: params => dispatch(fetchHistory(params)),\n    });\n\nconst HistoryElement = injectIntl(connect(mapStateToProps, mapDispatchToProps)(HistoryComponent));\n\nexport {\n    HistoryElement,\n};\n"]},"metadata":{},"sourceType":"module"}