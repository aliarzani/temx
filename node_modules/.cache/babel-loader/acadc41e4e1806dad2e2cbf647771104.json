{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(ordersHistoryCancelSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { ordersHistoryCancelError } from '../actions';\nvar ordersCancelOptions = {\n  apiVersion: 'peatio'\n};\nexport function ordersHistoryCancelSaga(action) {\n  var id;\n  return _regeneratorRuntime.wrap(function ordersHistoryCancelSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          id = action.payload.id;\n          _context.next = 4;\n          return call(API.post(ordersCancelOptions), \"/market/orders/\".concat(id, \"/cancel\"), {\n            id: id\n          });\n\n        case 4:\n          _context.next = 6;\n          return put(alertPush({\n            message: ['success.order.cancelling'],\n            type: 'success'\n          }));\n\n        case 6:\n          _context.next = 14;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(ordersHistoryCancelError());\n\n        case 12:\n          _context.next = 14;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/ordersHistory/sagas/ordersHistoryCancelSaga.ts"],"names":["ordersHistoryCancelSaga","call","put","API","alertPush","ordersHistoryCancelError","ordersCancelOptions","apiVersion","action","id","payload","post","message","type","code"],"mappings":";;;;yBAaiBA,uB;;AAbjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SACIC,wBADJ,QAGO,YAHP;AAKA,IAAMC,mBAAmC,GAAG;AACxCC,EAAAA,UAAU,EAAE;AAD4B,CAA5C;AAIA,OAAO,SAAUP,uBAAV,CAAkCQ,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAESC,UAAAA,EAFT,GAEgBD,MAAM,CAACE,OAFvB,CAESD,EAFT;AAAA;AAGC,iBAAMR,IAAI,CAACE,GAAG,CAACQ,IAAJ,CAASL,mBAAT,CAAD,2BAAkDG,EAAlD,cAA+D;AAAEA,YAAAA,EAAE,EAAFA;AAAF,WAA/D,CAAV;;AAHD;AAAA;AAIC,iBAAMP,GAAG,CAACE,SAAS,CAAC;AAAEQ,YAAAA,OAAO,EAAE,CAAC,0BAAD,CAAX;AAAyCC,YAAAA,IAAI,EAAE;AAA/C,WAAD,CAAV,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMX,GAAG,CAACG,wBAAwB,EAAzB,CAAT;;AAND;AAAA;AAOC,iBAAMH,GAAG,CAACE,SAAS,CAAC;AAACQ,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBE,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CD,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport {\n    ordersHistoryCancelError,\n    OrdersHistoryCancelFetch,\n} from '../actions';\n\nconst ordersCancelOptions: RequestOptions = {\n    apiVersion: 'peatio',\n};\n\nexport function* ordersHistoryCancelSaga(action: OrdersHistoryCancelFetch) {\n    try {\n        const { id } = action.payload;\n        yield call(API.post(ordersCancelOptions), `/market/orders/${id}/cancel`, { id });\n        yield put(alertPush({ message: ['success.order.cancelling'], type: 'success'}));\n    } catch (error) {\n        yield put(ordersHistoryCancelError());\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}