{"ast":null,"code":"import { AUTH_LOGOUT_FAILURE, AUTH_LOGOUT_FETCH, AUTH_SIGN_IN_ERROR, AUTH_SIGN_IN_FETCH, AUTH_SIGN_IN_REQUIRE_2FA, AUTH_SIGN_UP_FETCH, AUTH_SIGN_UP_ERROR, AUTH_SIGN_UP_REQUIRE_VERIFICATION, AUTH_VERIFICATION_FETCH, AUTH_VERIFICATION_SUCCESS } from './constants';\nexport var signIn = function signIn(payload) {\n  return {\n    type: AUTH_SIGN_IN_FETCH,\n    payload: payload\n  };\n};\nexport var signInError = function signInError(payload) {\n  return {\n    type: AUTH_SIGN_IN_ERROR,\n    payload: payload\n  };\n};\nexport var signInRequire2FA = function signInRequire2FA(payload) {\n  return {\n    type: AUTH_SIGN_IN_REQUIRE_2FA,\n    payload: payload\n  };\n};\nexport var signUp = function signUp(payload) {\n  return {\n    type: AUTH_SIGN_UP_FETCH,\n    payload: payload\n  };\n};\nexport var signUpError = function signUpError(payload) {\n  return {\n    type: AUTH_SIGN_UP_ERROR,\n    payload: payload\n  };\n};\nexport var signUpRequireVerification = function signUpRequireVerification(payload) {\n  return {\n    type: AUTH_SIGN_UP_REQUIRE_VERIFICATION,\n    payload: payload\n  };\n};\nexport var verificationFetch = function verificationFetch(payload) {\n  return {\n    type: AUTH_VERIFICATION_FETCH,\n    payload: payload\n  };\n};\nexport var verificationSuccess = function verificationSuccess() {\n  return {\n    type: AUTH_VERIFICATION_SUCCESS\n  };\n};\nexport var logoutFetch = function logoutFetch() {\n  return {\n    type: AUTH_LOGOUT_FETCH\n  };\n};\nexport var logoutError = function logoutError(payload) {\n  return {\n    type: AUTH_LOGOUT_FAILURE,\n    payload: payload\n  };\n};","map":{"version":3,"sources":["/workspaces/temx/src/modules/user/auth/actions.ts"],"names":["AUTH_LOGOUT_FAILURE","AUTH_LOGOUT_FETCH","AUTH_SIGN_IN_ERROR","AUTH_SIGN_IN_FETCH","AUTH_SIGN_IN_REQUIRE_2FA","AUTH_SIGN_UP_FETCH","AUTH_SIGN_UP_ERROR","AUTH_SIGN_UP_REQUIRE_VERIFICATION","AUTH_VERIFICATION_FETCH","AUTH_VERIFICATION_SUCCESS","signIn","payload","type","signInError","signInRequire2FA","signUp","signUpError","signUpRequireVerification","verificationFetch","verificationSuccess","logoutFetch","logoutError"],"mappings":"AACA,SACIA,mBADJ,EAEIC,iBAFJ,EAGIC,kBAHJ,EAIIC,kBAJJ,EAKIC,wBALJ,EAMIC,kBANJ,EAOIC,kBAPJ,EAQIC,iCARJ,EAUIC,uBAVJ,EAWIC,yBAXJ,QAYO,aAZP;AAqGA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,OAAD;AAAA,SAAmD;AACrEC,IAAAA,IAAI,EAAET,kBAD+D;AAErEQ,IAAAA,OAAO,EAAPA;AAFqE,GAAnD;AAAA,CAAf;AAKP,OAAO,IAAME,WAAW,GAAG,SAAdA,WAAc,CAACF,OAAD;AAAA,SAAmD;AAC1EC,IAAAA,IAAI,EAAEV,kBADoE;AAE1ES,IAAAA,OAAO,EAAPA;AAF0E,GAAnD;AAAA,CAApB;AAKP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,OAAD;AAAA,SAA6D;AACzFC,IAAAA,IAAI,EAAER,wBADmF;AAEzFO,IAAAA,OAAO,EAAPA;AAFyF,GAA7D;AAAA,CAAzB;AAKP,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACJ,OAAD;AAAA,SAAmD;AACrEC,IAAAA,IAAI,EAAEP,kBAD+D;AAErEM,IAAAA,OAAO,EAAPA;AAFqE,GAAnD;AAAA,CAAf;AAKP,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACL,OAAD;AAAA,SAAmD;AAC1EC,IAAAA,IAAI,EAAEN,kBADoE;AAE1EK,IAAAA,OAAO,EAAPA;AAF0E,GAAnD;AAAA,CAApB;AAKP,OAAO,IAAMM,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACN,OAAD;AAAA,SAA+E;AACpHC,IAAAA,IAAI,EAAEL,iCAD8G;AAEpHI,IAAAA,OAAO,EAAPA;AAFoH,GAA/E;AAAA,CAAlC;AAKP,OAAO,IAAMO,iBAAiB,GAAG,SAApBA,iBAAoB,CAACP,OAAD;AAAA,SAA+D;AAC5FC,IAAAA,IAAI,EAAEJ,uBADsF;AAE5FG,IAAAA,OAAO,EAAPA;AAF4F,GAA/D;AAAA,CAA1B;AAKP,OAAO,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAA4B;AAC3DP,IAAAA,IAAI,EAAEH;AADqD,GAA5B;AAAA,CAA5B;AAIP,OAAO,IAAMW,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAoB;AAC3CR,IAAAA,IAAI,EAAEX;AADqC,GAApB;AAAA,CAApB;AAIP,OAAO,IAAMoB,WAAW,GAAG,SAAdA,WAAc,CAACV,OAAD;AAAA,SAAqD;AAC5EC,IAAAA,IAAI,EAAEZ,mBADsE;AAE5EW,IAAAA,OAAO,EAAPA;AAF4E,GAArD;AAAA,CAApB","sourcesContent":["import { CommonError } from '../../types';\nimport {\n    AUTH_LOGOUT_FAILURE,\n    AUTH_LOGOUT_FETCH,\n    AUTH_SIGN_IN_ERROR,\n    AUTH_SIGN_IN_FETCH,\n    AUTH_SIGN_IN_REQUIRE_2FA,\n    AUTH_SIGN_UP_FETCH,\n    AUTH_SIGN_UP_ERROR,\n    AUTH_SIGN_UP_REQUIRE_VERIFICATION,\n    AUTH_TEST_STATE,\n    AUTH_VERIFICATION_FETCH,\n    AUTH_VERIFICATION_SUCCESS,\n} from './constants';\n\nexport interface GeetestCaptchaResponse {\n    geetest_challenge: string;\n    geetest_validate: string;\n    geetest_seccode: string;\n}\n\nexport interface SignInFetch {\n    type: typeof AUTH_SIGN_IN_FETCH;\n    payload: {\n        email: string;\n        password: string;\n        otp_code?: string;\n        lang: string;\n    };\n}\n\nexport interface SignInError {\n    type: typeof AUTH_SIGN_IN_ERROR;\n    payload: CommonError;\n}\n\nexport interface SignInRequire2FA {\n    type: typeof AUTH_SIGN_IN_REQUIRE_2FA;\n    payload: {\n        require2fa: boolean;\n    };\n}\n\nexport interface SignUpFetch {\n    type: typeof AUTH_SIGN_UP_FETCH;\n    payload: {\n        email: string;\n        password: string;\n        captcha_response?: string | GeetestCaptchaResponse;\n        refid?: string;\n    };\n}\n\nexport interface SignUpError {\n    type: typeof AUTH_SIGN_UP_ERROR;\n    payload: CommonError;\n}\n\nexport interface SignUpRequireVerification {\n    type: typeof AUTH_SIGN_UP_REQUIRE_VERIFICATION;\n    payload: {\n        requireVerification: boolean;\n    };\n}\n\nexport interface VerificationFetch {\n    type: typeof AUTH_VERIFICATION_FETCH;\n    payload: {\n        token: string;\n    };\n}\n\nexport interface VerificationSuccess {\n    type: typeof AUTH_VERIFICATION_SUCCESS;\n}\n\nexport interface LogoutFetch {\n    type: typeof AUTH_LOGOUT_FETCH;\n}\n\nexport interface LogoutFailed {\n    type: typeof AUTH_LOGOUT_FAILURE;\n    payload: CommonError;\n}\n\nexport interface TestAuthState {\n    type: typeof AUTH_TEST_STATE;\n}\n\nexport type AuthAction =\n    | SignInFetch\n    | SignInError\n    | SignInRequire2FA\n    | SignUpFetch\n    | SignUpError\n    | SignUpRequireVerification\n    | VerificationFetch\n    | VerificationSuccess\n    | LogoutFailed\n    | LogoutFetch\n    | TestAuthState;\n\nexport const signIn = (payload: SignInFetch['payload']): SignInFetch => ({\n    type: AUTH_SIGN_IN_FETCH,\n    payload,\n});\n\nexport const signInError = (payload: SignInError['payload']): SignInError => ({\n    type: AUTH_SIGN_IN_ERROR,\n    payload,\n});\n\nexport const signInRequire2FA = (payload: SignInRequire2FA['payload']): SignInRequire2FA => ({\n    type: AUTH_SIGN_IN_REQUIRE_2FA,\n    payload,\n});\n\nexport const signUp = (payload: SignUpFetch['payload']): SignUpFetch => ({\n    type: AUTH_SIGN_UP_FETCH,\n    payload,\n});\n\nexport const signUpError = (payload: SignUpError['payload']): SignUpError => ({\n    type: AUTH_SIGN_UP_ERROR,\n    payload,\n});\n\nexport const signUpRequireVerification = (payload: SignUpRequireVerification['payload']): SignUpRequireVerification => ({\n    type: AUTH_SIGN_UP_REQUIRE_VERIFICATION,\n    payload,\n});\n\nexport const verificationFetch = (payload: VerificationFetch['payload']): VerificationFetch => ({\n    type: AUTH_VERIFICATION_FETCH,\n    payload,\n});\n\nexport const verificationSuccess = (): VerificationSuccess => ({\n    type: AUTH_VERIFICATION_SUCCESS,\n});\n\nexport const logoutFetch = (): LogoutFetch => ({\n    type: AUTH_LOGOUT_FETCH,\n});\n\nexport const logoutError = (payload: LogoutFailed['payload']): LogoutFailed => ({\n    type: AUTH_LOGOUT_FAILURE,\n    payload,\n});\n"]},"metadata":{},"sourceType":"module"}