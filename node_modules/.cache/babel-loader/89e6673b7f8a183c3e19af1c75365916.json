{"ast":null,"code":"import _defineProperty from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/codespaces-blank/baseapp-master/src/containers/ProfileApiKeys/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Button, Checkbox, Table } from '@openware/components';\nimport cr from 'classnames';\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { CopyableTextField, CustomInput } from '../../components';\nimport { localeDate } from '../../helpers/localeDate';\nimport { alertPush, apiKeyCreateFetch, apiKeyDeleteFetch, apiKeys2FAModal, apiKeysFetch, apiKeyUpdateFetch, selectUserInfo } from '../../modules';\nimport { selectApiKeys, selectApiKeysDataLoaded, selectApiKeysModal } from '../../modules/user/apiKeys/selectors';\n\n// tslint:disable jsx-no-multiline-js jsx-no-lambda\nvar ProfileApiKeysComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfileApiKeysComponent, _React$Component);\n\n  function ProfileApiKeysComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProfileApiKeysComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProfileApiKeysComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      otpCode: '',\n      codeFocused: false\n    };\n\n    _this.t = function (key) {\n      return _this.props.intl.formatMessage({\n        id: key\n      });\n    };\n\n    _this.copy = function (id) {\n      var copyText = document.querySelector(\"#\".concat(id));\n\n      if (copyText) {\n        copyText.select();\n        document.execCommand('copy');\n        window.getSelection().removeAllRanges(); // tslint:disable-line\n      }\n    };\n\n    _this.getTableHeaders = function () {\n      return [_this.t('page.body.profile.apiKeys.table.header.kid'), _this.t('page.body.profile.apiKeys.table.header.algorithm'), _this.t('page.body.profile.apiKeys.table.header.state'), '', _this.t('page.body.profile.apiKeys.table.header.created'), _this.t('page.body.profile.apiKeys.table.header.updated'), ''];\n    };\n\n    _this.renderModalHeader = function () {\n      var headerText = _this.props.modal.action === 'createSuccess' ? _this.t('page.body.profile.apiKeys.modal.created_header') : _this.t('page.body.profile.apiKeys.modal.header');\n      return React.createElement(\"div\", {\n        className: \"cr-email-form__options-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-email-form__option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-email-form__option-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, headerText, React.createElement(\"span\", {\n        className: \"pg-profile-page__close pg-profile-page__pull-right\",\n        onClick: _this.handleHide2FAModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }))));\n    };\n\n    _this.renderModalBody = function () {\n      var _this$state = _this.state,\n          otpCode = _this$state.otpCode,\n          codeFocused = _this$state.codeFocused;\n      var emailGroupClass = cr('cr-email-form__group', {\n        'cr-email-form__group--focused': codeFocused\n      });\n      var body;\n      var button;\n      var isDisabled = !otpCode.match(/.{6}/g);\n\n      switch (_this.props.modal.action) {\n        case 'createKey':\n          button = React.createElement(Button, {\n            label: _this.t('page.body.profile.apiKeys.modal.btn.create'),\n            onClick: _this.handleCreateKey,\n            className: !isDisabled ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled',\n            disabled: isDisabled,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 212\n            },\n            __self: this\n          });\n          break;\n\n        case 'createSuccess':\n          button = React.createElement(Button, {\n            label: _this.t('page.body.profile.apiKeys.modal.btn.create'),\n            onClick: _this.handleCreateSuccess,\n            className: 'cr-email-form__button',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 223\n            },\n            __self: this\n          });\n          body = React.createElement(\"div\", {\n            className: \"cr-success-create\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"pg-copyable-text__section\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231\n            },\n            __self: this\n          }, React.createElement(\"fieldset\", {\n            onClick: function onClick() {\n              return _this.handleCopy('access-key-id', 'access');\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232\n            },\n            __self: this\n          }, React.createElement(\"legend\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233\n            },\n            __self: this\n          }, _this.t('page.body.profile.apiKeys.modal.access_key'))), React.createElement(CopyableTextField, {\n            className: \"pg-copyable-text-field__input\",\n            fieldId: 'access-key-id',\n            value: _this.props.modal.apiKey.kid,\n            copyButtonText: _this.t('page.body.profile.content.copyLink'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234\n            },\n            __self: this\n          }))), React.createElement(\"div\", {\n            className: \"secret-section\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"secret-sign\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243\n            },\n            __self: this\n          }, \"\\u26A0\"), React.createElement(\"p\", {\n            className: \"secret-warning\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 244\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 245\n            },\n            __self: this\n          }, _this.t('page.body.profile.apiKeys.modal.secret_key')), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 246\n            },\n            __self: this\n          }), _this.t('page.body.profile.apiKeys.modal.secret_key_info'), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248\n            },\n            __self: this\n          }, \" \", _this.t('page.body.profile.apiKeys.modal.secret_key_store')))), React.createElement(\"div\", {\n            className: \"pg-copyable-text__section\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251\n            },\n            __self: this\n          }, React.createElement(\"fieldset\", {\n            onClick: function onClick() {\n              return _this.handleCopy('secret-key-id', 'secret');\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 252\n            },\n            __self: this\n          }, React.createElement(\"legend\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253\n            },\n            __self: this\n          }, _this.t('page.body.profile.apiKeys.modal.secret_key'))), React.createElement(CopyableTextField, {\n            className: \"pg-copyable-text-field__input\",\n            fieldId: 'secret_key-id',\n            value: _this.props.modal.apiKey.secret.data.value,\n            copyButtonText: _this.t('page.body.profile.content.copyLink'),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 254\n            },\n            __self: this\n          }))), React.createElement(\"p\", {\n            className: \"note-section\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }, _this.t('page.body.profile.apiKeys.modal.note'), \" \"), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }), _this.t('page.body.profile.apiKeys.modal.note_content')), React.createElement(\"div\", {\n            className: \"button-confirmation\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267\n            },\n            __self: this\n          }, button));\n          break;\n\n        case 'updateKey':\n          button = _this.props.modal.apiKey.state === 'active' ? React.createElement(Button, {\n            label: _this.t('page.body.profile.apiKeys.modal.btn.disabled'),\n            onClick: _this.handleUpdateKey,\n            className: !isDisabled ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled',\n            disabled: isDisabled,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277\n            },\n            __self: this\n          }) : React.createElement(Button, {\n            label: _this.t('page.body.profile.apiKeys.modal.btn.activate'),\n            onClick: _this.handleUpdateKey,\n            className: !isDisabled ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled',\n            disabled: isDisabled,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286\n            },\n            __self: this\n          });\n          break;\n\n        case 'deleteKey':\n          button = React.createElement(Button, {\n            label: _this.t('page.body.profile.apiKeys.modal.btn.delete'),\n            onClick: _this.handleDeleteKey,\n            className: !isDisabled ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled',\n            disabled: isDisabled,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297\n            },\n            __self: this\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      body = !body ? React.createElement(\"div\", {\n        className: \"cr-email-form__form-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-email-form__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, _this.t('page.body.profile.apiKeys.modal.title')), React.createElement(\"div\", {\n        className: emailGroupClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        type: \"number\",\n        label: _this.t('page.body.profile.apiKeys.modal.label'),\n        placeholder: _this.t('page.body.profile.apiKeys.modal.placeholder'),\n        defaultLabel: \"2FA code\",\n        handleChangeInput: _this.handleOtpCodeChange,\n        inputValue: otpCode || '',\n        handleFocusInput: _this.handleChangeFocusField,\n        classNameLabel: \"cr-email-form__label\",\n        classNameInput: \"cr-email-form__input\",\n        autoFocus: true,\n        onKeyPress: _this.handleEnterPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"cr-email-form__button-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, button)) : body;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, body);\n    };\n\n    _this.handleChangeFocusField = function () {\n      _this.setState(function (prev) {\n        return {\n          codeFocused: !prev.codeFocused\n        };\n      });\n    };\n\n    _this.handleHide2FAModal = function () {\n      var payload = {\n        active: false\n      };\n\n      _this.props.toggleApiKeys2FAModal(payload);\n\n      _this.setState({\n        otpCode: ''\n      });\n    };\n\n    _this.handleOtpCodeChange = function (value) {\n      _this.setState({\n        otpCode: value\n      });\n    };\n\n    _this.renderOnClick = function () {\n      switch (_this.props.modal.action) {\n        case 'createKey':\n          _this.handleCreateKey();\n\n          break;\n\n        case 'createSuccess':\n          _this.handleCreateSuccess();\n\n          break;\n\n        case 'updateKey':\n          _this.handleUpdateKey();\n\n          break;\n\n        case 'deleteKey':\n          _this.handleDeleteKey();\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.handleEnterPress = function (event) {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n\n        _this.renderOnClick();\n      }\n    };\n\n    _this.handleCreateKeyClick = function () {\n      var payload = {\n        active: true,\n        action: 'createKey'\n      };\n\n      _this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    _this.handleCreateKey = function () {\n      var payload = {\n        totp_code: _this.state.otpCode\n      };\n\n      _this.props.createApiKey(payload);\n\n      _this.setState({\n        otpCode: ''\n      });\n    };\n\n    _this.handleCreateSuccess = function () {\n      var payload = {\n        active: false\n      };\n\n      _this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    _this.handleToggleStateKeyClick = function (apiKey) {\n      var payload = {\n        active: true,\n        action: 'updateKey',\n        apiKey: apiKey\n      };\n\n      _this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    _this.handleUpdateKey = function () {\n      var apiKey = _objectSpread({}, _this.props.modal.apiKey);\n\n      apiKey.state = apiKey.state === 'active' ? 'disabled' : 'active';\n      var payload = {\n        totp_code: _this.state.otpCode,\n        apiKey: apiKey\n      };\n\n      _this.props.updateApiKey(payload);\n\n      _this.setState({\n        otpCode: ''\n      });\n    };\n\n    _this.handleCopy = function (id, type) {\n      _this.copy(id);\n\n      _this.props.fetchSuccess({\n        message: [\"success.api_keys.copied.\".concat(type)],\n        type: 'success'\n      });\n    };\n\n    _this.handleDeleteKeyClick = function (apiKey) {\n      var payload = {\n        active: true,\n        action: 'deleteKey',\n        apiKey: apiKey\n      };\n\n      _this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    _this.handleDeleteKey = function () {\n      var payload = {\n        kid: _this.props.modal.apiKey.kid,\n        totp_code: _this.state.otpCode\n      };\n\n      _this.props.deleteApiKey(payload);\n\n      _this.setState({\n        otpCode: ''\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ProfileApiKeysComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getApiKeys();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          dataLoaded = _this$props.dataLoaded,\n          apiKeys = _this$props.apiKeys;\n      var modal = this.props.modal.active ? React.createElement(\"div\", {\n        className: \"cr-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-email-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.renderModalHeader(), this.renderModalBody())) : null;\n      return React.createElement(\"div\", {\n        className: \"pg-profile-page__api-keys\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pg-profile-page-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pg-profile-page__api-keys__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.t('page.body.profile.apiKeys.header')), user.otp && dataLoaded && React.createElement(\"span\", {\n        className: \"pg-profile-page__pull-right\",\n        onClick: this.handleCreateKeyClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.t('page.body.profile.apiKeys.header.create')))), !user.otp && React.createElement(\"p\", {\n        className: \"pg-profile-page__label pg-profile-page__text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.t('page.body.profile.apiKeys.noOtp')), user.otp && dataLoaded && !apiKeys.length && React.createElement(\"div\", {\n        className: \"pg-profile-page__label pg-profile-page__text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, this.t('page.body.profile.apiKeys.noKeys')), user.otp && dataLoaded && apiKeys.length > 0 && React.createElement(Table, {\n        header: this.getTableHeaders(),\n        data: apiKeys && apiKeys.length ? this.getTableData(apiKeys) : [[]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), modal);\n    }\n  }, {\n    key: \"getTableData\",\n    value: function getTableData(apiKeysData) {\n      var _this2 = this;\n\n      return apiKeysData.map(function (item) {\n        return [item.kid, item.algorithm, React.createElement(\"div\", {\n          className: \"pg-profile-page__api-keys__state\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: item.state === 'active' ? 'pg-profile-page__api-keys__state__active' : 'pg-profile-page__api-keys__state__disabled',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, item.state)), React.createElement(\"div\", {\n          className: \"pg-profile-page__api-keys__state-checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: item.state === 'active',\n          className: 'pg-profile-page__switch',\n          onChange: function onChange() {\n            return _this2.handleToggleStateKeyClick(item);\n          },\n          label: '',\n          slider: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        })), localeDate(item.created_at, 'fullDate'), localeDate(item.updated_at, 'fullDate'), React.createElement(\"span\", {\n          className: \"pg-profile-page__close\",\n          key: item.kid,\n          onClick: function onClick() {\n            return _this2.handleDeleteKeyClick(item);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        })];\n      });\n    }\n  }]);\n\n  return ProfileApiKeysComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    apiKeys: selectApiKeys(state),\n    dataLoaded: selectApiKeysDataLoaded(state),\n    modal: selectApiKeysModal(state),\n    user: selectUserInfo(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toggleApiKeys2FAModal: function toggleApiKeys2FAModal(payload) {\n      return dispatch(apiKeys2FAModal(payload));\n    },\n    getApiKeys: function getApiKeys() {\n      return dispatch(apiKeysFetch());\n    },\n    createApiKey: function createApiKey(payload) {\n      return dispatch(apiKeyCreateFetch(payload));\n    },\n    updateApiKey: function updateApiKey(payload) {\n      return dispatch(apiKeyUpdateFetch(payload));\n    },\n    deleteApiKey: function deleteApiKey(payload) {\n      return dispatch(apiKeyDeleteFetch(payload));\n    },\n    fetchSuccess: function fetchSuccess(payload) {\n      return dispatch(alertPush(payload));\n    }\n  };\n};\n\nvar connected = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ProfileApiKeysComponent));\nvar ProfileApiKeys = withRouter(connected);\nexport { ProfileApiKeys };","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/containers/ProfileApiKeys/index.tsx"],"names":["Button","Checkbox","Table","cr","React","injectIntl","connect","withRouter","CopyableTextField","CustomInput","localeDate","alertPush","apiKeyCreateFetch","apiKeyDeleteFetch","apiKeys2FAModal","apiKeysFetch","apiKeyUpdateFetch","selectUserInfo","selectApiKeys","selectApiKeysDataLoaded","selectApiKeysModal","ProfileApiKeysComponent","state","otpCode","codeFocused","t","key","props","intl","formatMessage","id","copy","copyText","document","querySelector","select","execCommand","window","getSelection","removeAllRanges","getTableHeaders","renderModalHeader","headerText","modal","action","handleHide2FAModal","renderModalBody","emailGroupClass","body","button","isDisabled","match","handleCreateKey","handleCreateSuccess","handleCopy","apiKey","kid","secret","data","value","handleUpdateKey","handleDeleteKey","handleOtpCodeChange","handleChangeFocusField","handleEnterPress","setState","prev","payload","active","toggleApiKeys2FAModal","renderOnClick","event","preventDefault","handleCreateKeyClick","totp_code","createApiKey","handleToggleStateKeyClick","updateApiKey","type","fetchSuccess","message","handleDeleteKeyClick","deleteApiKey","getApiKeys","user","dataLoaded","apiKeys","otp","length","getTableData","apiKeysData","map","item","algorithm","created_at","updated_at","Component","mapStateToProps","mapDispatchToProps","dispatch","connected","ProfileApiKeys"],"mappings":"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","sourcesContent":["import { Button, Checkbox, Table } from '@openware/components';\nimport cr from 'classnames';\nimport * as React from 'react';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { CopyableTextField, CustomInput } from '../../components';\nimport { localeDate } from '../../helpers/localeDate';\n\nimport {\n    alertPush,\n    ApiKeyCreateFetch,\n    apiKeyCreateFetch, ApiKeyDataInterface,\n    ApiKeyDeleteFetch,\n    apiKeyDeleteFetch,\n    ApiKeys2FAModal,\n    apiKeys2FAModal, apiKeysFetch,\n    ApiKeyStateModal, ApiKeyUpdateFetch,\n    apiKeyUpdateFetch,\n    RootState,\n    selectUserInfo,\n    User,\n} from '../../modules';\nimport {\n    selectApiKeys,\n    selectApiKeysDataLoaded,\n    selectApiKeysModal,\n} from '../../modules/user/apiKeys/selectors';\n\ninterface ReduxProps {\n    apiKeys: ApiKeyDataInterface[] | [];\n    dataLoaded: boolean;\n    modal: ApiKeyStateModal;\n    user: User;\n}\n\ninterface DispatchProps {\n    toggleApiKeys2FAModal: typeof apiKeys2FAModal;\n    getApiKeys: typeof apiKeysFetch;\n    createApiKey: typeof apiKeyCreateFetch;\n    updateApiKey: typeof apiKeyUpdateFetch;\n    deleteApiKey: typeof apiKeyDeleteFetch;\n    fetchSuccess: typeof alertPush;\n}\n\ninterface ProfileApiKeysState {\n    otpCode: string;\n    codeFocused: boolean;\n}\n\ntype Props = ReduxProps & DispatchProps & InjectedIntlProps;\n\n// tslint:disable jsx-no-multiline-js jsx-no-lambda\nclass ProfileApiKeysComponent extends React.Component<Props, ProfileApiKeysState> {\n    public state = {\n        otpCode: '',\n        codeFocused: false,\n    };\n\n    public t = (key: string) => {\n        return this.props.intl.formatMessage({id: key});\n    };\n\n    public copy = (id: string) => {\n        const copyText: HTMLInputElement | null = document.querySelector(`#${id}`);\n\n        if (copyText) {\n            copyText.select();\n\n            document.execCommand('copy');\n            (window.getSelection() as any).removeAllRanges(); // tslint:disable-line\n        }\n    };\n\n    public componentDidMount(): void {\n        this.props.getApiKeys();\n    }\n\n    public render() {\n        const {user, dataLoaded, apiKeys} = this.props;\n        const modal = this.props.modal.active ? (\n            <div className=\"cr-modal\">\n                <div className=\"cr-email-form\">\n                    {this.renderModalHeader()}\n                    {this.renderModalBody()}\n                </div>\n            </div>\n        ) : null;\n\n        return (\n            <div className=\"pg-profile-page__api-keys\">\n                <div className=\"pg-profile-page-header\">\n                    <div className=\"pg-profile-page__api-keys__header\">\n                        <h3>{this.t('page.body.profile.apiKeys.header')}</h3>\n                        {user.otp && dataLoaded && (\n                            <span\n                                className=\"pg-profile-page__pull-right\"\n                                onClick={this.handleCreateKeyClick}\n                            >\n                                {this.t('page.body.profile.apiKeys.header.create')}\n                            </span>)}\n                    </div>\n                </div>\n\n                {!user.otp && (\n                    <p className=\"pg-profile-page__label pg-profile-page__text-center\">\n                        {this.t('page.body.profile.apiKeys.noOtp')}\n                    </p>\n                )}\n\n                {user.otp && dataLoaded && !apiKeys.length && (\n                    <div className=\"pg-profile-page__label pg-profile-page__text-center\">\n                        {this.t('page.body.profile.apiKeys.noKeys')}\n                    </div>\n                )}\n\n                {user.otp && dataLoaded && apiKeys.length > 0 && (\n                    <Table\n                        header={this.getTableHeaders()}\n                        data={apiKeys && apiKeys.length ? this.getTableData(apiKeys) : [[]]}\n                    />\n                )}\n\n                {modal}\n            </div>\n\n        );\n    }\n\n    private getTableHeaders = () => {\n        return [\n            this.t('page.body.profile.apiKeys.table.header.kid'),\n            this.t('page.body.profile.apiKeys.table.header.algorithm'),\n            this.t('page.body.profile.apiKeys.table.header.state'),\n            '',\n            this.t('page.body.profile.apiKeys.table.header.created'),\n            this.t('page.body.profile.apiKeys.table.header.updated'),\n            '',\n        ];\n    };\n\n    private getTableData(apiKeysData: ApiKeyDataInterface[]) {\n        return apiKeysData.map(item => (\n            [\n                item.kid,\n                item.algorithm,\n                (\n                    <div className=\"pg-profile-page__api-keys__state\">\n                        <span\n                            className={item.state === 'active' ? 'pg-profile-page__api-keys__state__active'\n                                : 'pg-profile-page__api-keys__state__disabled'}\n                        >\n                            {item.state}\n                        </span>\n                    </div>\n                ),\n                (\n                    <div className=\"pg-profile-page__api-keys__state-checkbox\">\n                        <Checkbox\n                            checked={item.state === 'active'}\n                            className={'pg-profile-page__switch'}\n                            onChange={() => this.handleToggleStateKeyClick(item)}\n                            label={''}\n                            slider={true}\n                        />\n                    </div>\n                )\n                ,\n                localeDate(item.created_at, 'fullDate'),\n                localeDate(item.updated_at, 'fullDate'),\n                (\n                    <span\n                        className=\"pg-profile-page__close\"\n                        key={item.kid}\n                        onClick={() => this.handleDeleteKeyClick(item)}\n                    />\n                ),\n            ]\n        ));\n    }\n\n    private renderModalHeader = () => {\n        const headerText = this.props.modal.action === 'createSuccess' ? this.t('page.body.profile.apiKeys.modal.created_header')\n            : this.t('page.body.profile.apiKeys.modal.header');\n        return (\n            <div className=\"cr-email-form__options-group\">\n                <div className=\"cr-email-form__option\">\n                    <div className=\"cr-email-form__option-inner\">\n                        {headerText}\n                        <span\n                            className=\"pg-profile-page__close pg-profile-page__pull-right\"\n                            onClick={this.handleHide2FAModal}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    private renderModalBody = () => {\n        const {otpCode, codeFocused} = this.state;\n        const emailGroupClass = cr('cr-email-form__group', {\n            'cr-email-form__group--focused': codeFocused,\n        });\n        let body;\n        let button;\n        const isDisabled = !otpCode.match(/.{6}/g);\n        switch (this.props.modal.action) {\n            case 'createKey':\n                button =\n                    (\n                        <Button\n                            label={this.t('page.body.profile.apiKeys.modal.btn.create')}\n                            onClick={this.handleCreateKey}\n                            className={!isDisabled ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled'}\n                            disabled={isDisabled}\n                        />\n                    );\n                break;\n            case 'createSuccess':\n                button =\n                    (\n                        <Button\n                            label={this.t('page.body.profile.apiKeys.modal.btn.create')}\n                            onClick={this.handleCreateSuccess}\n                            className={'cr-email-form__button'}\n                        />\n                    );\n                body = (\n                    <div className=\"cr-success-create\">\n                        <div className=\"pg-copyable-text__section\">\n                            <fieldset onClick={() => this.handleCopy('access-key-id', 'access')}>\n                                <legend><span>{this.t('page.body.profile.apiKeys.modal.access_key')}</span></legend>\n                                <CopyableTextField\n                                  className=\"pg-copyable-text-field__input\"\n                                  fieldId={'access-key-id'}\n                                  value={this.props.modal.apiKey.kid}\n                                  copyButtonText={this.t('page.body.profile.content.copyLink')}\n                                />\n                            </fieldset>\n                        </div>\n                        <div className=\"secret-section\">\n                            <span className=\"secret-sign\">&#9888;</span>\n                            <p className=\"secret-warning\">\n                                <span>{this.t('page.body.profile.apiKeys.modal.secret_key')}</span>\n                                <br/>\n                                {this.t('page.body.profile.apiKeys.modal.secret_key_info')}\n                                <span> {this.t('page.body.profile.apiKeys.modal.secret_key_store')}</span>\n                            </p>\n                        </div>\n                        <div className=\"pg-copyable-text__section\">\n                            <fieldset onClick={() => this.handleCopy('secret-key-id', 'secret')}>\n                                <legend><span>{this.t('page.body.profile.apiKeys.modal.secret_key')}</span></legend>\n                                <CopyableTextField\n                                  className=\"pg-copyable-text-field__input\"\n                                  fieldId={'secret_key-id'}\n                                  value={this.props.modal.apiKey.secret.data.value}\n                                  copyButtonText={this.t('page.body.profile.content.copyLink')}\n                                />\n                            </fieldset>\n                        </div>\n                        <p className=\"note-section\">\n                            <span>{this.t('page.body.profile.apiKeys.modal.note')} </span>\n                            <br/>\n                            {this.t('page.body.profile.apiKeys.modal.note_content')}\n                        </p>\n                        <div className=\"button-confirmation\">\n                            {button}\n                        </div>\n                    </div>\n                );\n                break;\n            case 'updateKey':\n                button =\n                    this.props.modal.apiKey.state === 'active' ?\n                        (\n                            <Button\n                                label={this.t('page.body.profile.apiKeys.modal.btn.disabled')}\n                                onClick={this.handleUpdateKey}\n                                className={!isDisabled ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled'}\n                                disabled={isDisabled}\n                            />\n                        )\n                        :\n                        (\n                            <Button\n                                label={this.t('page.body.profile.apiKeys.modal.btn.activate')}\n                                onClick={this.handleUpdateKey}\n                                className={!isDisabled ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled'}\n                                disabled={isDisabled}\n                            />\n                        );\n                break;\n            case 'deleteKey':\n                button =\n                    (\n                        <Button\n                            label={this.t('page.body.profile.apiKeys.modal.btn.delete')}\n                            onClick={this.handleDeleteKey}\n                            className={!isDisabled ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled'}\n                            disabled={isDisabled}\n                        />\n                    );\n                break;\n            default:\n                break;\n        }\n        body = !body ? (\n            <div className=\"cr-email-form__form-content\">\n                <div className=\"cr-email-form__header\">\n                    {this.t('page.body.profile.apiKeys.modal.title')}\n                </div>\n                <div className={emailGroupClass}>\n                    <CustomInput\n                        type=\"number\"\n                        label={this.t('page.body.profile.apiKeys.modal.label')}\n                        placeholder={this.t('page.body.profile.apiKeys.modal.placeholder')}\n                        defaultLabel=\"2FA code\"\n                        handleChangeInput={this.handleOtpCodeChange}\n                        inputValue={otpCode || ''}\n                        handleFocusInput={this.handleChangeFocusField}\n                        classNameLabel=\"cr-email-form__label\"\n                        classNameInput=\"cr-email-form__input\"\n                        autoFocus={true}\n                        onKeyPress={this.handleEnterPress}\n                    />\n                </div>\n                <div className=\"cr-email-form__button-wrapper\">\n                    {button}\n                </div>\n            </div>\n        ) : body;\n        return (\n            <React.Fragment>\n                {body}\n            </React.Fragment>\n        );\n    };\n\n    private handleChangeFocusField = () => {\n        this.setState(prev => ({\n            codeFocused: !prev.codeFocused,\n        }));\n    };\n\n    private handleHide2FAModal = () => {\n        const payload: ApiKeys2FAModal['payload'] = {active: false};\n        this.props.toggleApiKeys2FAModal(payload);\n        this.setState({ otpCode: '' });\n    };\n\n    private handleOtpCodeChange = (value: string) => {\n        this.setState({\n            otpCode: value,\n        });\n    };\n\n    private renderOnClick = () => {\n        switch (this.props.modal.action) {\n            case 'createKey':\n                this.handleCreateKey();\n                break;\n            case 'createSuccess':\n                this.handleCreateSuccess();\n                break;\n            case 'updateKey':\n                this.handleUpdateKey();\n                break;\n            case 'deleteKey':\n                this.handleDeleteKey();\n                break;\n            default:\n                break;\n        }\n    };\n\n    private handleEnterPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            this.renderOnClick();\n        }\n    };\n\n    private handleCreateKeyClick = () => {\n        const payload: ApiKeys2FAModal['payload'] = {active: true, action: 'createKey'};\n        this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    private handleCreateKey = () => {\n        const payload: ApiKeyCreateFetch['payload'] = {totp_code: this.state.otpCode};\n        this.props.createApiKey(payload);\n        this.setState({otpCode: ''});\n    };\n\n    private handleCreateSuccess = () => {\n        const payload: ApiKeys2FAModal['payload'] = {active: false};\n        this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    private handleToggleStateKeyClick = apiKey => {\n        const payload: ApiKeys2FAModal['payload'] = {active: true, action: 'updateKey', apiKey};\n        this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    private handleUpdateKey = () => {\n        const apiKey: ApiKeyDataInterface = {...this.props.modal.apiKey};\n        apiKey.state = apiKey.state === 'active' ? 'disabled' : 'active';\n        const payload: ApiKeyUpdateFetch['payload'] = {totp_code: this.state.otpCode, apiKey: apiKey};\n        this.props.updateApiKey(payload);\n        this.setState({otpCode: ''});\n    };\n\n    private handleCopy = (id: string, type: string) => {\n        this.copy(id);\n        this.props.fetchSuccess({ message: [`success.api_keys.copied.${type}`], type: 'success'});\n    };\n\n    private handleDeleteKeyClick = apiKey => {\n        const payload: ApiKeys2FAModal['payload'] = {active: true, action: 'deleteKey', apiKey};\n        this.props.toggleApiKeys2FAModal(payload);\n    };\n\n    private handleDeleteKey = () => {\n        const payload: ApiKeyDeleteFetch['payload'] = {kid: this.props.modal.apiKey.kid, totp_code: this.state.otpCode};\n        this.props.deleteApiKey(payload);\n        this.setState({otpCode: ''});\n    }\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    apiKeys: selectApiKeys(state),\n    dataLoaded: selectApiKeysDataLoaded(state),\n    modal: selectApiKeysModal(state),\n    user: selectUserInfo(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        toggleApiKeys2FAModal: (payload: ApiKeys2FAModal['payload']) => dispatch(apiKeys2FAModal(payload)),\n        getApiKeys: () => dispatch(apiKeysFetch()),\n        createApiKey: payload => dispatch(apiKeyCreateFetch(payload)),\n        updateApiKey: payload => dispatch(apiKeyUpdateFetch(payload)),\n        deleteApiKey: payload => dispatch(apiKeyDeleteFetch(payload)),\n        fetchSuccess: payload => dispatch(alertPush(payload)),\n    });\n\nconst connected = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ProfileApiKeysComponent));\nconst ProfileApiKeys = withRouter(connected);\n\nexport {\n    ProfileApiKeys,\n};\n"]},"metadata":{},"sourceType":"module"}