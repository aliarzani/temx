{"ast":null,"code":"import _defineProperty from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { MARKETS_DATA, MARKETS_ERROR, MARKETS_FETCH, MARKETS_SET_CURRENT_MARKET, MARKETS_SET_CURRENT_MARKET_IFUNSET, MARKETS_TICKERS_DATA, MARKETS_TICKERS_ERROR, MARKETS_TICKERS_FETCH } from './constants';\nexport var initialMarketsState = {\n  list: [],\n  currentMarket: undefined,\n  tickers: {},\n  tickerLoading: false,\n  loading: false\n};\nexport var marketsReducer = function marketsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialMarketsState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case MARKETS_FETCH:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case MARKETS_DATA:\n      return _objectSpread({}, state, {\n        loading: false,\n        list: action.payload\n      });\n\n    case MARKETS_ERROR:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    case MARKETS_SET_CURRENT_MARKET:\n      return _objectSpread({}, state, {\n        currentMarket: action.payload\n      });\n\n    case MARKETS_SET_CURRENT_MARKET_IFUNSET:\n      if (state.currentMarket) {\n        return state;\n      }\n\n      return _objectSpread({}, state, {\n        currentMarket: action.payload\n      });\n\n    case MARKETS_TICKERS_FETCH:\n      return _objectSpread({}, state, {\n        tickerLoading: true\n      });\n\n    case MARKETS_TICKERS_DATA:\n      return _objectSpread({}, state, {\n        tickerLoading: false,\n        tickers: action.payload\n      });\n\n    case MARKETS_TICKERS_ERROR:\n      return _objectSpread({}, state, {\n        tickerLoading: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/workspaces/temx/src/modules/public/markets/reducer.ts"],"names":["MARKETS_DATA","MARKETS_ERROR","MARKETS_FETCH","MARKETS_SET_CURRENT_MARKET","MARKETS_SET_CURRENT_MARKET_IFUNSET","MARKETS_TICKERS_DATA","MARKETS_TICKERS_ERROR","MARKETS_TICKERS_FETCH","initialMarketsState","list","currentMarket","undefined","tickers","tickerLoading","loading","marketsReducer","state","action","type","payload"],"mappings":";;;;;;AAEA,SACIA,YADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,0BAJJ,EAKIC,kCALJ,EAMIC,oBANJ,EAOIC,qBAPJ,EAQIC,qBARJ,QASO,aATP;AAsBA,OAAO,IAAMC,mBAAiC,GAAG;AAC7CC,EAAAA,IAAI,EAAE,EADuC;AAE7CC,EAAAA,aAAa,EAAEC,SAF8B;AAG7CC,EAAAA,OAAO,EAAE,EAHoC;AAI7CC,EAAAA,aAAa,EAAE,KAJ8B;AAK7CC,EAAAA,OAAO,EAAE;AALoC,CAA1C;AAQP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAwD;AAAA,MAAvDC,KAAuD,uEAA/CR,mBAA+C;AAAA,MAA1BS,MAA0B;;AAClF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhB,aAAL;AACI,+BACOc,KADP;AAEIF,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKd,YAAL;AACI,+BACOgB,KADP;AAEIF,QAAAA,OAAO,EAAE,KAFb;AAGIL,QAAAA,IAAI,EAAEQ,MAAM,CAACE;AAHjB;;AAKJ,SAAKlB,aAAL;AACI,+BACOe,KADP;AAEIF,QAAAA,OAAO,EAAE;AAFb;;AAKJ,SAAKX,0BAAL;AACI,+BACOa,KADP;AAEIN,QAAAA,aAAa,EAAEO,MAAM,CAACE;AAF1B;;AAKJ,SAAKf,kCAAL;AACI,UAAIY,KAAK,CAACN,aAAV,EAAyB;AACrB,eAAOM,KAAP;AACH;;AACD,+BACOA,KADP;AAEIN,QAAAA,aAAa,EAAEO,MAAM,CAACE;AAF1B;;AAKJ,SAAKZ,qBAAL;AACI,+BACOS,KADP;AAEIH,QAAAA,aAAa,EAAE;AAFnB;;AAIJ,SAAKR,oBAAL;AACI,+BACOW,KADP;AAEIH,QAAAA,aAAa,EAAE,KAFnB;AAGID,QAAAA,OAAO,EAAEK,MAAM,CAACE;AAHpB;;AAKJ,SAAKb,qBAAL;AACI,+BACOU,KADP;AAEIH,QAAAA,aAAa,EAAE;AAFnB;;AAKJ;AACI,aAAOG,KAAP;AAnDR;AAqDH,CAtDM","sourcesContent":["import { CommonState } from '../../types';\nimport { MarketsAction } from './actions';\nimport {\n    MARKETS_DATA,\n    MARKETS_ERROR,\n    MARKETS_FETCH,\n    MARKETS_SET_CURRENT_MARKET,\n    MARKETS_SET_CURRENT_MARKET_IFUNSET,\n    MARKETS_TICKERS_DATA,\n    MARKETS_TICKERS_ERROR,\n    MARKETS_TICKERS_FETCH,\n} from './constants';\nimport { Market, Ticker } from './types';\n\nexport interface MarketsState extends CommonState {\n    list: Market[];\n    currentMarket: Market | undefined;\n    tickers: {\n        [pair: string]: Ticker;\n    };\n    tickerLoading: boolean;\n    loading: boolean;\n}\n\nexport const initialMarketsState: MarketsState = {\n    list: [],\n    currentMarket: undefined,\n    tickers: {},\n    tickerLoading: false,\n    loading: false,\n};\n\nexport const marketsReducer = (state = initialMarketsState, action: MarketsAction) => {\n    switch (action.type) {\n        case MARKETS_FETCH:\n            return {\n                ...state,\n                loading: true,\n            };\n        case MARKETS_DATA:\n            return {\n                ...state,\n                loading: false,\n                list: action.payload,\n            };\n        case MARKETS_ERROR:\n            return {\n                ...state,\n                loading: false,\n            };\n\n        case MARKETS_SET_CURRENT_MARKET:\n            return {\n                ...state,\n                currentMarket: action.payload,\n            };\n\n        case MARKETS_SET_CURRENT_MARKET_IFUNSET:\n            if (state.currentMarket) {\n                return state;\n            }\n            return {\n                ...state,\n                currentMarket: action.payload,\n            };\n\n        case MARKETS_TICKERS_FETCH:\n            return {\n                ...state,\n                tickerLoading: true,\n            };\n        case MARKETS_TICKERS_DATA:\n            return {\n                ...state,\n                tickerLoading: false,\n                tickers: action.payload,\n            };\n        case MARKETS_TICKERS_ERROR:\n            return {\n                ...state,\n                tickerLoading: false,\n            };\n\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}