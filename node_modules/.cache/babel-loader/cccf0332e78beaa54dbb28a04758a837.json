{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(generate2faQRSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { generate2faQRData, generate2faQRError } from '../actions';\nvar generate2faQROptions = {\n  apiVersion: 'barong'\n};\nexport function generate2faQRSaga() {\n  var qrData, _qrData$data, barcode, url;\n\n  return _regeneratorRuntime.wrap(function generate2faQRSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.post(generate2faQROptions), '/resource/otp/generate_qrcode');\n\n        case 3:\n          qrData = _context.sent;\n          _qrData$data = qrData.data, barcode = _qrData$data.barcode, url = _qrData$data.url;\n          _context.next = 7;\n          return put(generate2faQRData({\n            barcode: barcode,\n            url: url\n          }));\n\n        case 7:\n          _context.next = 15;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 13;\n          return put(generate2faQRError(_context.t0));\n\n        case 13:\n          _context.next = 15;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/profile/sagas/generate2faQRSaga.ts"],"names":["generate2faQRSaga","call","put","API","alertPush","generate2faQRData","generate2faQRError","generate2faQROptions","apiVersion","post","qrData","data","barcode","url","message","code","type"],"mappings":";;;;yBAiBiBA,iB;;AAjBjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,iBAAT,EAA4BC,kBAA5B,QAAsD,YAAtD;AAEA,IAAMC,oBAAoC,GAAG;AACzCC,EAAAA,UAAU,EAAE;AAD6B,CAA7C;AAWA,OAAO,SAAUR,iBAAV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEoC,iBAAMC,IAAI,CAACE,GAAG,CAACM,IAAJ,CAASF,oBAAT,CAAD,EAAiC,+BAAjC,CAAV;;AAFpC;AAEOG,UAAAA,MAFP;AAAA,yBAG0BA,MAAM,CAACC,IAHjC,EAGSC,OAHT,gBAGSA,OAHT,EAGkBC,GAHlB,gBAGkBA,GAHlB;AAAA;AAIC,iBAAMX,GAAG,CAACG,iBAAiB,CAAC;AAAEO,YAAAA,OAAO,EAAPA,OAAF;AAAWC,YAAAA,GAAG,EAAHA;AAAX,WAAD,CAAlB,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMX,GAAG,CAACI,kBAAkB,aAAnB,CAAT;;AAND;AAAA;AAOC,iBAAMJ,GAAG,CAACE,SAAS,CAAC;AAACU,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBC,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CC,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { generate2faQRData, generate2faQRError } from '../actions';\n\nconst generate2faQROptions: RequestOptions = {\n    apiVersion: 'barong',\n};\n\ninterface GenerateQRResponse {\n    data: {\n        barcode: string;\n        url: string;\n    };\n}\n\nexport function* generate2faQRSaga() {\n    try {\n        const qrData: GenerateQRResponse = yield call(API.post(generate2faQROptions), '/resource/otp/generate_qrcode');\n        const { barcode, url } = qrData.data;\n        yield put(generate2faQRData({ barcode, url }));\n    } catch (error) {\n        yield put(generate2faQRError(error));\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}