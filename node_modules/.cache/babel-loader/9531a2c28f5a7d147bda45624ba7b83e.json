{"ast":null,"code":"import _toConsumableArray from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_MOBILE_WALLET_UI, WALLETS_ADDRESS_DATA, WALLETS_ADDRESS_ERROR, WALLETS_ADDRESS_FETCH, WALLETS_DATA, WALLETS_ERROR, WALLETS_FETCH, WALLETS_RESET, WALLETS_WITHDRAW_CCY_DATA, WALLETS_WITHDRAW_CCY_ERROR, WALLETS_WITHDRAW_CCY_FETCH } from './constants';\nexport var initialWalletsState = {\n  wallets: {\n    list: [],\n    loading: false,\n    withdrawSuccess: false,\n    mobileWalletChosen: '',\n    selectedWalletAddress: ''\n  }\n};\n\nvar walletsListReducer = function walletsListReducer(state, action) {\n  switch (action.type) {\n    case WALLETS_ADDRESS_FETCH:\n    case WALLETS_FETCH:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case WALLETS_WITHDRAW_CCY_FETCH:\n      return _objectSpread({}, state, {\n        loading: true,\n        withdrawSuccess: false\n      });\n\n    case WALLETS_DATA:\n      {\n        var list = _toConsumableArray(action.payload);\n\n        var btcIndex = list.findIndex(function (wallet) {\n          return wallet.currency.toLowerCase() === 'btc';\n        });\n\n        if (btcIndex >= 0) {\n          var temp = list[btcIndex];\n          list[btcIndex] = list[0];\n          list[0] = temp;\n        }\n\n        return _objectSpread({}, state, {\n          loading: false,\n          list: list\n        });\n      }\n\n    case WALLETS_ADDRESS_DATA:\n      {\n        var walletIndex = state.list.findIndex(function (wallet) {\n          return wallet.currency.toLowerCase() === action.payload.currency.toLowerCase();\n        });\n\n        if (walletIndex !== -1) {\n          return _objectSpread({}, state, {\n            loading: false,\n            selectedWalletAddress: action.payload.address\n          });\n        }\n\n        return _objectSpread({}, state, {\n          loading: false\n        });\n      }\n\n    case WALLETS_WITHDRAW_CCY_DATA:\n      return _objectSpread({}, state, {\n        loading: false,\n        withdrawSuccess: true\n      });\n\n    case WALLETS_WITHDRAW_CCY_ERROR:\n      return _objectSpread({}, state, {\n        loading: false,\n        withdrawSuccess: false,\n        error: action.payload\n      });\n\n    case WALLETS_ADDRESS_ERROR:\n    case WALLETS_ERROR:\n      return _objectSpread({}, state, {\n        loading: false,\n        error: action.payload\n      });\n\n    case SET_MOBILE_WALLET_UI:\n      return _objectSpread({}, state, {\n        mobileWalletChosen: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport var walletsReducer = function walletsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialWalletsState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case WALLETS_FETCH:\n    case WALLETS_DATA:\n    case WALLETS_ERROR:\n    case WALLETS_ADDRESS_FETCH:\n    case WALLETS_ADDRESS_DATA:\n    case WALLETS_ADDRESS_ERROR:\n    case WALLETS_WITHDRAW_CCY_FETCH:\n    case WALLETS_WITHDRAW_CCY_DATA:\n    case SET_MOBILE_WALLET_UI:\n    case WALLETS_WITHDRAW_CCY_ERROR:\n      var walletsListState = _objectSpread({}, state.wallets);\n\n      return _objectSpread({}, state, {\n        wallets: walletsListReducer(walletsListState, action)\n      });\n\n    case WALLETS_RESET:\n      return _objectSpread({}, state, {\n        wallets: {\n          list: [],\n          loading: false,\n          withdrawSuccess: false,\n          mobileWalletChosen: '',\n          selectedWalletAddress: ''\n        }\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/workspaces/temx/src/modules/user/wallets/reducer.ts"],"names":["SET_MOBILE_WALLET_UI","WALLETS_ADDRESS_DATA","WALLETS_ADDRESS_ERROR","WALLETS_ADDRESS_FETCH","WALLETS_DATA","WALLETS_ERROR","WALLETS_FETCH","WALLETS_RESET","WALLETS_WITHDRAW_CCY_DATA","WALLETS_WITHDRAW_CCY_ERROR","WALLETS_WITHDRAW_CCY_FETCH","initialWalletsState","wallets","list","loading","withdrawSuccess","mobileWalletChosen","selectedWalletAddress","walletsListReducer","state","action","type","payload","btcIndex","findIndex","wallet","currency","toLowerCase","temp","walletIndex","address","error","walletsReducer","walletsListState"],"mappings":"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","sourcesContent":["import { CommonError } from '../../types';\nimport { WalletsAction } from './actions';\nimport {\n    SET_MOBILE_WALLET_UI,\n    WALLETS_ADDRESS_DATA,\n    WALLETS_ADDRESS_ERROR,\n    WALLETS_ADDRESS_FETCH,\n    WALLETS_DATA,\n    WALLETS_ERROR,\n    WALLETS_FETCH,\n    WALLETS_RESET,\n    WALLETS_WITHDRAW_CCY_DATA,\n    WALLETS_WITHDRAW_CCY_ERROR,\n    WALLETS_WITHDRAW_CCY_FETCH,\n} from './constants';\nimport { Wallet } from './types';\n\nexport interface WalletsState {\n    wallets: {\n        list: Wallet[];\n        loading: boolean;\n        withdrawSuccess: boolean;\n        error?: CommonError;\n        mobileWalletChosen: string;\n        selectedWalletAddress: string;\n    };\n}\n\nexport const initialWalletsState: WalletsState = {\n    wallets: {\n        list: [],\n        loading: false,\n        withdrawSuccess: false,\n        mobileWalletChosen: '',\n        selectedWalletAddress: '',\n    },\n};\n\nconst walletsListReducer = (state: WalletsState['wallets'], action: WalletsAction): WalletsState['wallets'] => {\n    switch (action.type) {\n        case WALLETS_ADDRESS_FETCH:\n        case WALLETS_FETCH:\n            return {\n                ...state,\n                loading: true,\n            };\n        case WALLETS_WITHDRAW_CCY_FETCH:\n            return {\n                ...state,\n                loading: true,\n                withdrawSuccess: false,\n            };\n        case WALLETS_DATA: {\n            const list = [ ...action.payload ];\n            const btcIndex = list.findIndex(wallet => wallet.currency.toLowerCase() === 'btc');\n            if (btcIndex >= 0) {\n                const temp = list[btcIndex];\n                list[btcIndex] = list[0];\n                list[0] = temp;\n            }\n            return {\n                ...state,\n                loading: false,\n                list,\n            };\n        }\n        case WALLETS_ADDRESS_DATA: {\n            const walletIndex = state.list.findIndex(\n                wallet => wallet.currency.toLowerCase() === action.payload.currency.toLowerCase(),\n            );\n\n            if (walletIndex !== -1) {\n                return {\n                    ...state,\n                    loading: false,\n                    selectedWalletAddress: action.payload.address,\n                };\n            }\n\n            return {\n                ...state,\n                loading: false,\n            };\n        }\n        case WALLETS_WITHDRAW_CCY_DATA:\n            return {\n                ...state,\n                loading: false,\n                withdrawSuccess: true,\n            };\n        case WALLETS_WITHDRAW_CCY_ERROR:\n            return {\n                ...state,\n                loading: false,\n                withdrawSuccess: false,\n                error: action.payload,\n            };\n        case WALLETS_ADDRESS_ERROR:\n        case WALLETS_ERROR:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n            };\n\n        case SET_MOBILE_WALLET_UI:\n            return { ...state, mobileWalletChosen: action.payload };\n        default:\n            return state;\n    }\n};\n\nexport const walletsReducer = (state = initialWalletsState, action: WalletsAction): WalletsState => {\n    switch (action.type) {\n        case WALLETS_FETCH:\n        case WALLETS_DATA:\n        case WALLETS_ERROR:\n        case WALLETS_ADDRESS_FETCH:\n        case WALLETS_ADDRESS_DATA:\n        case WALLETS_ADDRESS_ERROR:\n        case WALLETS_WITHDRAW_CCY_FETCH:\n        case WALLETS_WITHDRAW_CCY_DATA:\n        case SET_MOBILE_WALLET_UI:\n        case WALLETS_WITHDRAW_CCY_ERROR:\n            const walletsListState = { ...state.wallets };\n            return {\n                ...state,\n                wallets: walletsListReducer(walletsListState, action),\n            };\n        case WALLETS_RESET:\n            return {\n                ...state,\n                wallets: {\n                    list: [],\n                    loading: false,\n                    withdrawSuccess: false,\n                    mobileWalletChosen: '',\n                    selectedWalletAddress: '',\n                },\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}