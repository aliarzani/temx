{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(profileIdentitySaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { profileIdentityData, profileIdentityError } from '../actions';\nvar userOptions = {\n  apiVersion: 'barong'\n};\nexport function profileIdentitySaga() {\n  var profilePhone, profileIdentity;\n  return _regeneratorRuntime.wrap(function profileIdentitySaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.get(userOptions), '/resource/phones');\n\n        case 3:\n          profilePhone = _context.sent;\n          _context.next = 6;\n          return call(API.get(userOptions), '/resource/profiles/me');\n\n        case 6:\n          profileIdentity = _context.sent;\n          profileIdentity.number = profilePhone.filter(function (w) {\n            return w.validated_at;\n          })[0].number;\n          _context.next = 10;\n          return put(profileIdentityData(profileIdentity));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 16;\n          return put(profileIdentityError(_context.t0));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n}","map":{"version":3,"sources":["/workspaces/temx/src/modules/user/profile/sagas/profileIdentitySaga.ts"],"names":["profileIdentitySaga","call","put","API","profileIdentityData","profileIdentityError","userOptions","apiVersion","get","profilePhone","profileIdentity","number","filter","w","validated_at"],"mappings":";;;;yBAYiBA,mB;;AAZjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SACIC,mBADJ,EAEIC,oBAFJ,QAGO,YAHP;AAKA,IAAMC,WAA2B,GAAG;AAChCC,EAAAA,UAAU,EAAE;AADoB,CAApC;AAIA,OAAO,SAAUP,mBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEsB,iBAAMC,IAAI,CAACE,GAAG,CAACK,GAAJ,CAAQF,WAAR,CAAD,EAAuB,kBAAvB,CAAV;;AAFtB;AAEOG,UAAAA,YAFP;AAAA;AAGyB,iBAAMR,IAAI,CAACE,GAAG,CAACK,GAAJ,CAAQF,WAAR,CAAD,EAAuB,uBAAvB,CAAV;;AAHzB;AAGOI,UAAAA,eAHP;AAICA,UAAAA,eAAe,CAACC,MAAhB,GAAyBF,YAAY,CAACG,MAAb,CAAoB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACC,YAAN;AAAA,WAArB,EAAyC,CAAzC,EAA4CH,MAArE;AAJD;AAKC,iBAAMT,GAAG,CAACE,mBAAmB,CAACM,eAAD,CAApB,CAAT;;AALD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOC,iBAAMR,GAAG,CAACG,oBAAoB,aAArB,CAAT;;AAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport {\n    profileIdentityData,\n    profileIdentityError,\n} from '../actions';\n\nconst userOptions: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* profileIdentitySaga() {\n    try {\n        const profilePhone = yield call(API.get(userOptions), '/resource/phones');\n        const profileIdentity = yield call(API.get(userOptions), '/resource/profiles/me');\n        profileIdentity.number = profilePhone.filter(w => w.validated_at)[0].number;\n        yield put(profileIdentityData(profileIdentity));\n    } catch (error) {\n        yield put(profileIdentityError(error));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}