{"ast":null,"code":"import _classCallCheck from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/temx/src/components/SignIn/index.tsx\";\nimport { Button } from '@openware/components';\nimport cr from 'classnames';\nimport * as React from 'react';\nimport { CustomInput } from '../';\nimport { EMAIL_REGEX } from '../../helpers';\nexport var SignInComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SignInComponent, _React$Component);\n\n  function SignInComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SignInComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SignInComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleChangeEmail = function (value) {\n      _this.props.changeEmail(value);\n    };\n\n    _this.handleChangePassword = function (value) {\n      _this.props.changePassword(value);\n    };\n\n    _this.handleFieldFocus = function (field) {\n      _this.props.handleChangeFocusField(field);\n    };\n\n    _this.handleSubmitForm = function () {\n      _this.props.refreshError();\n\n      _this.props.onSignIn();\n    };\n\n    _this.isValidForm = function () {\n      var _this$props = _this.props,\n          email = _this$props.email,\n          password = _this$props.password;\n      var isEmailValid = email.match(EMAIL_REGEX);\n      return email && isEmailValid && password;\n    };\n\n    _this.handleValidateForm = function () {\n      _this.props.isFormValid();\n    };\n\n    _this.handleClick = function (label, e) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      if (!_this.isValidForm()) {\n        _this.handleValidateForm();\n      } else {\n        _this.handleSubmitForm();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(SignInComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          email = _this$props2.email,\n          emailError = _this$props2.emailError,\n          emailPlaceholder = _this$props2.emailPlaceholder,\n          password = _this$props2.password,\n          passwordError = _this$props2.passwordError,\n          passwordPlaceholder = _this$props2.passwordPlaceholder,\n          isLoading = _this$props2.isLoading,\n          onForgotPassword = _this$props2.onForgotPassword,\n          onSignUp = _this$props2.onSignUp,\n          image = _this$props2.image,\n          labelSignIn = _this$props2.labelSignIn,\n          labelSignUp = _this$props2.labelSignUp,\n          emailLabel = _this$props2.emailLabel,\n          passwordLabel = _this$props2.passwordLabel,\n          forgotPasswordLabel = _this$props2.forgotPasswordLabel,\n          emailFocused = _this$props2.emailFocused,\n          passwordFocused = _this$props2.passwordFocused;\n      var emailGroupClass = cr('cr-sign-in-form__group', {\n        'cr-sign-in-form__group--focused': emailFocused\n      });\n      var passwordGroupClass = cr('cr-sign-in-form__group', {\n        'cr-sign-in-form__group--focused': passwordFocused\n      });\n      var logo = image ? React.createElement(\"h1\", {\n        className: \"cr-sign-in-form__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"cr-sign-in-form__image\",\n        src: image,\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })) : null; // tslint:disable:jsx-no-lambda\n\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-sign-in-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-sign-in-form__options-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-sign-in-form__option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-sign-in-form__option-inner __selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, labelSignIn ? labelSignIn : 'Sign In')), React.createElement(\"div\", {\n        className: \"cr-sign-in-form__option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-sign-in-form__option-inner cr-sign-in-form__tab-signup\",\n        onClick: onSignUp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, labelSignUp ? labelSignUp : 'Sign Up'))), React.createElement(\"div\", {\n        className: \"cr-sign-in-form__form-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, logo, React.createElement(\"div\", {\n        className: emailGroupClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        type: \"email\",\n        label: emailLabel || 'Email',\n        placeholder: emailPlaceholder,\n        defaultLabel: \"Email\",\n        handleChangeInput: this.handleChangeEmail,\n        inputValue: email,\n        handleFocusInput: function handleFocusInput() {\n          return _this2.handleFieldFocus('email');\n        },\n        classNameLabel: \"cr-sign-in-form__label\",\n        classNameInput: \"cr-sign-in-form__input\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), emailError && React.createElement(\"div\", {\n        className: 'cr-sign-in-form__error',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, emailError)), React.createElement(\"div\", {\n        className: passwordGroupClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        type: \"password\",\n        label: passwordLabel || 'Password',\n        placeholder: passwordPlaceholder,\n        defaultLabel: \"Password\",\n        handleChangeInput: this.handleChangePassword,\n        inputValue: password,\n        handleFocusInput: function handleFocusInput() {\n          return _this2.handleFieldFocus('password');\n        },\n        classNameLabel: \"cr-sign-in-form__label\",\n        classNameInput: \"cr-sign-in-form__input\",\n        autoFocus: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), passwordError && React.createElement(\"div\", {\n        className: 'cr-sign-in-form__error',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, passwordError)), React.createElement(\"div\", {\n        className: \"cr-sign-in-form__button-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Button, {\n        label: isLoading ? 'Loading...' : labelSignIn ? labelSignIn : 'Sign in',\n        type: \"submit\",\n        className: 'cr-sign-in-form__button',\n        disabled: isLoading || !email.match(EMAIL_REGEX) || !password,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"cr-sign-in-form__bottom-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-sign-in-form__bottom-section-password\",\n        onClick: function onClick() {\n          return onForgotPassword(email);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, forgotPasswordLabel ? forgotPasswordLabel : 'Forgot your password?'))))); // tslint:enable:jsx-no-lambda\n    }\n  }]);\n\n  return SignInComponent;\n}(React.Component);","map":{"version":3,"sources":["/workspaces/temx/src/components/SignIn/index.tsx"],"names":["Button","cr","React","CustomInput","EMAIL_REGEX","SignInComponent","handleChangeEmail","value","props","changeEmail","handleChangePassword","changePassword","handleFieldFocus","field","handleChangeFocusField","handleSubmitForm","refreshError","onSignIn","isValidForm","email","password","isEmailValid","match","handleValidateForm","isFormValid","handleClick","label","e","preventDefault","emailError","emailPlaceholder","passwordError","passwordPlaceholder","isLoading","onForgotPassword","onSignUp","image","labelSignIn","labelSignUp","emailLabel","passwordLabel","forgotPasswordLabel","emailFocused","passwordFocused","emailGroupClass","passwordGroupClass","logo","Component"],"mappings":"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","sourcesContent":["import {\n    Button,\n} from '@openware/components';\nimport cr from 'classnames';\nimport * as React from 'react';\nimport { CustomInput } from '../';\nimport { EMAIL_REGEX } from '../../helpers';\n\nexport interface SignInProps {\n    labelSignIn?: string;\n    labelSignUp?: string;\n    emailLabel?: string;\n    passwordLabel?: string;\n    receiveConfirmationLabel?: string;\n    forgotPasswordLabel?: string;\n    isLoading?: boolean;\n    title?: string;\n    onForgotPassword: (email?: string) => void;\n    onConfirmationResend?: (email?: string) => void;\n    onSignUp: () => void;\n    onSignIn: () => void;\n    className?: string;\n    image?: string;\n    email: string;\n    emailError: string;\n    password: string;\n    passwordError: string;\n    emailFocused: boolean;\n    emailPlaceholder: string;\n    passwordFocused: boolean;\n    passwordPlaceholder: string;\n    isFormValid: () => void;\n    refreshError: () => void;\n    handleChangeFocusField: (value: string) => void;\n    changePassword: (value: string) => void;\n    changeEmail: (value: string) => void;\n}\n\nexport class SignInComponent extends React.Component<SignInProps> {\n    public render() {\n        const {\n            email,\n            emailError,\n            emailPlaceholder,\n            password,\n            passwordError,\n            passwordPlaceholder,\n            isLoading,\n            onForgotPassword,\n            onSignUp,\n            image,\n            labelSignIn,\n            labelSignUp,\n            emailLabel,\n            passwordLabel,\n            forgotPasswordLabel,\n            emailFocused,\n            passwordFocused,\n        } = this.props;\n        const emailGroupClass = cr('cr-sign-in-form__group', {\n            'cr-sign-in-form__group--focused': emailFocused,\n        });\n        const passwordGroupClass = cr('cr-sign-in-form__group', {\n            'cr-sign-in-form__group--focused': passwordFocused,\n        });\n        const logo = image ? (\n            <h1 className=\"cr-sign-in-form__title\">\n                <img className=\"cr-sign-in-form__image\" src={image} alt=\"logo\" />\n            </h1>\n        ) : null;\n\n        // tslint:disable:jsx-no-lambda\n        return (\n            <form>\n                <div className=\"cr-sign-in-form\">\n                    <div className=\"cr-sign-in-form__options-group\">\n                        <div className=\"cr-sign-in-form__option\">\n                            <div className=\"cr-sign-in-form__option-inner __selected\">\n                                {labelSignIn ? labelSignIn : 'Sign In'}\n                            </div>\n                        </div>\n                        <div className=\"cr-sign-in-form__option\">\n                            <div className=\"cr-sign-in-form__option-inner cr-sign-in-form__tab-signup\" onClick={onSignUp}>\n                                {labelSignUp ? labelSignUp : 'Sign Up'}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"cr-sign-in-form__form-content\">\n                        {logo}\n                        <div className={emailGroupClass}>\n                            <CustomInput\n                                type=\"email\"\n                                label={emailLabel || 'Email'}\n                                placeholder={emailPlaceholder}\n                                defaultLabel=\"Email\"\n                                handleChangeInput={this.handleChangeEmail}\n                                inputValue={email}\n                                handleFocusInput={() => this.handleFieldFocus('email')}\n                                classNameLabel=\"cr-sign-in-form__label\"\n                                classNameInput=\"cr-sign-in-form__input\"\n                                autoFocus={true}\n                            />\n                            {emailError && <div className={'cr-sign-in-form__error'}>{emailError}</div>}\n                        </div>\n                        <div className={passwordGroupClass}>\n                            <CustomInput\n                                type=\"password\"\n                                label={passwordLabel || 'Password'}\n                                placeholder={passwordPlaceholder}\n                                defaultLabel=\"Password\"\n                                handleChangeInput={this.handleChangePassword}\n                                inputValue={password}\n                                handleFocusInput={() => this.handleFieldFocus('password')}\n                                classNameLabel=\"cr-sign-in-form__label\"\n                                classNameInput=\"cr-sign-in-form__input\"\n                                autoFocus={false}\n                            />\n                            {passwordError && <div className={'cr-sign-in-form__error'}>{passwordError}</div>}\n                        </div>\n                        <div className=\"cr-sign-in-form__button-wrapper\">\n                            <Button\n                                label={isLoading ? 'Loading...' : (labelSignIn ? labelSignIn : 'Sign in')}\n                                type=\"submit\"\n                                className={'cr-sign-in-form__button'}\n                                disabled={isLoading || !email.match(EMAIL_REGEX) || !password}\n                                onClick={this.handleClick}\n                            />\n                        </div>\n                        <div className=\"cr-sign-in-form__bottom-section\">\n                            <div\n                                className=\"cr-sign-in-form__bottom-section-password\"\n                                onClick={() => onForgotPassword(email)}\n                            >\n                                {forgotPasswordLabel ? forgotPasswordLabel : 'Forgot your password?'}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        );\n        // tslint:enable:jsx-no-lambda\n    }\n\n    private handleChangeEmail = (value: string) => {\n        this.props.changeEmail(value);\n    };\n\n    private handleChangePassword = (value: string) => {\n        this.props.changePassword(value);\n    };\n\n    private handleFieldFocus = (field: string) => {\n        this.props.handleChangeFocusField(field);\n    };\n\n    private handleSubmitForm = () => {\n        this.props.refreshError();\n        this.props.onSignIn();\n    };\n\n    private isValidForm = () => {\n        const { email, password } = this.props;\n        const isEmailValid = email.match(EMAIL_REGEX);\n\n        return email && isEmailValid && password;\n    };\n\n    private handleValidateForm = () => {\n        this.props.isFormValid();\n    };\n\n    private handleClick = (label?: string, e?: React.FormEvent<HTMLInputElement>) => {\n        if (e) {\n            e.preventDefault();\n        }\n        if (!this.isValidForm()) {\n            this.handleValidateForm();\n        } else {\n            this.handleSubmitForm();\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}