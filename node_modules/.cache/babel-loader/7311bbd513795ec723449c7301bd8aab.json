{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(apiKeyDeleteSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { apiKeyDelete, apiKeys2FAModal } from '../actions';\nvar deleteOptions = {\n  apiVersion: 'barong'\n};\nexport function apiKeyDeleteSaga(action) {\n  var _action$payload, kid, totp_code;\n\n  return _regeneratorRuntime.wrap(function apiKeyDeleteSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _action$payload = action.payload, kid = _action$payload.kid, totp_code = _action$payload.totp_code;\n          _context.next = 4;\n          return call(API.delete(deleteOptions), \"/resource/api_keys/\".concat(kid, \"?totp_code=\").concat(totp_code));\n\n        case 4:\n          _context.next = 6;\n          return put(apiKeyDelete({\n            kid: kid\n          }));\n\n        case 6:\n          _context.next = 8;\n          return put(alertPush({\n            message: ['success.api_keys.deleted'],\n            type: 'success'\n          }));\n\n        case 8:\n          _context.next = 14;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 14;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 14:\n          _context.prev = 14;\n          _context.next = 17;\n          return put(apiKeys2FAModal({\n            active: false\n          }));\n\n        case 17:\n          return _context.finish(14);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 10, 14, 18]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/apiKeys/sagas/apiKeyDeleteSaga.ts"],"names":["apiKeyDeleteSaga","call","put","API","alertPush","apiKeyDelete","apiKeys2FAModal","deleteOptions","apiVersion","action","payload","kid","totp_code","delete","message","type","code","active"],"mappings":";;;;yBAUiBA,gB;;AAVjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,YAAT,EAA0CC,eAA1C,QAAiE,YAAjE;AAEA,IAAMC,aAA6B,GAAG;AAClCC,EAAAA,UAAU,EAAE;AADsB,CAAtC;AAIA,OAAO,SAAUR,gBAAV,CAA2BS,MAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAE0BA,MAAM,CAACC,OAFjC,EAEQC,GAFR,mBAEQA,GAFR,EAEaC,SAFb,mBAEaA,SAFb;AAAA;AAGC,iBAAMX,IAAI,CAACE,GAAG,CAACU,MAAJ,CAAWN,aAAX,CAAD,+BAAkDI,GAAlD,wBAAmEC,SAAnE,EAAV;;AAHD;AAAA;AAIC,iBAAMV,GAAG,CAACG,YAAY,CAAC;AAACM,YAAAA,GAAG,EAAHA;AAAD,WAAD,CAAb,CAAT;;AAJD;AAAA;AAKC,iBAAMT,GAAG,CAACE,SAAS,CAAC;AAACU,YAAAA,OAAO,EAAE,CAAC,0BAAD,CAAV;AAAwCC,YAAAA,IAAI,EAAE;AAA9C,WAAD,CAAV,CAAT;;AALD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOC,iBAAMb,GAAG,CAACE,SAAS,CAAC;AAACU,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBE,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CD,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AAPD;AAAA;AAAA;AASC,iBAAMb,GAAG,CAACI,eAAe,CAAC;AAACW,YAAAA,MAAM,EAAE;AAAT,WAAD,CAAhB,CAAT;;AATD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { apiKeyDelete, ApiKeyDeleteFetch, apiKeys2FAModal } from '../actions';\n\nconst deleteOptions: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* apiKeyDeleteSaga(action: ApiKeyDeleteFetch) {\n    try {\n        const {kid, totp_code} = action.payload;\n        yield call(API.delete(deleteOptions), `/resource/api_keys/${kid}?totp_code=${totp_code}`);\n        yield put(apiKeyDelete({kid}));\n        yield put(alertPush({message: ['success.api_keys.deleted'], type: 'success'}));\n    } catch (error) {\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    } finally {\n        yield put(apiKeys2FAModal({active: false}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}