{"ast":null,"code":"import _classCallCheck from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/codespaces-blank/baseapp-master/src/screens/ProfileTwoFactorAuthScreen/index.tsx\";\nimport { Button, Input } from '@openware/components';\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { CopyableTextField } from '../../components';\nimport { setDocumentTitle } from '../../helpers';\nimport { alertPush } from '../../modules';\nimport { generate2faQRFetch, selectTwoFactorAuthBarcode, selectTwoFactorAuthQR, selectTwoFactorAuthSuccess, toggle2faFetch, toggleUser2fa as _toggleUser2fa } from '../../modules/user/profile';\n\nvar copy = function copy(id) {\n  var copyText = document.querySelector(\"#\".concat(id));\n\n  if (copyText) {\n    copyText.select();\n    document.execCommand('copy');\n    window.getSelection().removeAllRanges(); // tslint:disable-line\n  }\n};\n\nvar ToggleTwoFactorAuthComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ToggleTwoFactorAuthComponent, _React$Component);\n\n  function ToggleTwoFactorAuthComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ToggleTwoFactorAuthComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ToggleTwoFactorAuthComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      otpCode: ''\n    };\n\n    _this.translate = function (e) {\n      return _this.props.intl.formatMessage({\n        id: e\n      });\n    };\n\n    _this.doCopy = function () {\n      copy('referral-id');\n\n      _this.props.fetchSuccess({\n        message: ['page.body.wallets.tabs.deposit.ccy.message.success'],\n        type: 'success'\n      });\n    };\n\n    _this.renderToggle2fa = function (enable2fa) {\n      var _this$props = _this.props,\n          barcode = _this$props.barcode,\n          qrUrl = _this$props.qrUrl;\n      var otpCode = _this.state.otpCode;\n      var secretRegex = /secret=(\\w+)/;\n      var secretMatch = qrUrl.match(secretRegex);\n      var secret = secretMatch ? secretMatch[1] : null;\n      var submitHandler = enable2fa ? _this.handleEnable2fa : _this.handleDisable2fa;\n      return React.createElement(\"div\", {\n        className: \"container mt-5 pg-profile-two-factor-auth__form p-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row m-0 pg-profile-two-factor-auth__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-11 col-lg-7 offset-lg-4 mt-0 p-0 pl-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, _this.translate('page.body.profile.header.account.content.twoFactorAuthentication.header')), React.createElement(\"div\", {\n        className: \"col-1 mx-0 p-0 px-1\",\n        onClick: _this.goBack,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        alt: \"\",\n        src: require('./close.svg'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"row m-0 pg-profile-two-factor-auth__body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 col-lg-8 col-md-9 pr-0 pl-2 pg-profile-two-factor-auth__body--text d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row col-12 pg-profile-two-factor-auth__body--text--group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"1   \"), _this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.1'), React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: \"https://itunes.apple.com/ru/app/google-authenticator/id388497605?mt=8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"AppStore \"), _this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.or'), React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: \"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Google play\"))), React.createElement(\"div\", {\n        className: \"row col-12 pg-profile-two-factor-auth__body--text--group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"d-inline\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"2    \"), _this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.2'), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), _this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.3')))), React.createElement(\"div\", {\n        className: \"col-12 col-lg-4 col-md-3 pt-4 pg-profile-two-factor-auth__body--barcode\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, enable2fa && _this.renderTwoFactorAuthQR(barcode))), React.createElement(\"div\", {\n        className: \"row m-0 p-5 pg-profile-two-factor-auth__copyablefield\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, enable2fa && secret && _this.renderSecret(secret)), React.createElement(\"div\", {\n        className: \"row m-0 pg-profile-two-factor-auth__body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 pl-2 pg-profile-two-factor-auth__body--text d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row col-12 pg-profile-two-factor-auth__body--text--group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 col-md-8 col-sm-7\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"3   \"), _this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.4')), React.createElement(\"div\", {\n        className: \"col-12 col-md-4 col-sm-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        className: \"pg-profile-two-factor-auth__body--input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Input, {\n        onChangeValue: _this.handleOtpCodeChange,\n        type: \"tel\",\n        value: otpCode,\n        placeholder: _this.translate('page.body.profile.header.account.content.twoFactorAuthentication.subHeader'),\n        onKeyPress: _this.handleEnterPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: \"row p-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12 m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"p-3 m-0\",\n        label: _this.translate('page.body.profile.header.account.content.twoFactorAuthentication.enable'),\n        onClick: submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }))));\n    };\n\n    _this.renderTwoFactorAuthQR = function (barcode) {\n      var src = \"data:image/png;base64,\".concat(barcode);\n      return barcode.length > 0 && React.createElement(\"img\", {\n        alt: \"\",\n        className: \"pg-profile-two-factor-auth__qr\",\n        src: src,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      });\n    };\n\n    _this.renderSecret = function (secret) {\n      return React.createElement(\"fieldset\", {\n        onClick: _this.doCopy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, _this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.mfa')), secret && React.createElement(CopyableTextField, {\n        value: secret,\n        fieldId: \"secret-2fa\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }));\n    };\n\n    _this.handleOtpCodeChange = function (value) {\n      _this.setState({\n        otpCode: value\n      });\n    };\n\n    _this.handleEnterPress = function (event) {\n      var enable2fa = _this.get2faAction();\n\n      var submitHandler = enable2fa ? _this.handleEnable2fa : _this.handleDisable2fa;\n\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        submitHandler();\n      }\n    };\n\n    _this.handleEnable2fa = function () {\n      _this.props.toggle2fa({\n        code: _this.state.otpCode,\n        enable: true\n      });\n    };\n\n    _this.handleDisable2fa = function () {\n      _this.props.toggle2fa({\n        code: _this.state.otpCode,\n        enable: false\n      });\n    };\n\n    _this.handleNavigateToProfile = function () {\n      _this.props.history.push('/profile');\n    };\n\n    _this.get2faAction = function () {\n      var routingState = _this.props.history.location.state;\n      return routingState ? routingState.enable2fa : false;\n    };\n\n    _this.goBack = function () {\n      window.history.back();\n    };\n\n    return _this;\n  }\n\n  _createClass(ToggleTwoFactorAuthComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      setDocumentTitle('Two factor authentication');\n      var enable2fa = this.get2faAction();\n\n      if (enable2fa) {\n        this.props.generateQR();\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      if (!this.props.success && next.success) {\n        this.handleNavigateToProfile();\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prev) {\n      if (!prev.success && this.props.success) {\n        this.props.toggleUser2fa();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var enable2fa = this.get2faAction();\n      return React.createElement(\"div\", {\n        className: \"pg-profile-two-factor-auth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.renderToggle2fa(enable2fa));\n    }\n  }]);\n\n  return ToggleTwoFactorAuthComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    qrUrl: selectTwoFactorAuthQR(state),\n    barcode: selectTwoFactorAuthBarcode(state),\n    success: selectTwoFactorAuthSuccess(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    generateQR: function generateQR() {\n      return dispatch(generate2faQRFetch());\n    },\n    toggle2fa: function toggle2fa(_ref) {\n      var code = _ref.code,\n          enable = _ref.enable;\n      return dispatch(toggle2faFetch({\n        code: code,\n        enable: enable\n      }));\n    },\n    toggleUser2fa: function toggleUser2fa() {\n      return dispatch(_toggleUser2fa());\n    },\n    fetchSuccess: function fetchSuccess(payload) {\n      return dispatch(alertPush(payload));\n    }\n  };\n};\n\nvar ProfileTwoFactorAuthScreen = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(ToggleTwoFactorAuthComponent)));\nexport { ProfileTwoFactorAuthScreen };","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/screens/ProfileTwoFactorAuthScreen/index.tsx"],"names":["Button","Input","React","injectIntl","connect","withRouter","CopyableTextField","setDocumentTitle","alertPush","generate2faQRFetch","selectTwoFactorAuthBarcode","selectTwoFactorAuthQR","selectTwoFactorAuthSuccess","toggle2faFetch","toggleUser2fa","copy","id","copyText","document","querySelector","select","execCommand","window","getSelection","removeAllRanges","ToggleTwoFactorAuthComponent","state","otpCode","translate","e","props","intl","formatMessage","doCopy","fetchSuccess","message","type","renderToggle2fa","enable2fa","barcode","qrUrl","secretRegex","secretMatch","match","secret","submitHandler","handleEnable2fa","handleDisable2fa","goBack","require","renderTwoFactorAuthQR","renderSecret","handleOtpCodeChange","handleEnterPress","src","length","value","setState","event","get2faAction","key","preventDefault","toggle2fa","code","enable","handleNavigateToProfile","history","push","routingState","location","back","generateQR","next","success","prev","Component","mapStateToProps","mapDispatchToProps","dispatch","payload","ProfileTwoFactorAuthScreen"],"mappings":"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","sourcesContent":["import { Button, Input } from '@openware/components';\nimport { History } from 'history';\nimport * as React from 'react';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { CopyableTextField } from '../../components';\nimport { setDocumentTitle } from '../../helpers';\nimport { alertPush, RootState } from '../../modules';\nimport {\n    generate2faQRFetch,\n    selectTwoFactorAuthBarcode,\n    selectTwoFactorAuthQR,\n    selectTwoFactorAuthSuccess,\n    toggle2faFetch,\n    toggleUser2fa,\n} from '../../modules/user/profile';\n\ninterface RouterProps {\n    history: History;\n}\n\ninterface ReduxProps {\n    barcode: string;\n    qrUrl: string;\n    success?: boolean;\n}\n\ninterface DispatchProps {\n    toggle2fa: typeof toggle2faFetch;\n    generateQR: typeof generate2faQRFetch;\n    toggleUser2fa: typeof toggleUser2fa;\n    fetchSuccess: typeof alertPush;\n}\n\ntype Props = RouterProps & ReduxProps & DispatchProps & InjectedIntlProps;\n\ninterface State {\n    otpCode: string;\n}\n\ntype CopyTypes = HTMLInputElement | null;\n\nconst copy = (id: string) => {\n    const copyText: CopyTypes = document.querySelector(`#${id}`);\n\n    if (copyText) {\n        copyText.select();\n\n        document.execCommand('copy');\n        (window.getSelection() as any).removeAllRanges(); // tslint:disable-line\n    }\n};\n\nclass ToggleTwoFactorAuthComponent extends React.Component<Props, State> {\n    public state = {\n        otpCode: '',\n    };\n\n    public componentDidMount() {\n        setDocumentTitle('Two factor authentication');\n        const enable2fa = this.get2faAction();\n        if (enable2fa) {\n            this.props.generateQR();\n        }\n    }\n\n    public componentWillReceiveProps(next: Props) {\n        if (!this.props.success && next.success) {\n            this.handleNavigateToProfile();\n        }\n    }\n\n    public componentDidUpdate(prev: Props) {\n        if (!prev.success && this.props.success) {\n            this.props.toggleUser2fa();\n        }\n    }\n\n    public translate = (e: string) => {\n        return this.props.intl.formatMessage({ id: e });\n    };\n\n    public doCopy = () => {\n        copy('referral-id');\n        this.props.fetchSuccess({message: ['page.body.wallets.tabs.deposit.ccy.message.success'], type: 'success'});\n    };\n\n    public render() {\n        const enable2fa = this.get2faAction();\n        return (\n            <div className=\"pg-profile-two-factor-auth\">\n                {this.renderToggle2fa(enable2fa)}\n            </div>\n        );\n    }\n\n    private renderToggle2fa = (enable2fa: boolean) => {\n        const {\n            barcode,\n            qrUrl,\n        } = this.props;\n        const { otpCode } = this.state;\n\n        const secretRegex = /secret=(\\w+)/;\n        const secretMatch = qrUrl.match(secretRegex);\n        const secret = secretMatch ? secretMatch[1] : null;\n        const submitHandler = enable2fa ? this.handleEnable2fa : this.handleDisable2fa;\n\n        return (\n            <div className=\"container mt-5 pg-profile-two-factor-auth__form p-0\">\n                <div className=\"row m-0 pg-profile-two-factor-auth__header\">\n                    <div className=\"col-11 col-lg-7 offset-lg-4 mt-0 p-0 pl-3\">\n                        {this.translate('page.body.profile.header.account.content.twoFactorAuthentication.header')}\n                    </div>\n                    <div className=\"col-1 mx-0 p-0 px-1\" onClick={this.goBack}>\n                        <img alt=\"\" src={require('./close.svg')} />\n                    </div>\n                </div>\n\n                <div className=\"row m-0 pg-profile-two-factor-auth__body\">\n                    <div className=\"col-12 col-lg-8 col-md-9 pr-0 pl-2 pg-profile-two-factor-auth__body--text d-inline-block\">\n                        <div className=\"row col-12 pg-profile-two-factor-auth__body--text--group\">\n                            <div className=\"d-inline\">\n                                <span>1   </span>\n                                {this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.1')}\n                                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://itunes.apple.com/ru/app/google-authenticator/id388497605?mt=8\">AppStore </a>\n                                {this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.or')}\n                                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl\">Google play</a>\n                            </div>\n                        </div>\n                        <div className=\"row col-12 pg-profile-two-factor-auth__body--text--group\">\n                            <div className=\"d-inline\">\n                                <span>2    </span>\n                                {this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.2')}\n                                <br />\n                                {this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.3')}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-lg-4 col-md-3 pt-4 pg-profile-two-factor-auth__body--barcode\">\n                        {enable2fa && this.renderTwoFactorAuthQR(barcode)}\n                    </div>\n                </div>\n                <div className=\"row m-0 p-5 pg-profile-two-factor-auth__copyablefield\">\n                    {enable2fa && secret && this.renderSecret(secret)}\n                </div>\n                <div className=\"row m-0 pg-profile-two-factor-auth__body\">\n                    <div className=\"col-12 pl-2 pg-profile-two-factor-auth__body--text d-inline-block\">\n                        <div className=\"row col-12 pg-profile-two-factor-auth__body--text--group\">\n                            <div className=\"col-12 col-md-8 col-sm-7\">\n                                <span>3   </span>\n                                {this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.4')}\n                            </div>\n                            <div className=\"col-12 col-md-4 col-sm-5\">\n                                <fieldset className=\"pg-profile-two-factor-auth__body--input\">\n                                    <Input\n                                        onChangeValue={this.handleOtpCodeChange}\n                                        type=\"tel\"\n                                        value={otpCode}\n                                        placeholder={this.translate('page.body.profile.header.account.content.twoFactorAuthentication.subHeader')}\n                                        onKeyPress={this.handleEnterPress}\n                                    />\n                                </fieldset>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row p-5\">\n                    <div className=\"col-12 m-0\">\n                        <Button\n                            className=\"p-3 m-0\"\n                            label={this.translate('page.body.profile.header.account.content.twoFactorAuthentication.enable')}\n                            onClick={submitHandler}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    private renderTwoFactorAuthQR = (barcode: string) => {\n        const src = `data:image/png;base64,${barcode}`;\n        return barcode.length > 0 && <img alt=\"\" className=\"pg-profile-two-factor-auth__qr\" src={src} />;\n    };\n\n    private renderSecret = (secret: string) => {\n        return (\n            <fieldset onClick={this.doCopy}>\n                <legend>\n                    {this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.mfa')}\n                </legend>\n                {secret && <CopyableTextField value={secret} fieldId=\"secret-2fa\" />}\n            </fieldset>\n        );\n    };\n\n    private handleOtpCodeChange = (value: string) => {\n        this.setState({\n            otpCode: value,\n        });\n    };\n\n    private handleEnterPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        const enable2fa = this.get2faAction();\n        const submitHandler = enable2fa ? this.handleEnable2fa : this.handleDisable2fa;\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            submitHandler();\n        }\n    };\n\n    private handleEnable2fa = () => {\n        this.props.toggle2fa({\n            code: this.state.otpCode,\n            enable: true,\n        });\n    };\n\n    private handleDisable2fa = () => {\n        this.props.toggle2fa({\n            code: this.state.otpCode,\n            enable: false,\n        });\n    };\n\n    private handleNavigateToProfile = () => {\n        this.props.history.push('/profile');\n    };\n\n    private get2faAction = () => {\n        const routingState = this.props.history.location.state;\n        return routingState ? routingState.enable2fa : false;\n    };\n\n    private goBack = () => {\n        window.history.back();\n    };\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, Props, RootState> = state => ({\n    qrUrl: selectTwoFactorAuthQR(state),\n    barcode: selectTwoFactorAuthBarcode(state),\n    success: selectTwoFactorAuthSuccess(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n    generateQR: () => dispatch(generate2faQRFetch()),\n    toggle2fa: ({ code, enable }) => dispatch(toggle2faFetch({ code, enable })),\n    toggleUser2fa: () => dispatch(toggleUser2fa()),\n    fetchSuccess: payload => dispatch(alertPush(payload)),\n});\n\nconst ProfileTwoFactorAuthScreen = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(ToggleTwoFactorAuthComponent) as any));\n\nexport {\n    ProfileTwoFactorAuthScreen,\n};\n"]},"metadata":{},"sourceType":"module"}