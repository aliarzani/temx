{"ast":null,"code":"import _classCallCheck from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/temx/src/containers/Confirm/Phone/index.tsx\";\nimport { Button } from '@openware/components';\nimport cr from 'classnames';\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { resendCode as _resendCode, selectVerifyPhoneSuccess, sendCode as _sendCode, verifyPhone as _verifyPhone } from '../../../modules/user/kyc/phone';\nimport { changeUserLevel as _changeUserLevel } from '../../../modules/user/profile';\n\nvar PhoneComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PhoneComponent, _React$Component);\n\n  function PhoneComponent(props) {\n    var _this;\n\n    _classCallCheck(this, PhoneComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PhoneComponent).call(this, props));\n\n    _this.translate = function (e) {\n      return _this.props.intl.formatMessage({\n        id: e\n      });\n    };\n\n    _this.handleFieldFocus = function (field) {\n      return function () {\n        switch (field) {\n          case 'phoneNumber':\n            _this.addPlusSignToPhoneNumber();\n\n            _this.setState({\n              phoneNumberFocused: !_this.state.phoneNumberFocused\n            });\n\n            break;\n\n          case 'confirmationCode':\n            _this.setState({\n              confirmationCodeFocused: !_this.state.confirmationCodeFocused\n            });\n\n            break;\n\n          default:\n            break;\n        }\n      };\n    };\n\n    _this.handleConfirmEnterPress = function (event) {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n\n        _this.confirmPhone();\n      }\n    };\n\n    _this.handleSendEnterPress = function (event) {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n\n        _this.handleSendCode();\n      }\n    };\n\n    _this.confirmPhone = function () {\n      var requestProps = {\n        phone_number: String(_this.state.phoneNumber),\n        verification_code: String(_this.state.confirmationCode)\n      };\n\n      _this.props.verifyPhone(requestProps);\n    };\n\n    _this.addPlusSignToPhoneNumber = function () {\n      if (_this.state.phoneNumber.length === 0) {\n        _this.setState({\n          phoneNumber: '+'\n        });\n      }\n    };\n\n    _this.handleChangePhoneNumber = function (e) {\n      if (_this.inputPhoneNumber(e)) {\n        _this.setState({\n          phoneNumber: e.target.value,\n          resendCode: false\n        });\n      }\n    };\n\n    _this.handleChangeConfirmationCode = function (e) {\n      if (_this.inputConfirmationCode(e)) {\n        _this.setState({\n          confirmationCode: e.target.value\n        });\n      }\n    };\n\n    _this.inputPhoneNumber = function (e) {\n      var convertedText = e.target.value.trim();\n      var condition = new RegExp('^\\\\+\\\\d*?$');\n      return condition.test(convertedText);\n    };\n\n    _this.inputConfirmationCode = function (e) {\n      var convertedText = e.target.value.trim();\n      var condition = new RegExp('^\\\\d*?$');\n      return condition.test(convertedText);\n    };\n\n    _this.handleSendCode = function () {\n      var requestProps = {\n        phone_number: String(_this.state.phoneNumber)\n      };\n\n      if (!_this.state.resendCode) {\n        _this.props.sendCode(requestProps);\n\n        _this.setState({\n          resendCode: true\n        });\n      } else {\n        _this.props.resendCode(requestProps);\n      }\n    };\n\n    _this.state = {\n      phoneNumber: '',\n      phoneNumberFocused: false,\n      confirmationCode: '',\n      confirmationCodeFocused: false,\n      resendCode: false\n    };\n    return _this;\n  }\n\n  _createClass(PhoneComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          phoneNumber = _this$state.phoneNumber,\n          phoneNumberFocused = _this$state.phoneNumberFocused,\n          confirmationCode = _this$state.confirmationCode,\n          confirmationCodeFocused = _this$state.confirmationCodeFocused;\n      var verifyPhoneSuccess = this.props.verifyPhoneSuccess;\n      var phoneNumberFocusedClass = cr('pg-confirm__content-phone-col-content', {\n        'pg-confirm__content-phone-col-content--focused': phoneNumberFocused\n      });\n      var confirmationCodeFocusedClass = cr('pg-confirm__content-phone-col-content', {\n        'pg-confirm__content-phone-col-content--focused': confirmationCodeFocused\n      });\n      return React.createElement(\"div\", {\n        className: \"pg-confirm__content-phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"pg-confirm__content-phone-head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.translate('page.body.kyc.phone.head')), React.createElement(\"div\", {\n        className: \"pg-confirm__content-phone-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pg-confirm__content-phone-col-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"1. \", this.translate('page.body.kyc.phone.enterPhone')), React.createElement(\"fieldset\", {\n        className: phoneNumberFocusedClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, phoneNumber && React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, this.translate('page.body.kyc.phone.phoneNumber')), React.createElement(\"input\", {\n        className: \"pg-confirm__content-phone-col-content-number\",\n        type: \"string\",\n        placeholder: this.translate('page.body.kyc.phone.phoneNumber'),\n        value: phoneNumber,\n        onClick: this.addPlusSignToPhoneNumber,\n        onChange: this.handleChangePhoneNumber,\n        onFocus: this.handleFieldFocus('phoneNumber'),\n        onBlur: this.handleFieldFocus('phoneNumber'),\n        onKeyPress: this.handleSendEnterPress,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: phoneNumber ? 'pg-confirm__content-phone-col-content-send' : 'pg-confirm__content-phone-col-content-send--disabled',\n        type: \"button\",\n        onClick: this.handleSendCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.state.resendCode ? this.translate('page.body.kyc.phone.resend') : this.translate('page.body.kyc.phone.send')))), React.createElement(\"div\", {\n        className: \"pg-confirm__content-phone-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pg-confirm__content-phone-col-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"2. \", this.translate('page.body.kyc.phone.enterCode')), React.createElement(\"fieldset\", {\n        className: confirmationCodeFocusedClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, confirmationCode && React.createElement(\"legend\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.translate('page.body.kyc.phone.code')), React.createElement(\"input\", {\n        className: \"pg-confirm__content-phone-col-content-number\",\n        type: \"string\",\n        placeholder: this.translate('page.body.kyc.phone.code'),\n        value: confirmationCode,\n        onChange: this.handleChangeConfirmationCode,\n        onFocus: this.handleFieldFocus('confirmationCode'),\n        onBlur: this.handleFieldFocus('confirmationCode'),\n        onKeyPress: this.handleConfirmEnterPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }))), verifyPhoneSuccess && React.createElement(\"p\", {\n        className: \"pg-confirm__success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, this.translate(verifyPhoneSuccess)), React.createElement(\"div\", {\n        className: \"pg-confirm__content-deep\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"pg-confirm__content-phone-deep-button\",\n        label: this.translate('page.body.kyc.next'),\n        onClick: this.confirmPhone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return PhoneComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    verifyPhoneSuccess: selectVerifyPhoneSuccess(state)\n  };\n};\n\nvar mapDispatchProps = function mapDispatchProps(dispatch) {\n  return {\n    resendCode: function resendCode(phone) {\n      return dispatch(_resendCode(phone));\n    },\n    sendCode: function sendCode(phone) {\n      return dispatch(_sendCode(phone));\n    },\n    verifyPhone: function verifyPhone(payload) {\n      return dispatch(_verifyPhone(payload));\n    },\n    changeUserLevel: function changeUserLevel(payload) {\n      return dispatch(_changeUserLevel(payload));\n    }\n  };\n}; // tslint:disable-next-line\n\n\nexport var Phone = injectIntl(connect(mapStateToProps, mapDispatchProps)(PhoneComponent));","map":{"version":3,"sources":["/workspaces/temx/src/containers/Confirm/Phone/index.tsx"],"names":["Button","cr","React","injectIntl","connect","resendCode","selectVerifyPhoneSuccess","sendCode","verifyPhone","changeUserLevel","PhoneComponent","props","translate","e","intl","formatMessage","id","handleFieldFocus","field","addPlusSignToPhoneNumber","setState","phoneNumberFocused","state","confirmationCodeFocused","handleConfirmEnterPress","event","key","preventDefault","confirmPhone","handleSendEnterPress","handleSendCode","requestProps","phone_number","String","phoneNumber","verification_code","confirmationCode","length","handleChangePhoneNumber","inputPhoneNumber","target","value","handleChangeConfirmationCode","inputConfirmationCode","convertedText","trim","condition","RegExp","test","verifyPhoneSuccess","phoneNumberFocusedClass","confirmationCodeFocusedClass","Component","mapStateToProps","mapDispatchProps","dispatch","phone","payload","Phone"],"mappings":"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","sourcesContent":["import { Button } from '@openware/components';\nimport cr from 'classnames';\nimport * as React from 'react';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport {\n    connect,\n    MapDispatchToPropsFunction,\n} from 'react-redux';\nimport { RootState } from '../../../modules';\nimport {\n    resendCode,\n    selectVerifyPhoneSuccess,\n    sendCode,\n    verifyPhone,\n} from '../../../modules/user/kyc/phone';\nimport { changeUserLevel } from '../../../modules/user/profile';\n\ninterface ReduxProps {\n    verifyPhoneSuccess?: string;\n}\n\ninterface OnChangeEvent {\n    target: {\n        value: string;\n    };\n}\n\ninterface PhoneState {\n    phoneNumber: string;\n    phoneNumberFocused: boolean;\n    confirmationCode: string;\n    confirmationCodeFocused: boolean;\n    resendCode: boolean;\n}\n\ninterface DispatchProps {\n    resendCode: typeof resendCode;\n    sendCode: typeof sendCode;\n    verifyPhone: typeof verifyPhone;\n    changeUserLevel: typeof changeUserLevel;\n}\n\ntype Props = ReduxProps & DispatchProps & InjectedIntlProps;\n\nclass PhoneComponent extends React.Component<Props, PhoneState> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            phoneNumber: '',\n            phoneNumberFocused: false,\n            confirmationCode: '',\n            confirmationCodeFocused: false,\n            resendCode: false,\n        };\n    }\n\n    public translate = (e: string) => {\n        return this.props.intl.formatMessage({ id: e });\n    };\n\n    public render() {\n        const {\n            phoneNumber,\n            phoneNumberFocused,\n            confirmationCode,\n            confirmationCodeFocused,\n        } = this.state;\n        const {\n            verifyPhoneSuccess,\n        } = this.props;\n\n        const phoneNumberFocusedClass = cr('pg-confirm__content-phone-col-content', {\n            'pg-confirm__content-phone-col-content--focused': phoneNumberFocused,\n        });\n\n        const confirmationCodeFocusedClass = cr('pg-confirm__content-phone-col-content', {\n            'pg-confirm__content-phone-col-content--focused': confirmationCodeFocused,\n        });\n\n        return (\n            <div className=\"pg-confirm__content-phone\">\n                <h2 className=\"pg-confirm__content-phone-head\">{this.translate('page.body.kyc.phone.head')}</h2>\n                <div className=\"pg-confirm__content-phone-col\">\n                    <div className=\"pg-confirm__content-phone-col-text\">\n                        1. {this.translate('page.body.kyc.phone.enterPhone')}\n                    </div>\n                    <fieldset className={phoneNumberFocusedClass}>\n                        {phoneNumber && <legend>{this.translate('page.body.kyc.phone.phoneNumber')}</legend>}\n                        <input\n                            className=\"pg-confirm__content-phone-col-content-number\"\n                            type=\"string\"\n                            placeholder={this.translate('page.body.kyc.phone.phoneNumber')}\n                            value={phoneNumber}\n                            onClick={this.addPlusSignToPhoneNumber}\n                            onChange={this.handleChangePhoneNumber}\n                            onFocus={this.handleFieldFocus('phoneNumber')}\n                            onBlur={this.handleFieldFocus('phoneNumber')}\n                            onKeyPress={this.handleSendEnterPress}\n                            autoFocus={true}\n                        />\n                        <button\n                            className={phoneNumber ? 'pg-confirm__content-phone-col-content-send' : 'pg-confirm__content-phone-col-content-send--disabled'}\n                            type=\"button\"\n                            onClick={this.handleSendCode}\n                        >\n                            {this.state.resendCode ? this.translate('page.body.kyc.phone.resend') : this.translate('page.body.kyc.phone.send')}\n                        </button>\n                    </fieldset>\n                </div>\n                <div className=\"pg-confirm__content-phone-col\">\n                    <div className=\"pg-confirm__content-phone-col-text\">\n                        2. {this.translate('page.body.kyc.phone.enterCode')}\n                    </div>\n                    <fieldset className={confirmationCodeFocusedClass}>\n                        {confirmationCode && <legend>{this.translate('page.body.kyc.phone.code')}</legend>}\n                        <input\n                            className=\"pg-confirm__content-phone-col-content-number\"\n                            type=\"string\"\n                            placeholder={this.translate('page.body.kyc.phone.code')}\n                            value={confirmationCode}\n                            onChange={this.handleChangeConfirmationCode}\n                            onFocus={this.handleFieldFocus('confirmationCode')}\n                            onBlur={this.handleFieldFocus('confirmationCode')}\n                            onKeyPress={this.handleConfirmEnterPress}\n                        />\n                    </fieldset>\n                </div>\n                {verifyPhoneSuccess && <p className=\"pg-confirm__success\">{this.translate(verifyPhoneSuccess)}</p>}\n                <div className=\"pg-confirm__content-deep\">\n                    <Button\n                        className=\"pg-confirm__content-phone-deep-button\"\n                        label={this.translate('page.body.kyc.next')}\n                        onClick={this.confirmPhone}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    private handleFieldFocus = (field: string) => {\n        return () => {\n            switch (field) {\n                case 'phoneNumber':\n                    this.addPlusSignToPhoneNumber();\n                    this.setState({\n                        phoneNumberFocused: !this.state.phoneNumberFocused,\n                    });\n                    break;\n                case 'confirmationCode':\n                    this.setState({\n                        confirmationCodeFocused: !this.state.confirmationCodeFocused,\n                    });\n                    break;\n                default:\n                    break;\n            }\n        };\n    }\n\n    private handleConfirmEnterPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            this.confirmPhone();\n        }\n    }\n\n    private handleSendEnterPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            this.handleSendCode();\n        }\n    }\n\n    private confirmPhone = () => {\n        const requestProps = {\n            phone_number: String(this.state.phoneNumber),\n            verification_code: String(this.state.confirmationCode),\n        };\n        this.props.verifyPhone(requestProps);\n    }\n\n    private addPlusSignToPhoneNumber = () => {\n        if (this.state.phoneNumber.length === 0) {\n            this.setState({\n                phoneNumber: '+',\n            });\n        }\n    }\n\n    private handleChangePhoneNumber = (e: OnChangeEvent) => {\n        if (this.inputPhoneNumber(e)) {\n            this.setState({\n                phoneNumber: e.target.value,\n                resendCode: false,\n            });\n        }\n    }\n\n    private handleChangeConfirmationCode = (e: OnChangeEvent) => {\n        if (this.inputConfirmationCode(e)) {\n            this.setState({\n                confirmationCode: e.target.value,\n            });\n        }\n    };\n\n    private inputPhoneNumber = (e: OnChangeEvent) => {\n        const convertedText = e.target.value.trim();\n        const condition = new RegExp('^\\\\+\\\\d*?$');\n        return condition.test(convertedText);\n    }\n\n    private inputConfirmationCode = (e: OnChangeEvent) => {\n        const convertedText = e.target.value.trim();\n        const condition = new RegExp('^\\\\d*?$');\n        return condition.test(convertedText);\n    }\n\n    private handleSendCode = () => {\n        const requestProps = {\n            phone_number: String(this.state.phoneNumber),\n        };\n        if (!this.state.resendCode) {\n            this.props.sendCode(requestProps);\n            this.setState({\n                resendCode: true,\n            });\n        } else {\n            this.props.resendCode(requestProps);\n        }\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    verifyPhoneSuccess: selectVerifyPhoneSuccess(state),\n});\n\nconst mapDispatchProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        resendCode: phone => dispatch(resendCode(phone)),\n        sendCode: phone => dispatch(sendCode(phone)),\n        verifyPhone: payload => dispatch(verifyPhone(payload)),\n        changeUserLevel: payload => dispatch(changeUserLevel(payload)),\n    });\n\n// tslint:disable-next-line\nexport const Phone = injectIntl(connect(mapStateToProps, mapDispatchProps)(PhoneComponent) as any);\n"]},"metadata":{},"sourceType":"module"}