{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(userActivitySaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { userActivityData, userActivityError } from '../actions';\nvar userActivityOptions = {\n  apiVersion: 'barong',\n  withHeaders: true\n};\nexport function userActivitySaga(action) {\n  var _action$payload, page, limit, _ref, data, headers;\n\n  return _regeneratorRuntime.wrap(function userActivitySaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _action$payload = action.payload, page = _action$payload.page, limit = _action$payload.limit;\n          _context.next = 4;\n          return call(API.get(userActivityOptions), \"/resource/users/activity/all?limit=\".concat(limit, \"&page=\").concat(page + 1));\n\n        case 4:\n          _ref = _context.sent;\n          data = _ref.data;\n          headers = _ref.headers;\n          _context.next = 9;\n          return put(userActivityData({\n            list: data,\n            page: page,\n            total: headers.total\n          }));\n\n        case 9:\n          _context.next = 15;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 15;\n          return put(userActivityError(_context.t0));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 11]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/userActivity/sagas/userActivitySaga.ts"],"names":["userActivitySaga","call","put","API","userActivityData","userActivityError","userActivityOptions","apiVersion","withHeaders","action","payload","page","limit","get","data","headers","list","total"],"mappings":";;;;yBAciBA,gB;;AAdjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SACIC,gBADJ,EAEIC,iBAFJ,QAIO,YAJP;AAMA,IAAMC,mBAAmC,GAAG;AACxCC,EAAAA,UAAU,EAAE,QAD4B;AAExCC,EAAAA,WAAW,EAAE;AAF2B,CAA5C;AAKA,OAAO,SAAUR,gBAAV,CAA2BS,MAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEyBA,MAAM,CAACC,OAFhC,EAESC,IAFT,mBAESA,IAFT,EAEeC,KAFf,mBAEeA,KAFf;AAAA;AAG2B,iBAAMX,IAAI,CAACE,GAAG,CAACU,GAAJ,CAAQP,mBAAR,CAAD,+CAAqEM,KAArE,mBAAmFD,IAAI,GAAG,CAA1F,EAAV;;AAH3B;AAAA;AAGSG,UAAAA,IAHT,QAGSA,IAHT;AAGeC,UAAAA,OAHf,QAGeA,OAHf;AAAA;AAIC,iBAAMb,GAAG,CAACE,gBAAgB,CAAC;AAAEY,YAAAA,IAAI,EAAEF,IAAR;AAAcH,YAAAA,IAAI,EAAJA,IAAd;AAAoBM,YAAAA,KAAK,EAAEF,OAAO,CAACE;AAAnC,WAAD,CAAjB,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMf,GAAG,CAACG,iBAAiB,aAAlB,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport {\n    userActivityData,\n    userActivityError,\n    UserActivityFetch,\n} from '../actions';\n\nconst userActivityOptions: RequestOptions = {\n    apiVersion: 'barong',\n    withHeaders: true,\n};\n\nexport function* userActivitySaga(action: UserActivityFetch) {\n    try {\n        const { page, limit } = action.payload;\n        const { data, headers } = yield call(API.get(userActivityOptions), `/resource/users/activity/all?limit=${limit}&page=${page + 1}`);\n        yield put(userActivityData({ list: data, page, total: headers.total }));\n    } catch (error) {\n        yield put(userActivityError(error));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}