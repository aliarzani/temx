{"ast":null,"code":"import _classCallCheck from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/temx/src/containers/OpenOrders/index.tsx\";\nimport { Loader } from '@openware/components';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { OpenOrders } from '../../components';\nimport { localeDate, preciseData, setTradeColor } from '../../helpers';\nimport { openOrdersCancelFetch as _openOrdersCancelFetch, ordersCancelAllFetch, selectCancelOpenOrdersFetching, selectCurrentMarket, selectOpenOrdersFetching, selectOpenOrdersList, selectUserLoggedIn, userOpenOrdersFetch as _userOpenOrdersFetch } from '../../modules';\nexport var OpenOrdersContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OpenOrdersContainer, _React$Component);\n\n  function OpenOrdersContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, OpenOrdersContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(OpenOrdersContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderHeadersKeys = function () {\n      return ['Date', 'Price', 'Amount', 'Total', 'Filled', ''];\n    };\n\n    _this.renderHeaders = function () {\n      var currentAskUnit = _this.props.currentMarket ? \" (\".concat(_this.props.currentMarket.base_unit.toUpperCase(), \")\") : null;\n      var currentBidUnit = _this.props.currentMarket ? \" (\".concat(_this.props.currentMarket.quote_unit.toUpperCase(), \")\") : null;\n      return [_this.translate('page.body.trade.header.openOrders.content.date'), _this.translate('page.body.trade.header.openOrders.content.price').concat(currentBidUnit), _this.translate('page.body.trade.header.openOrders.content.amount').concat(currentAskUnit), _this.translate('page.body.trade.header.openOrders.content.total').concat(currentBidUnit), _this.translate('page.body.trade.header.openOrders.content.filled'), ''];\n    };\n\n    _this.openOrders = function () {\n      return React.createElement(OpenOrders, {\n        headersKeys: _this.renderHeadersKeys(),\n        headers: _this.renderHeaders(),\n        data: _this.renderData(),\n        onCancel: _this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      });\n    };\n\n    _this.renderData = function () {\n      var _this$props = _this.props,\n          list = _this$props.list,\n          currentMarket = _this$props.currentMarket;\n\n      if (list.length === 0) {\n        return [[[''], [''], _this.translate('page.noDataToShow')]];\n      }\n\n      return list.map(function (item) {\n        var id = item.id,\n            price = item.price,\n            created_at = item.created_at,\n            remaining_volume = item.remaining_volume,\n            origin_volume = item.origin_volume,\n            side = item.side;\n        var executedVolume = Number(origin_volume) - Number(remaining_volume);\n        var remainingAmount = Number(remaining_volume);\n        var total = Number(origin_volume) * Number(price);\n        var filled = (executedVolume / Number(origin_volume) * 100).toFixed(2);\n        var priceFixed = currentMarket ? currentMarket.price_precision : 0;\n        var amountFixed = currentMarket ? currentMarket.amount_precision : 0;\n        return [localeDate(created_at, 'fullDate'), React.createElement(\"span\", {\n          style: {\n            color: setTradeColor(side).color\n          },\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, preciseData(price, priceFixed)), React.createElement(\"span\", {\n          style: {\n            color: setTradeColor(side).color\n          },\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, preciseData(remainingAmount, amountFixed)), React.createElement(\"span\", {\n          style: {\n            color: setTradeColor(side).color\n          },\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, preciseData(total, amountFixed)), React.createElement(\"span\", {\n          style: {\n            color: setTradeColor(side).color\n          },\n          key: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, filled, \"%\"), side];\n      });\n    };\n\n    _this.translate = function (e) {\n      return _this.props.intl.formatMessage({\n        id: e\n      });\n    };\n\n    _this.handleCancel = function (index) {\n      var list = _this.props.list;\n      var orderToDelete = list[index];\n\n      _this.props.openOrdersCancelFetch({\n        id: orderToDelete.id,\n        list: list\n      });\n    };\n\n    _this.handleCancelAll = function () {\n      var currentMarket = _this.props.currentMarket;\n\n      _this.props.ordersCancelAll({\n        market: currentMarket.id\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(OpenOrdersContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          currentMarket = _this$props2.currentMarket,\n          userLoggedIn = _this$props2.userLoggedIn;\n\n      if (userLoggedIn && currentMarket) {\n        this.props.userOpenOrdersFetch({\n          market: currentMarket\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      var userLoggedIn = next.userLoggedIn,\n          currentMarket = next.currentMarket;\n      var _this$props3 = this.props,\n          prevUserLoggedIn = _this$props3.userLoggedIn,\n          prevCurrentMarket = _this$props3.currentMarket;\n\n      if (!prevUserLoggedIn && userLoggedIn && currentMarket) {\n        this.props.userOpenOrdersFetch({\n          market: currentMarket\n        });\n      } else if (userLoggedIn && currentMarket && prevCurrentMarket !== currentMarket) {\n        this.props.userOpenOrdersFetch({\n          market: currentMarket\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          list = _this$props4.list,\n          fetching = _this$props4.fetching;\n      var classNames = classnames('pg-open-orders', {\n        'pg-open-orders--empty': !list.length,\n        'pg-open-orders--loading': fetching\n      });\n      return React.createElement(\"div\", {\n        className: classNames,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-table-header__content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-title-component\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"page.body.trade.header.openOrders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"cr-table-header__cancel\",\n        onClick: this.handleCancelAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"page.body.openOrders.header.button.cancelAll\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"cr-table-header__close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })))), fetching ? React.createElement(\"div\", {\n        className: \"open-order-loading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })) : this.openOrders());\n    }\n  }]);\n\n  return OpenOrdersContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentMarket: selectCurrentMarket(state),\n    list: selectOpenOrdersList(state),\n    fetching: selectOpenOrdersFetching(state),\n    cancelFetching: selectCancelOpenOrdersFetching(state),\n    userLoggedIn: selectUserLoggedIn(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    userOpenOrdersFetch: function userOpenOrdersFetch(payload) {\n      return dispatch(_userOpenOrdersFetch(payload));\n    },\n    openOrdersCancelFetch: function openOrdersCancelFetch(payload) {\n      return dispatch(_openOrdersCancelFetch(payload));\n    },\n    ordersCancelAll: function ordersCancelAll(payload) {\n      return dispatch(ordersCancelAllFetch(payload));\n    }\n  };\n};\n\nexport var OpenOrdersComponent = injectIntl(connect(mapStateToProps, mapDispatchToProps)(OpenOrdersContainer));","map":{"version":3,"sources":["/workspaces/temx/src/containers/OpenOrders/index.tsx"],"names":["Loader","classnames","React","FormattedMessage","injectIntl","connect","OpenOrders","localeDate","preciseData","setTradeColor","openOrdersCancelFetch","ordersCancelAllFetch","selectCancelOpenOrdersFetching","selectCurrentMarket","selectOpenOrdersFetching","selectOpenOrdersList","selectUserLoggedIn","userOpenOrdersFetch","OpenOrdersContainer","renderHeadersKeys","renderHeaders","currentAskUnit","props","currentMarket","base_unit","toUpperCase","currentBidUnit","quote_unit","translate","concat","openOrders","renderData","handleCancel","list","length","map","item","id","price","created_at","remaining_volume","origin_volume","side","executedVolume","Number","remainingAmount","total","filled","toFixed","priceFixed","price_precision","amountFixed","amount_precision","color","e","intl","formatMessage","index","orderToDelete","handleCancelAll","ordersCancelAll","market","userLoggedIn","next","prevUserLoggedIn","prevCurrentMarket","fetching","classNames","Component","mapStateToProps","state","cancelFetching","mapDispatchToProps","dispatch","payload","OpenOrdersComponent"],"mappings":"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","sourcesContent":["import { Loader } from '@openware/components';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { FormattedMessage, InjectedIntlProps, injectIntl } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { OpenOrders } from '../../components';\nimport { localeDate, preciseData, setTradeColor } from '../../helpers';\nimport {\n    Market,\n    openOrdersCancelFetch,\n    ordersCancelAllFetch,\n    RootState,\n    selectCancelOpenOrdersFetching,\n    selectCurrentMarket,\n    selectOpenOrdersFetching,\n    selectOpenOrdersList,\n    selectUserLoggedIn,\n    userOpenOrdersFetch,\n} from '../../modules';\nimport { OrderCommon } from '../../modules/types';\n\ninterface ReduxProps {\n    currentMarket: Market | undefined;\n    list: OrderCommon[];\n    fetching: boolean;\n    cancelFetching: boolean;\n    userLoggedIn: boolean;\n}\n\ninterface DispatchProps {\n    userOpenOrdersFetch: typeof userOpenOrdersFetch;\n    openOrdersCancelFetch: typeof openOrdersCancelFetch;\n    ordersCancelAll: typeof ordersCancelAllFetch;\n}\n\ntype Props = ReduxProps & DispatchProps & InjectedIntlProps;\n\nexport class OpenOrdersContainer extends React.Component<Props> {\n    public componentDidMount() {\n        const { currentMarket, userLoggedIn } = this.props;\n        if (userLoggedIn && currentMarket) {\n            this.props.userOpenOrdersFetch({ market: currentMarket });\n        }\n    }\n\n    public componentWillReceiveProps(next: Props) {\n        const { userLoggedIn, currentMarket } = next;\n        const { userLoggedIn: prevUserLoggedIn, currentMarket: prevCurrentMarket } = this.props;\n\n        if (!prevUserLoggedIn && userLoggedIn && currentMarket) {\n            this.props.userOpenOrdersFetch({ market: currentMarket });\n        } else if (userLoggedIn && currentMarket && prevCurrentMarket !== currentMarket) {\n            this.props.userOpenOrdersFetch({ market: currentMarket });\n        }\n    }\n\n    public render() {\n        const { list, fetching } = this.props;\n        const classNames = classnames('pg-open-orders', {\n            'pg-open-orders--empty': !list.length,\n            'pg-open-orders--loading': fetching,\n        });\n        return (\n            <div className={classNames}>\n                <div className=\"cr-table-header__content\">\n                    <div className=\"cr-title-component\">\n                        <FormattedMessage id=\"page.body.trade.header.openOrders\" />\n\n                        <span className=\"cr-table-header__cancel\" onClick={this.handleCancelAll}>\n                            <FormattedMessage id=\"page.body.openOrders.header.button.cancelAll\" />\n                            <span className=\"cr-table-header__close\" />\n                        </span>\n                    </div>\n                </div>\n                {fetching ? <div className=\"open-order-loading\"><Loader /></div> : this.openOrders()}\n            </div>\n        );\n    }\n\n    private renderHeadersKeys = () => {\n        return [\n            'Date',\n            'Price',\n            'Amount',\n            'Total',\n            'Filled',\n            '',\n        ];\n    };\n\n    private renderHeaders = () => {\n        const currentAskUnit = this.props.currentMarket ? ` (${this.props.currentMarket.base_unit.toUpperCase()})` : null;\n        const currentBidUnit = this.props.currentMarket ? ` (${this.props.currentMarket.quote_unit.toUpperCase()})` : null;\n        return [\n            this.translate('page.body.trade.header.openOrders.content.date'),\n            this.translate('page.body.trade.header.openOrders.content.price').concat(currentBidUnit),\n            this.translate('page.body.trade.header.openOrders.content.amount').concat(currentAskUnit),\n            this.translate('page.body.trade.header.openOrders.content.total').concat(currentBidUnit),\n            this.translate('page.body.trade.header.openOrders.content.filled'),\n            '',\n        ];\n    };\n\n    private openOrders = () => {\n        return (\n            <OpenOrders\n                headersKeys={this.renderHeadersKeys()}\n                headers={this.renderHeaders()}\n                data={this.renderData()}\n                onCancel={this.handleCancel}\n            />\n        );\n    };\n\n    private renderData = () => {\n        const { list, currentMarket } = this.props;\n\n        if (list.length === 0) {\n            return [[[''],[''], this.translate('page.noDataToShow')]];\n        }\n\n        return list.map((item: OrderCommon) => {\n            const { id, price, created_at, remaining_volume, origin_volume, side } = item;\n            const executedVolume = Number(origin_volume) - Number(remaining_volume);\n            const remainingAmount = Number(remaining_volume);\n            const total = Number(origin_volume) * Number(price);\n            const filled = ((executedVolume / Number(origin_volume)) * 100).toFixed(2);\n            const priceFixed = currentMarket ? currentMarket.price_precision : 0;\n            const amountFixed = currentMarket ? currentMarket.amount_precision : 0;\n\n            return [\n                localeDate(created_at, 'fullDate'),\n                <span style={{ color: setTradeColor(side).color }} key={id}>{preciseData(price, priceFixed)}</span>,\n                <span style={{ color: setTradeColor(side).color }} key={id}>{preciseData(remainingAmount, amountFixed)}</span>,\n                <span style={{ color: setTradeColor(side).color }} key={id}>{preciseData(total, amountFixed)}</span>,\n                <span style={{ color: setTradeColor(side).color }} key={id}>{filled}%</span>,\n                side,\n            ];\n        });\n    };\n\n    private translate = (e: string) => this.props.intl.formatMessage({ id: e });\n\n    private handleCancel = (index: number) => {\n        const { list } = this.props;\n        const orderToDelete = list[index];\n        this.props.openOrdersCancelFetch({ id: orderToDelete.id, list });\n    };\n\n    private handleCancelAll = () => {\n        const { currentMarket } = this.props;\n        this.props.ordersCancelAll({market: currentMarket.id});\n    }\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    currentMarket: selectCurrentMarket(state),\n    list: selectOpenOrdersList(state),\n    fetching: selectOpenOrdersFetching(state),\n    cancelFetching: selectCancelOpenOrdersFetching(state),\n    userLoggedIn: selectUserLoggedIn(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n    userOpenOrdersFetch: payload => dispatch(userOpenOrdersFetch(payload)),\n    openOrdersCancelFetch: payload => dispatch(openOrdersCancelFetch(payload)),\n    ordersCancelAll: payload => dispatch(ordersCancelAllFetch(payload)),\n});\n\nexport type OpenOrdersProps = ReduxProps;\n\nexport const OpenOrdersComponent = injectIntl(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n    )(OpenOrdersContainer),\n);\n"]},"metadata":{},"sourceType":"module"}