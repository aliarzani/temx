{"ast":null,"code":"import _classCallCheck from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/temx/src/containers/ProfileTwoFactorAuth/index.tsx\";\n\n/* tslint:disable jsx-no-multiline-js */\nimport { Checkbox } from '@openware/components';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nvar ProfileTwoFactorAuthComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfileTwoFactorAuthComponent, _React$Component);\n\n  function ProfileTwoFactorAuthComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileTwoFactorAuthComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileTwoFactorAuthComponent).call(this, props));\n\n    _this.handleToggle2fa = function () {\n      if (_this.props.navigateTo2fa) {\n        _this.props.navigateTo2fa(!_this.state.is2faEnabled);\n      }\n    };\n\n    _this.state = {\n      is2faEnabled: props.is2faEnabled || false\n    };\n    return _this;\n  }\n\n  _createClass(ProfileTwoFactorAuthComponent, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(next) {\n      if (next.is2faEnabled !== this.props.is2faEnabled) {\n        this.setState({\n          is2faEnabled: next.is2faEnabled || false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var is2faEnabled = this.state.is2faEnabled;\n      var className = is2faEnabled ? 'pg-profile-page__label-value__enabled' : 'pg-profile-page__label-value__disabled';\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"pg-profile-page__label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"page.body.profile.header.account.content.twoFactorAuthentication\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"span\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, is2faEnabled ? React.createElement(FormattedMessage, {\n        id: \"page.body.profile.header.account.content.twoFactorAuthentication.message.enable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }) : React.createElement(FormattedMessage, {\n        id: \"page.body.profile.header.account.content.twoFactorAuthentication.message.disable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }))), React.createElement(Checkbox, {\n        checked: is2faEnabled,\n        className: 'pg-profile-page__switch',\n        onChange: function onChange() {\n          return _this2.handleToggle2fa();\n        },\n        label: '',\n        slider: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProfileTwoFactorAuthComponent;\n}(React.Component);\n\nexport var ProfileTwoFactorAuth = ProfileTwoFactorAuthComponent;","map":{"version":3,"sources":["/workspaces/temx/src/containers/ProfileTwoFactorAuth/index.tsx"],"names":["Checkbox","React","FormattedMessage","ProfileTwoFactorAuthComponent","props","handleToggle2fa","navigateTo2fa","state","is2faEnabled","next","setState","className","Component","ProfileTwoFactorAuth"],"mappings":";;;;;;;AAAA;AACA,SAASA,QAAT,QAAyB,sBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,gBAAT,QAAiC,YAAjC;;IAcMC,6B;;;;;AACF,yCAAYC,KAAZ,EAA8C;AAAA;;AAAA;;AAC1C,uGAAMA,KAAN;;AAD0C,UA2CtCC,eA3CsC,GA2CpB,YAAM;AAC5B,UAAI,MAAKD,KAAL,CAAWE,aAAf,EAA8B;AAC1B,cAAKF,KAAL,CAAWE,aAAX,CAAyB,CAAC,MAAKC,KAAL,CAAWC,YAArC;AACH;AACJ,KA/C6C;;AAG1C,UAAKD,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAEJ,KAAK,CAACI,YAAN,IAAsB;AAD3B,KAAb;AAH0C;AAM7C;;;;8CAEgCC,I,EAAiC;AAC9D,UAAIA,IAAI,CAACD,YAAL,KAAsB,KAAKJ,KAAL,CAAWI,YAArC,EAAmD;AAC/C,aAAKE,QAAL,CAAc;AACVF,UAAAA,YAAY,EAAEC,IAAI,CAACD,YAAL,IAAqB;AADzB,SAAd;AAGH;AACJ;;;6BAEe;AAAA;;AAAA,UACJA,YADI,GACa,KAAKD,KADlB,CACJC,YADI;AAEZ,UAAMG,SAAS,GAAGH,YAAY,GAAG,uCAAH,GACG,wCADjC;AAGA,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,kEAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAM,QAAA,SAAS,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCH,YAAY,GAAG,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,iFAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GACG,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,kFAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFhB,CAJJ,CADJ,EAUI,oBAAC,QAAD;AACI,QAAA,OAAO,EAAEA,YADb;AAEI,QAAA,SAAS,EAAE,yBAFf;AAGI,QAAA,QAAQ,EAAE;AAAA,iBAAM,MAAI,CAACH,eAAL,EAAN;AAAA,SAHd;AAII,QAAA,KAAK,EAAE,EAJX;AAKI,QAAA,MAAM,EAAE,IALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CADJ;AAoBH;;;;EA1CuCJ,KAAK,CAACW,S;;AAmDlD,OAAO,IAAMC,oBAAoB,GAAGV,6BAA7B","sourcesContent":["/* tslint:disable jsx-no-multiline-js */\nimport { Checkbox } from '@openware/components';\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\ninterface ProfileTwoFactorAuthProps {\n    is2faEnabled?: boolean;\n    navigateTo2fa?: (enable2fa: boolean) => void;\n    openModal?: () => void;\n}\n\ninterface ProfileTwoFactorAuthState {\n    is2faEnabled: boolean;\n}\n\ntype Props = ProfileTwoFactorAuthProps;\n\nclass ProfileTwoFactorAuthComponent extends React.Component<Props, ProfileTwoFactorAuthState> {\n    constructor(props: ProfileTwoFactorAuthProps) {\n        super(props);\n\n        this.state = {\n            is2faEnabled: props.is2faEnabled || false,\n        };\n    }\n\n    public componentWillReceiveProps(next: ProfileTwoFactorAuthProps) {\n        if (next.is2faEnabled !== this.props.is2faEnabled) {\n            this.setState({\n                is2faEnabled: next.is2faEnabled || false,\n            });\n        }\n    }\n\n    public render() {\n        const { is2faEnabled } = this.state;\n        const className = is2faEnabled ? 'pg-profile-page__label-value__enabled'\n                                       : 'pg-profile-page__label-value__disabled';\n\n        return (\n            <React.Fragment>\n                <label className=\"pg-profile-page__label\">\n                    <div>\n                        <FormattedMessage id=\"page.body.profile.header.account.content.twoFactorAuthentication\" />\n                    </div>\n                    <span className={className}>\n                    {is2faEnabled ? <FormattedMessage id=\"page.body.profile.header.account.content.twoFactorAuthentication.message.enable\" />\n                                  : <FormattedMessage id=\"page.body.profile.header.account.content.twoFactorAuthentication.message.disable\" />}\n                    </span>\n                </label>\n                <Checkbox\n                    checked={is2faEnabled}\n                    className={'pg-profile-page__switch'}\n                    onChange={() => this.handleToggle2fa()}\n                    label={''}\n                    slider={true}\n                />\n            </React.Fragment>\n        );\n    }\n\n    private handleToggle2fa = () => {\n        if (this.props.navigateTo2fa) {\n            this.props.navigateTo2fa(!this.state.is2faEnabled);\n        }\n    };\n}\n\nexport const ProfileTwoFactorAuth = ProfileTwoFactorAuthComponent;\n"]},"metadata":{},"sourceType":"module"}