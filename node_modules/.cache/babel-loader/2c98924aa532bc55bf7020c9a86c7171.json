{"ast":null,"code":"export var selectOrdersHistory = function selectOrdersHistory(state) {\n  return state.user.ordersHistory.list;\n};\nexport var selectTotalOrdersHistory = function selectTotalOrdersHistory(state) {\n  return state.user.ordersHistory.total;\n};\nexport var selectCurrentPageIndex = function selectCurrentPageIndex(state) {\n  return state.user.ordersHistory.pageIndex;\n};\nexport var selectOrdersPageCount = function selectOrdersPageCount(state, limit) {\n  return Math.ceil(state.user.ordersHistory.total / limit);\n};\nexport var selectOrdersFirstElemIndex = function selectOrdersFirstElemIndex(state, limit) {\n  return state.user.ordersHistory.pageIndex * limit + 1;\n};\nexport var selectOrdersLastElemIndex = function selectOrdersLastElemIndex(state, limit) {\n  if (state.user.ordersHistory.pageIndex * limit + limit > selectTotalOrdersHistory(state)) {\n    return selectTotalOrdersHistory(state);\n  } else {\n    return state.user.ordersHistory.pageIndex * limit + limit;\n  }\n};\nexport var selectOrdersNextPageExists = function selectOrdersNextPageExists(state, limit) {\n  return state.user.ordersHistory.pageIndex + 1 < selectOrdersPageCount(state, limit);\n};\nexport var selectOrdersHistoryLoading = function selectOrdersHistoryLoading(state) {\n  return state.user.ordersHistory.fetching;\n};\nexport var selectCancelAllFetching = function selectCancelAllFetching(state) {\n  return state.user.ordersHistory.cancelAllFetching;\n};\nexport var selectCancelFetching = function selectCancelFetching(state) {\n  return state.user.ordersHistory.cancelFetching;\n};","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/ordersHistory/selectors.ts"],"names":["selectOrdersHistory","state","user","ordersHistory","list","selectTotalOrdersHistory","total","selectCurrentPageIndex","pageIndex","selectOrdersPageCount","limit","Math","ceil","selectOrdersFirstElemIndex","selectOrdersLastElemIndex","selectOrdersNextPageExists","selectOrdersHistoryLoading","fetching","selectCancelAllFetching","cancelAllFetching","selectCancelFetching","cancelFetching"],"mappings":"AAGA,OAAO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD;AAAA,SAC/BA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBC,IADM;AAAA,CAA5B;AAGP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACJ,KAAD;AAAA,SACpCA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBG,KADW;AAAA,CAAjC;AAGP,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACN,KAAD;AAAA,SAClCA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBK,SADS;AAAA,CAA/B;AAGP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACR,KAAD,EAAmBS,KAAnB;AAAA,SACjCC,IAAI,CAACC,IAAL,CAAUX,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBG,KAAzB,GAAiCI,KAA3C,CADiC;AAAA,CAA9B;AAGP,OAAO,IAAMG,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACZ,KAAD,EAAmBS,KAAnB;AAAA,SACrCT,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBK,SAAzB,GAAqCE,KAAtC,GAA+C,CADT;AAAA,CAAnC;AAGP,OAAO,IAAMI,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACb,KAAD,EAAmBS,KAAnB,EAA6C;AAClF,MAAKT,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBK,SAAzB,GAAqCE,KAAtC,GAA+CA,KAA/C,GAAuDL,wBAAwB,CAACJ,KAAD,CAAnF,EAA4F;AACxF,WAAOI,wBAAwB,CAACJ,KAAD,CAA/B;AACH,GAFD,MAEO;AACH,WAAQA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBK,SAAzB,GAAqCE,KAAtC,GAA+CA,KAAtD;AACH;AACJ,CANM;AAQP,OAAO,IAAMK,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACd,KAAD,EAAmBS,KAAnB;AAAA,SACrCT,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBK,SAAzB,GAAqC,CAAtC,GAA2CC,qBAAqB,CAACR,KAAD,EAAQS,KAAR,CAD1B;AAAA,CAAnC;AAGP,OAAO,IAAMM,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACf,KAAD;AAAA,SACtCA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBc,QADa;AAAA,CAAnC;AAGP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACjB,KAAD;AAAA,SACnCA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBgB,iBADU;AAAA,CAAhC;AAGP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACnB,KAAD;AAAA,SAChCA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyBkB,cADO;AAAA,CAA7B","sourcesContent":["import { RootState } from '../../index';\nimport { OrderCommon } from '../../types';\n\nexport const selectOrdersHistory = (state: RootState): OrderCommon[] =>\n    state.user.ordersHistory.list;\n\nexport const selectTotalOrdersHistory = (state: RootState): number =>\n    state.user.ordersHistory.total;\n\nexport const selectCurrentPageIndex = (state: RootState): number =>\n    state.user.ordersHistory.pageIndex;\n\nexport const selectOrdersPageCount = (state: RootState, limit: number): number =>\n    Math.ceil(state.user.ordersHistory.total / limit);\n\nexport const selectOrdersFirstElemIndex = (state: RootState, limit: number): number =>\n    (state.user.ordersHistory.pageIndex * limit) + 1;\n\nexport const selectOrdersLastElemIndex = (state: RootState, limit: number): number => {\n    if ((state.user.ordersHistory.pageIndex * limit) + limit > selectTotalOrdersHistory(state)) {\n        return selectTotalOrdersHistory(state);\n    } else {\n        return (state.user.ordersHistory.pageIndex * limit) + limit;\n    }\n};\n\nexport const selectOrdersNextPageExists = (state: RootState, limit: number): boolean =>\n    (state.user.ordersHistory.pageIndex + 1) < selectOrdersPageCount(state, limit);\n\nexport const selectOrdersHistoryLoading = (state: RootState): boolean =>\n    state.user.ordersHistory.fetching;\n\nexport const selectCancelAllFetching = (state: RootState): boolean =>\n    state.user.ordersHistory.cancelAllFetching;\n\nexport const selectCancelFetching = (state: RootState): boolean =>\n    state.user.ordersHistory.cancelFetching;\n"]},"metadata":{},"sourceType":"module"}