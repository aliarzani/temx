{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(signUpSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { signUpError, signUpRequireVerification } from '../actions';\nvar signUpConfig = {\n  apiVersion: 'barong'\n};\nexport function signUpSaga(action) {\n  return _regeneratorRuntime.wrap(function signUpSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.post(signUpConfig), '/identity/users', action.payload);\n\n        case 3:\n          _context.next = 5;\n          return put(signUpRequireVerification({\n            requireVerification: true\n          }));\n\n        case 5:\n          _context.next = 13;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put(signUpError(_context.t0));\n\n        case 11:\n          _context.next = 13;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/auth/sagas/signUpSaga.ts"],"names":["signUpSaga","call","put","API","alertPush","signUpError","signUpRequireVerification","signUpConfig","apiVersion","action","post","payload","requireVerification","message","code","type"],"mappings":";;;;yBAUiBA,U;;AAVjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,WAAT,EAAmCC,yBAAnC,QAAoE,YAApE;AAEA,IAAMC,YAA4B,GAAG;AACjCC,EAAAA,UAAU,EAAE;AADqB,CAArC;AAIA,OAAO,SAAUR,UAAV,CAAqBS,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,iBAAMR,IAAI,CAACE,GAAG,CAACO,IAAJ,CAASH,YAAT,CAAD,EAAyB,iBAAzB,EAA4CE,MAAM,CAACE,OAAnD,CAAV;;AAFD;AAAA;AAGC,iBAAMT,GAAG,CAACI,yBAAyB,CAAC;AAAEM,YAAAA,mBAAmB,EAAE;AAAvB,WAAD,CAA1B,CAAT;;AAHD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKC,iBAAMV,GAAG,CAACG,WAAW,aAAZ,CAAT;;AALD;AAAA;AAMC,iBAAMH,GAAG,CAACE,SAAS,CAAC;AAACS,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBC,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CC,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { signUpError, SignUpFetch, signUpRequireVerification } from '../actions';\n\nconst signUpConfig: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* signUpSaga(action: SignUpFetch) {\n    try {\n        yield call(API.post(signUpConfig), '/identity/users', action.payload);\n        yield put(signUpRequireVerification({ requireVerification: true }));\n    } catch (error) {\n        yield put(signUpError(error));\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}