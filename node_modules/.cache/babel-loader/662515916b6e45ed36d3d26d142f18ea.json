{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(changePasswordSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { changePasswordData, changePasswordError } from '../actions';\nvar changePasswordOptions = {\n  apiVersion: 'barong'\n};\nexport function changePasswordSaga(action) {\n  return _regeneratorRuntime.wrap(function changePasswordSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.put(changePasswordOptions), '/resource/users/password', action.payload);\n\n        case 3:\n          _context.next = 5;\n          return put(changePasswordData());\n\n        case 5:\n          _context.next = 7;\n          return put(alertPush({\n            message: ['success.password.changed'],\n            type: 'success'\n          }));\n\n        case 7:\n          _context.next = 15;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 13;\n          return put(changePasswordError(_context.t0));\n\n        case 13:\n          _context.next = 15;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/profile/sagas/changePasswordSaga.ts"],"names":["changePasswordSaga","call","put","API","alertPush","changePasswordData","changePasswordError","changePasswordOptions","apiVersion","action","payload","message","type","code"],"mappings":";;;;yBAciBA,kB;;AAdjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SACIC,kBADJ,EAEIC,mBAFJ,QAIO,YAJP;AAMA,IAAMC,qBAAqC,GAAG;AAC1CC,EAAAA,UAAU,EAAE;AAD8B,CAA9C;AAIA,OAAO,SAAUR,kBAAV,CAA6BS,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,iBAAMR,IAAI,CAACE,GAAG,CAACD,GAAJ,CAAQK,qBAAR,CAAD,EAAiC,0BAAjC,EAA6DE,MAAM,CAACC,OAApE,CAAV;;AAFD;AAAA;AAGC,iBAAMR,GAAG,CAACG,kBAAkB,EAAnB,CAAT;;AAHD;AAAA;AAIC,iBAAMH,GAAG,CAACE,SAAS,CAAC;AAACO,YAAAA,OAAO,EAAE,CAAC,0BAAD,CAAV;AAAwCC,YAAAA,IAAI,EAAE;AAA9C,WAAD,CAAV,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMV,GAAG,CAACI,mBAAmB,aAApB,CAAT;;AAND;AAAA;AAOC,iBAAMJ,GAAG,CAACE,SAAS,CAAC;AAACO,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBE,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CD,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport {\n    changePasswordData,\n    changePasswordError,\n    ChangePasswordFetch,\n} from '../actions';\n\nconst changePasswordOptions: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* changePasswordSaga(action: ChangePasswordFetch) {\n    try {\n        yield call(API.put(changePasswordOptions), '/resource/users/password', action.payload);\n        yield put(changePasswordData());\n        yield put(alertPush({message: ['success.password.changed'], type: 'success'}));\n    } catch (error) {\n        yield put(changePasswordError(error));\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}