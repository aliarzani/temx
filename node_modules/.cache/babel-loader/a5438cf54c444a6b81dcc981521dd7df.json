{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(geetestCaptchaSaga);\n\n// tslint:disable-next-line no-submodule-imports\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { geetestCaptchaData, geetestCaptchaError } from '../actions';\nvar sessionsConfig = {\n  apiVersion: 'barong'\n};\nexport function geetestCaptchaSaga(action) {\n  var keys;\n  return _regeneratorRuntime.wrap(function geetestCaptchaSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.get(sessionsConfig), '/identity/users/register_geetest');\n\n        case 3:\n          keys = _context.sent;\n          _context.next = 6;\n          return put(geetestCaptchaData(keys));\n\n        case 6:\n          _context.next = 14;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put(geetestCaptchaError(_context.t0));\n\n        case 12:\n          _context.next = 14;\n          return put(alertPush(_context.t0));\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}","map":{"version":3,"sources":["/workspaces/temx/src/modules/user/captcha/sagas/geetestCaptchaSaga.ts"],"names":["geetestCaptchaSaga","call","put","API","alertPush","geetestCaptchaData","geetestCaptchaError","sessionsConfig","apiVersion","action","get","keys"],"mappings":";;;;yBAiBiBA,kB;;AAjBjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SACIC,SADJ,QAEO,uBAFP;AAGA,SACIC,kBADJ,EAEIC,mBAFJ,QAIO,YAJP;AAOA,IAAMC,cAA8B,GAAG;AACnCC,EAAAA,UAAU,EAAE;AADuB,CAAvC;AAIA,OAAO,SAAUR,kBAAV,CAA6BS,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEc,iBAAMR,IAAI,CAACE,GAAG,CAACO,GAAJ,CAAQH,cAAR,CAAD,EAA0B,kCAA1B,CAAV;;AAFd;AAEOI,UAAAA,IAFP;AAAA;AAGC,iBAAMT,GAAG,CAACG,kBAAkB,CAACM,IAAD,CAAnB,CAAT;;AAHD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKC,iBAAMT,GAAG,CAACI,mBAAmB,aAApB,CAAT;;AALD;AAAA;AAMC,iBAAMJ,GAAG,CAACE,SAAS,aAAV,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line no-submodule-imports\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport {\n    alertPush,\n} from '../../../public/alert';\nimport {\n    geetestCaptchaData,\n    geetestCaptchaError,\n    GeetestCaptchaFetch,\n} from '../actions';\n\n\nconst sessionsConfig: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* geetestCaptchaSaga(action: GeetestCaptchaFetch) {\n    try {\n        const keys = yield call(API.get(sessionsConfig), '/identity/users/register_geetest');\n        yield put(geetestCaptchaData(keys));\n    } catch (error) {\n        yield put(geetestCaptchaError(error));\n        yield put(alertPush(error));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}