{"ast":null,"code":"import _defineProperty from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/temx/src/components/Beneficiaries/BeneficiariesAddModal.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Button } from '@openware/components';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CustomInput } from '../../components';\nimport { beneficiariesCreate, selectBeneficiariesCreateError, selectBeneficiariesCreateSuccess } from '../../modules';\nvar defaultState = {\n  coinAddress: '',\n  coinBeneficiaryName: '',\n  coinDescription: '',\n  coinAddressFocused: false,\n  coinBeneficiaryNameFocused: false,\n  coinDescriptionFocused: false,\n  fiatName: '',\n  fiatFullName: '',\n  fiatAccountNumber: '',\n  fiatBankName: '',\n  fiatBankSwiftCode: '',\n  fiatIntermediaryBankName: '',\n  fiatIntermediaryBankSwiftCode: '',\n  fiatNameFocused: false,\n  fiatFullNameFocused: false,\n  fiatAccountNumberFocused: false,\n  fiatBankNameFocused: false,\n  fiatBankSwiftCodeFocused: false,\n  fiatIntermediaryBankNameFocused: false,\n  fiatIntermediaryBankSwiftCodeFocused: false\n}; // tslint:disable:jsx-no-lambda\n\nvar BeneficiariesAddModalComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BeneficiariesAddModalComponent, _React$Component);\n\n  function BeneficiariesAddModalComponent(props) {\n    var _this;\n\n    _classCallCheck(this, BeneficiariesAddModalComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BeneficiariesAddModalComponent).call(this, props));\n\n    _this.renderAddAddressModalHeader = function () {\n      return React.createElement(\"div\", {\n        className: \"cr-email-form__options-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-email-form__option\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-email-form__option-inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, _this.translate('page.body.wallets.beneficiaries.addAddressModal.header'), React.createElement(\"span\", {\n        className: \"pg-profile-page__close pg-profile-page__pull-right\",\n        onClick: _this.handleClickToggleAddAddressModal(true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))));\n    };\n\n    _this.renderAddAddressModalBodyItem = function (field, optional) {\n      var focusedClass = classnames('cr-email-form__group', {\n        'cr-email-form__group--focused': _this.state[\"\".concat(field, \"Focused\")],\n        'cr-email-form__group--optional': optional\n      });\n      return React.createElement(\"div\", {\n        key: field,\n        className: focusedClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        type: \"text\",\n        label: _this.translate(\"page.body.wallets.beneficiaries.addAddressModal.body.\".concat(field)),\n        placeholder: _this.translate(\"page.body.wallets.beneficiaries.addAddressModal.body.\".concat(field)),\n        defaultLabel: field,\n        handleChangeInput: function handleChangeInput(value) {\n          return _this.handleChangeFieldValue(field, value);\n        },\n        inputValue: _this.state[field],\n        handleFocusInput: function handleFocusInput() {\n          return _this.handleChangeFieldFocus(\"\".concat(field, \"Focused\"));\n        },\n        classNameLabel: \"cr-email-form__label\",\n        classNameInput: \"cr-email-form__input\",\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }));\n    };\n\n    _this.renderAddAddressModalCryptoBody = function () {\n      var _this$state = _this.state,\n          coinAddress = _this$state.coinAddress,\n          coinBeneficiaryName = _this$state.coinBeneficiaryName;\n      var isDisabled = !coinAddress || !coinBeneficiaryName;\n      return React.createElement(\"div\", {\n        className: \"cr-email-form__form-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, _this.renderAddAddressModalBodyItem('coinAddress'), _this.renderAddAddressModalBodyItem('coinBeneficiaryName'), _this.renderAddAddressModalBodyItem('coinDescription', true), React.createElement(\"div\", {\n        className: \"cr-email-form__button-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(Button, {\n        label: _this.translate('page.body.wallets.beneficiaries.addAddressModal.body.button'),\n        className: !isDisabled ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled',\n        disabled: isDisabled,\n        onClick: _this.handleSubmitAddAddressCoinModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      })));\n    };\n\n    _this.renderAddAddressModalFiatBody = function () {\n      var _this$state2 = _this.state,\n          fiatName = _this$state2.fiatName,\n          fiatFullName = _this$state2.fiatFullName,\n          fiatAccountNumber = _this$state2.fiatAccountNumber,\n          fiatBankName = _this$state2.fiatBankName;\n      var isDisabled = !fiatName || !fiatFullName || !fiatAccountNumber || !fiatBankName;\n      return React.createElement(\"div\", {\n        className: \"cr-email-form__form-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, _this.renderAddAddressModalBodyItem('fiatName'), _this.renderAddAddressModalBodyItem('fiatFullName'), _this.renderAddAddressModalBodyItem('fiatAccountNumber'), _this.renderAddAddressModalBodyItem('fiatBankName'), _this.renderAddAddressModalBodyItem('fiatBankSwiftCode', true), _this.renderAddAddressModalBodyItem('fiatIntermediaryBankName', true), _this.renderAddAddressModalBodyItem('fiatIntermediaryBankSwiftCode', true), React.createElement(\"div\", {\n        className: \"cr-email-form__button-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Button, {\n        label: _this.translate('page.body.wallets.beneficiaries.addAddressModal.body.button'),\n        className: !isDisabled ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled',\n        disabled: isDisabled,\n        onClick: _this.handleSubmitAddAddressFiatModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })));\n    };\n\n    _this.handleChangeFieldValue = function (key, value) {\n      // @ts-ignore\n      _this.setState(_defineProperty({}, key, value));\n    };\n\n    _this.handleChangeFieldFocus = function (key) {\n      // @ts-ignore\n      _this.setState(function (prev) {\n        return _defineProperty({}, key, !prev[key]);\n      });\n    };\n\n    _this.handleClearModalsInputs = function () {\n      _this.setState(_objectSpread({}, defaultState));\n    };\n\n    _this.handleSubmitAddAddressCoinModal = function () {\n      var currency = _this.props.currency;\n      var _this$state3 = _this.state,\n          coinAddress = _this$state3.coinAddress,\n          coinBeneficiaryName = _this$state3.coinBeneficiaryName,\n          coinDescription = _this$state3.coinDescription; // tslint:disable-next-line:no-any\n\n      var payload = {\n        currency: currency || '',\n        name: coinBeneficiaryName,\n        data: JSON.stringify({\n          address: coinAddress\n        })\n      };\n\n      if (coinDescription) {\n        payload = _objectSpread({}, payload, {\n          description: coinDescription\n        });\n      }\n\n      _this.props.createAddress(payload);\n    };\n\n    _this.handleSubmitAddAddressFiatModal = function () {\n      var currency = _this.props.currency;\n      var _this$state4 = _this.state,\n          fiatName = _this$state4.fiatName,\n          fiatFullName = _this$state4.fiatFullName,\n          fiatAccountNumber = _this$state4.fiatAccountNumber,\n          fiatBankName = _this$state4.fiatBankName,\n          fiatBankSwiftCode = _this$state4.fiatBankSwiftCode,\n          fiatIntermediaryBankName = _this$state4.fiatIntermediaryBankName,\n          fiatIntermediaryBankSwiftCode = _this$state4.fiatIntermediaryBankSwiftCode;\n      var data = {\n        full_name: fiatFullName,\n        account_number: fiatAccountNumber,\n        bank_name: fiatBankName\n      };\n\n      if (fiatBankSwiftCode) {\n        data = _objectSpread({}, data, {\n          bank_swift_code: fiatBankSwiftCode\n        });\n      }\n\n      if (fiatIntermediaryBankName) {\n        data = _objectSpread({}, data, {\n          intermediary_bank_name: fiatIntermediaryBankName\n        });\n      }\n\n      if (fiatIntermediaryBankSwiftCode) {\n        data = _objectSpread({}, data, {\n          intermediary_bank_swift_code: fiatIntermediaryBankSwiftCode\n        });\n      }\n\n      var payload = {\n        currency: currency || '',\n        name: fiatName,\n        data: JSON.stringify(data)\n      };\n\n      _this.props.createAddress(payload);\n    };\n\n    _this.handleClickToggleAddAddressModal = function (clear) {\n      return function () {\n        _this.props.handleToggleAddAddressModal();\n\n        if (clear) {\n          _this.handleClearModalsInputs();\n        }\n      };\n    };\n\n    _this.translate = function (id) {\n      return _this.props.intl.formatMessage({\n        id: id\n      });\n    };\n\n    _this.state = _objectSpread({}, defaultState);\n    return _this;\n  }\n\n  _createClass(BeneficiariesAddModalComponent, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var _this$props = this.props,\n          beneficiariesAddError = _this$props.beneficiariesAddError,\n          beneficiariesAddSuccess = _this$props.beneficiariesAddSuccess;\n\n      if (nextProps.beneficiariesAddError && !beneficiariesAddError || nextProps.beneficiariesAddSuccess && !beneficiariesAddSuccess) {\n        this.props.handleToggleAddAddressModal();\n        this.handleClearModalsInputs();\n      }\n\n      if (nextProps.beneficiariesAddSuccess && !beneficiariesAddSuccess) {\n        this.props.handleToggleConfirmationModal();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var type = this.props.type;\n      var addModalClass = classnames('cr-modal beneficiaries-add-address-modal', {\n        'beneficiaries-add-address-modal--coin': type === 'coin',\n        'beneficiaries-add-address-modal--fiat': type === 'fiat'\n      });\n      return React.createElement(\"div\", {\n        className: addModalClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-email-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, this.renderAddAddressModalHeader(), type === 'coin' ? this.renderAddAddressModalCryptoBody() : this.renderAddAddressModalFiatBody()));\n    }\n  }]);\n\n  return BeneficiariesAddModalComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    beneficiariesAddError: selectBeneficiariesCreateError(state),\n    beneficiariesAddSuccess: selectBeneficiariesCreateSuccess(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createAddress: function createAddress(payload) {\n      return dispatch(beneficiariesCreate(payload));\n    }\n  };\n}; // tslint:disable-next-line:no-any\n\n\nexport var BeneficiariesAddModal = injectIntl(connect(mapStateToProps, mapDispatchToProps)(BeneficiariesAddModalComponent));","map":{"version":3,"sources":["/workspaces/temx/src/components/Beneficiaries/BeneficiariesAddModal.tsx"],"names":["Button","classnames","React","injectIntl","connect","CustomInput","beneficiariesCreate","selectBeneficiariesCreateError","selectBeneficiariesCreateSuccess","defaultState","coinAddress","coinBeneficiaryName","coinDescription","coinAddressFocused","coinBeneficiaryNameFocused","coinDescriptionFocused","fiatName","fiatFullName","fiatAccountNumber","fiatBankName","fiatBankSwiftCode","fiatIntermediaryBankName","fiatIntermediaryBankSwiftCode","fiatNameFocused","fiatFullNameFocused","fiatAccountNumberFocused","fiatBankNameFocused","fiatBankSwiftCodeFocused","fiatIntermediaryBankNameFocused","fiatIntermediaryBankSwiftCodeFocused","BeneficiariesAddModalComponent","props","renderAddAddressModalHeader","translate","handleClickToggleAddAddressModal","renderAddAddressModalBodyItem","field","optional","focusedClass","state","value","handleChangeFieldValue","handleChangeFieldFocus","renderAddAddressModalCryptoBody","isDisabled","handleSubmitAddAddressCoinModal","renderAddAddressModalFiatBody","handleSubmitAddAddressFiatModal","key","setState","prev","handleClearModalsInputs","currency","payload","name","data","JSON","stringify","address","description","createAddress","full_name","account_number","bank_name","bank_swift_code","intermediary_bank_name","intermediary_bank_swift_code","clear","handleToggleAddAddressModal","id","intl","formatMessage","nextProps","beneficiariesAddError","beneficiariesAddSuccess","handleToggleConfirmationModal","type","addModalClass","Component","mapStateToProps","mapDispatchToProps","dispatch","BeneficiariesAddModal"],"mappings":"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","sourcesContent":["import { Button } from '@openware/components';\nimport classnames from 'classnames';\nimport * as React from 'react';\nimport { InjectedIntlProps, injectIntl } from 'react-intl';\nimport { connect, MapDispatchToProps } from 'react-redux';\nimport { CustomInput } from '../../components';\nimport {\n    beneficiariesCreate,\n    BeneficiaryBank,\n    RootState,\n    selectBeneficiariesCreateError,\n    selectBeneficiariesCreateSuccess,\n} from '../../modules';\nimport { CommonError } from '../../modules/types';\n\ninterface ReduxProps {\n    beneficiariesAddError?: CommonError;\n    beneficiariesAddSuccess: boolean;\n}\n\ninterface DispatchProps {\n    createAddress: typeof beneficiariesCreate;\n}\n\ninterface OwnProps {\n    currency: string;\n    type: 'fiat' | 'coin';\n    handleToggleAddAddressModal: () => void;\n    handleToggleConfirmationModal: () => void;\n}\n\ninterface CoinState {\n    coinAddress: string;\n    coinBeneficiaryName: string;\n    coinDescription: string;\n\n    coinAddressFocused: boolean;\n    coinBeneficiaryNameFocused: boolean;\n    coinDescriptionFocused: boolean;\n}\n\ninterface FiatState {\n    fiatName: string;\n    fiatFullName: string;\n    fiatAccountNumber: string;\n    fiatBankName: string;\n    fiatBankSwiftCode: string;\n    fiatIntermediaryBankName: string;\n    fiatIntermediaryBankSwiftCode: string;\n\n    fiatNameFocused: boolean;\n    fiatFullNameFocused: boolean;\n    fiatAccountNumberFocused: boolean;\n    fiatBankNameFocused: boolean;\n    fiatBankSwiftCodeFocused: boolean;\n    fiatIntermediaryBankNameFocused: boolean;\n    fiatIntermediaryBankSwiftCodeFocused: boolean;\n}\n\ntype Props = ReduxProps & DispatchProps & OwnProps & InjectedIntlProps;\ntype State = CoinState & FiatState;\n\nconst defaultState = {\n    coinAddress: '',\n    coinBeneficiaryName: '',\n    coinDescription: '',\n    coinAddressFocused: false,\n    coinBeneficiaryNameFocused: false,\n    coinDescriptionFocused: false,\n\n    fiatName: '',\n    fiatFullName: '',\n    fiatAccountNumber: '',\n    fiatBankName: '',\n    fiatBankSwiftCode: '',\n    fiatIntermediaryBankName: '',\n    fiatIntermediaryBankSwiftCode: '',\n    fiatNameFocused: false,\n    fiatFullNameFocused: false,\n    fiatAccountNumberFocused: false,\n    fiatBankNameFocused: false,\n    fiatBankSwiftCodeFocused: false,\n    fiatIntermediaryBankNameFocused: false,\n    fiatIntermediaryBankSwiftCodeFocused: false,\n};\n\n// tslint:disable:jsx-no-lambda\nclass BeneficiariesAddModalComponent extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            ...defaultState,\n        };\n    }\n\n    public componentWillReceiveProps(nextProps: Props) {\n        const {\n            beneficiariesAddError,\n            beneficiariesAddSuccess,\n        } = this.props;\n\n        if ((nextProps.beneficiariesAddError && !beneficiariesAddError) ||\n            (nextProps.beneficiariesAddSuccess && !beneficiariesAddSuccess)) {\n            this.props.handleToggleAddAddressModal();\n            this.handleClearModalsInputs();\n        }\n\n        if (nextProps.beneficiariesAddSuccess && !beneficiariesAddSuccess) {\n            this.props.handleToggleConfirmationModal();\n        }\n    }\n\n    public render() {\n        const { type } = this.props;\n\n        const addModalClass = classnames('cr-modal beneficiaries-add-address-modal', {\n            'beneficiaries-add-address-modal--coin': type === 'coin',\n            'beneficiaries-add-address-modal--fiat': type === 'fiat',\n        });\n\n        return (\n            <div className={addModalClass}>\n                <div className=\"cr-email-form\">\n                    {this.renderAddAddressModalHeader()}\n                    {type === 'coin' ? this.renderAddAddressModalCryptoBody() : this.renderAddAddressModalFiatBody()}\n                </div>\n            </div>\n        );\n    }\n\n    private renderAddAddressModalHeader = () => {\n        return (\n            <div className=\"cr-email-form__options-group\">\n                <div className=\"cr-email-form__option\">\n                    <div className=\"cr-email-form__option-inner\">\n                        {this.translate('page.body.wallets.beneficiaries.addAddressModal.header')}\n                        <span\n                            className=\"pg-profile-page__close pg-profile-page__pull-right\"\n                            onClick={this.handleClickToggleAddAddressModal(true)}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    private renderAddAddressModalBodyItem = (field: string, optional?: boolean) => {\n        const focusedClass = classnames('cr-email-form__group', {\n            'cr-email-form__group--focused': this.state[`${field}Focused`],\n            'cr-email-form__group--optional': optional,\n        });\n\n        return (\n            <div key={field} className={focusedClass}>\n                <CustomInput\n                    type=\"text\"\n                    label={this.translate(`page.body.wallets.beneficiaries.addAddressModal.body.${field}`)}\n                    placeholder={this.translate(`page.body.wallets.beneficiaries.addAddressModal.body.${field}`)}\n                    defaultLabel={field}\n                    handleChangeInput={value => this.handleChangeFieldValue(field, value)}\n                    inputValue={this.state[field]}\n                    handleFocusInput={() => this.handleChangeFieldFocus(`${field}Focused`)}\n                    classNameLabel=\"cr-email-form__label\"\n                    classNameInput=\"cr-email-form__input\"\n                    autoFocus={true}\n                />\n            </div>\n        );\n    }\n\n    private renderAddAddressModalCryptoBody = () => {\n        const {\n            coinAddress,\n            coinBeneficiaryName,\n        } = this.state;\n\n        const isDisabled = !coinAddress || !coinBeneficiaryName;\n\n        return (\n            <div className=\"cr-email-form__form-content\">\n                {this.renderAddAddressModalBodyItem('coinAddress')}\n                {this.renderAddAddressModalBodyItem('coinBeneficiaryName')}\n                {this.renderAddAddressModalBodyItem('coinDescription', true)}\n                <div className=\"cr-email-form__button-wrapper\">\n                    <Button\n                        label={this.translate('page.body.wallets.beneficiaries.addAddressModal.body.button')}\n                        className={!isDisabled ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled'}\n                        disabled={isDisabled}\n                        onClick={this.handleSubmitAddAddressCoinModal}\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    private renderAddAddressModalFiatBody = () => {\n        const {\n            fiatName,\n            fiatFullName,\n            fiatAccountNumber,\n            fiatBankName,\n        } = this.state;\n\n        const isDisabled = !fiatName || !fiatFullName || !fiatAccountNumber || !fiatBankName;\n\n        return (\n            <div className=\"cr-email-form__form-content\">\n                {this.renderAddAddressModalBodyItem('fiatName')}\n                {this.renderAddAddressModalBodyItem('fiatFullName')}\n                {this.renderAddAddressModalBodyItem('fiatAccountNumber')}\n                {this.renderAddAddressModalBodyItem('fiatBankName')}\n                {this.renderAddAddressModalBodyItem('fiatBankSwiftCode', true)}\n                {this.renderAddAddressModalBodyItem('fiatIntermediaryBankName', true)}\n                {this.renderAddAddressModalBodyItem('fiatIntermediaryBankSwiftCode', true)}\n                <div className=\"cr-email-form__button-wrapper\">\n                    <Button\n                        label={this.translate('page.body.wallets.beneficiaries.addAddressModal.body.button')}\n                        className={!isDisabled ? 'cr-email-form__button' : 'cr-email-form__button cr-email-form__button--disabled'}\n                        disabled={isDisabled}\n                        onClick={this.handleSubmitAddAddressFiatModal}\n                    />\n                </div>\n            </div>\n        );\n    };\n\n    private handleChangeFieldValue = (key: string, value: string) => {\n        // @ts-ignore\n        this.setState({\n            [key]: value,\n        });\n    }\n\n    private handleChangeFieldFocus = (key: string) => {\n        // @ts-ignore\n        this.setState(prev => ({\n            [key]: !prev[key],\n        }));\n    };\n\n    private handleClearModalsInputs = () => {\n        this.setState({\n            ...defaultState,\n        });\n    }\n\n    private handleSubmitAddAddressCoinModal = () => {\n        const { currency } = this.props;\n        const {\n            coinAddress,\n            coinBeneficiaryName,\n            coinDescription,\n        } = this.state;\n\n        // tslint:disable-next-line:no-any\n        let payload: any = {\n            currency: currency || '',\n            name: coinBeneficiaryName,\n            data: JSON.stringify({\n                address: coinAddress,\n            }),\n        };\n\n        if (coinDescription) {\n            payload = {\n                ...payload,\n                description: coinDescription,\n            };\n        }\n\n        this.props.createAddress(payload);\n    }\n\n    private handleSubmitAddAddressFiatModal = () => {\n        const { currency } = this.props;\n        const {\n            fiatName,\n            fiatFullName,\n            fiatAccountNumber,\n            fiatBankName,\n            fiatBankSwiftCode,\n            fiatIntermediaryBankName,\n            fiatIntermediaryBankSwiftCode,\n        } = this.state;\n\n        let data: BeneficiaryBank = {\n            full_name: fiatFullName,\n            account_number: fiatAccountNumber,\n            bank_name: fiatBankName,\n        };\n\n        if (fiatBankSwiftCode) {\n            data = {\n                ...data,\n                bank_swift_code: fiatBankSwiftCode,\n            };\n        }\n\n        if (fiatIntermediaryBankName) {\n            data = {\n                ...data,\n                intermediary_bank_name: fiatIntermediaryBankName,\n            };\n        }\n\n        if (fiatIntermediaryBankSwiftCode) {\n            data = {\n                ...data,\n                intermediary_bank_swift_code: fiatIntermediaryBankSwiftCode,\n            };\n        }\n\n        const payload = {\n            currency: currency || '',\n            name: fiatName,\n            data: JSON.stringify(data),\n        };\n\n        this.props.createAddress(payload);\n    }\n\n    private handleClickToggleAddAddressModal = (clear?: boolean) => () => {\n        this.props.handleToggleAddAddressModal();\n\n        if (clear) {\n            this.handleClearModalsInputs();\n        }\n    }\n\n    private translate = (id: string) => this.props.intl.formatMessage({ id });\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    beneficiariesAddError: selectBeneficiariesCreateError(state),\n    beneficiariesAddSuccess: selectBeneficiariesCreateSuccess(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n    createAddress: payload => dispatch(beneficiariesCreate(payload)),\n});\n\n// tslint:disable-next-line:no-any\nexport const BeneficiariesAddModal = injectIntl(connect(mapStateToProps, mapDispatchToProps)(BeneficiariesAddModalComponent) as any);\n"]},"metadata":{},"sourceType":"module"}