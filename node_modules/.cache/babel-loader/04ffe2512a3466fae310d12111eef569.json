{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(toggle2faSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { toggle2faData, toggle2faError } from '../actions';\nvar enable2faOptions = {\n  apiVersion: 'barong'\n};\nexport function toggle2faSaga(action) {\n  var enable, code;\n  return _regeneratorRuntime.wrap(function toggle2faSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          enable = action.payload.enable;\n          code = {\n            code: action.payload.code\n          };\n          _context.next = 5;\n          return call(API.post(enable2faOptions), \"/resource/otp/\".concat(enable ? 'enable' : 'disable'), code);\n\n        case 5:\n          _context.next = 7;\n          return put(toggle2faData());\n\n        case 7:\n          _context.next = 9;\n          return put(alertPush({\n            message: [\"success.otp.\".concat(enable ? 'enabled' : 'disabled')],\n            type: 'success'\n          }));\n\n        case 9:\n          _context.next = 17;\n          break;\n\n        case 11:\n          _context.prev = 11;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 15;\n          return put(toggle2faError(_context.t0));\n\n        case 15:\n          _context.next = 17;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 11]]);\n}","map":{"version":3,"sources":["/workspaces/temx/src/modules/user/profile/sagas/toggle2faSaga.ts"],"names":["toggle2faSaga","call","put","API","alertPush","toggle2faData","toggle2faError","enable2faOptions","apiVersion","action","enable","payload","code","post","message","type"],"mappings":";;;;yBAciBA,a;;AAdjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SACIC,aADJ,EAEIC,cAFJ,QAIO,YAJP;AAMA,IAAMC,gBAAgC,GAAG;AACrCC,EAAAA,UAAU,EAAE;AADyB,CAAzC;AAIA,OAAO,SAAUR,aAAV,CAAwBS,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEOC,UAAAA,MAFP,GAEgBD,MAAM,CAACE,OAAP,CAAeD,MAF/B;AAGOE,UAAAA,IAHP,GAGc;AAAEA,YAAAA,IAAI,EAAEH,MAAM,CAACE,OAAP,CAAeC;AAAvB,WAHd;AAAA;AAKC,iBAAMX,IAAI,CAACE,GAAG,CAACU,IAAJ,CAASN,gBAAT,CAAD,0BAA8CG,MAAM,GAAG,QAAH,GAAc,SAAlE,GAA+EE,IAA/E,CAAV;;AALD;AAAA;AAMC,iBAAMV,GAAG,CAACG,aAAa,EAAd,CAAT;;AAND;AAAA;AAOC,iBAAMH,GAAG,CAACE,SAAS,CAAC;AAACU,YAAAA,OAAO,EAAE,uBAAgBJ,MAAM,GAAG,SAAH,GAAe,UAArC,EAAV;AAA8DK,YAAAA,IAAI,EAAE;AAApE,WAAD,CAAV,CAAT;;AAPD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AASC,iBAAMb,GAAG,CAACI,cAAc,aAAf,CAAT;;AATD;AAAA;AAUC,iBAAMJ,GAAG,CAACE,SAAS,CAAC;AAACU,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBF,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CG,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AAVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport {\n    toggle2faData,\n    toggle2faError,\n    Toggle2FAFetch,\n} from '../actions';\n\nconst enable2faOptions: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* toggle2faSaga(action: Toggle2FAFetch) {\n    try {\n        const enable = action.payload.enable;\n        const code = { code: action.payload.code};\n\n        yield call(API.post(enable2faOptions), `/resource/otp/${enable ? 'enable' : 'disable'}`, code);\n        yield put(toggle2faData());\n        yield put(alertPush({message: [`success.otp.${enable ? 'enabled' : 'disabled'}`], type: 'success'}));\n    } catch (error) {\n        yield put(toggle2faError(error));\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}