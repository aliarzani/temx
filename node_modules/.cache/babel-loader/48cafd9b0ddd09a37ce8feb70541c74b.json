{"ast":null,"code":"import _classCallCheck from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { walletsFetch as _walletsFetch } from '../../modules/user/wallets';\nvar WALLETS_FETCH_INTERVAL = 3000;\nexport var WalletsFetchComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WalletsFetchComponent, _React$Component);\n\n  function WalletsFetchComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WalletsFetchComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WalletsFetchComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.walletsFetchInterval = void 0;\n    return _this;\n  }\n\n  _createClass(WalletsFetchComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.walletsFetchInterval = setInterval(function () {\n        _this2.props.walletsFetch();\n      }, WALLETS_FETCH_INTERVAL);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.walletsFetchInterval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return WalletsFetchComponent;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    walletsFetch: function walletsFetch() {\n      return dispatch(_walletsFetch());\n    }\n  };\n}; // tslint:disable-next-line no-any\n\n\nexport var WalletsFetch = withRouter(connect(null, mapDispatchToProps)(WalletsFetchComponent));","map":{"version":3,"sources":["/workspaces/temx/src/containers/WalletsFetch/index.tsx"],"names":["React","connect","withRouter","walletsFetch","WALLETS_FETCH_INTERVAL","WalletsFetchComponent","walletsFetchInterval","setInterval","props","clearInterval","Component","mapDispatchToProps","dispatch","WalletsFetch"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,QAA4C,aAA5C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,YAAY,IAAZA,aAAT,QAA6B,4BAA7B;AAEA,IAAMC,sBAAsB,GAAG,IAA/B;AAQA,WAAaC,qBAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UACYC,oBADZ;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAGqC;AAAA;;AAC7B,WAAKA,oBAAL,GAA4BC,WAAW,CAAC,YAAM;AAC1C,QAAA,MAAI,CAACC,KAAL,CAAWL,YAAX;AACH,OAFsC,EAEpCC,sBAFoC,CAAvC;AAGH;AAPL;AAAA;AAAA,2CASwC;AAChCK,MAAAA,aAAa,CAAC,KAAKH,oBAAN,CAAb;AACH;AAXL;AAAA;AAAA,6BAaoB;AACZ,aAAO,IAAP;AACH;AAfL;;AAAA;AAAA,EAA2CN,KAAK,CAACU,SAAjD;;AAkBA,IAAMC,kBAAyD,GAAG,SAA5DA,kBAA4D,CAAAC,QAAQ;AAAA,SAAK;AAC3ET,IAAAA,YAAY,EAAE;AAAA,aAAMS,QAAQ,CAACT,aAAY,EAAb,CAAd;AAAA;AAD6D,GAAL;AAAA,CAA1E,C,CAIA;;;AACA,OAAO,IAAMU,YAAY,GAAGX,UAAU,CAACD,OAAO,CAAC,IAAD,EAAOU,kBAAP,CAAP,CAAkCN,qBAAlC,CAAD,CAA/B","sourcesContent":["import * as React from 'react';\nimport { connect, MapDispatchToProps } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { walletsFetch } from '../../modules/user/wallets';\n\nconst WALLETS_FETCH_INTERVAL = 3000;\n\ninterface DispatchProps {\n    walletsFetch: typeof walletsFetch;\n}\n\nexport type WalletsFetchProps = DispatchProps;\n\nexport class WalletsFetchComponent extends React.Component<WalletsFetchProps> {\n    private walletsFetchInterval;\n\n    public componentDidMount(): void {\n        this.walletsFetchInterval = setInterval(() => {\n            this.props.walletsFetch();\n        }, WALLETS_FETCH_INTERVAL);\n    }\n\n    public componentWillUnmount(): void {\n        clearInterval(this.walletsFetchInterval);\n    }\n\n    public render() {\n        return null;\n    }\n}\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n    walletsFetch: () => dispatch(walletsFetch()),\n});\n\n// tslint:disable-next-line no-any\nexport const WalletsFetch = withRouter(connect(null, mapDispatchToProps)(WalletsFetchComponent) as any);\n"]},"metadata":{},"sourceType":"module"}