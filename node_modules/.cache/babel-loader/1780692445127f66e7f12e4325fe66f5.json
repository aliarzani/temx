{"ast":null,"code":"import _classCallCheck from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/temx/src/screens/History/index.tsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { TabPanel } from '../../components';\nimport { HistoryElement } from '../../containers/HistoryElement';\nimport { setDocumentTitle } from '../../helpers';\nimport { fetchHistory as _fetchHistory, marketsFetch, resetHistory as _resetHistory, walletsFetch } from '../../modules';\n\nvar History =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(History, _React$Component);\n\n  function History() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, History);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(History)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      tab: 'deposits',\n      currentTabIndex: 0\n    };\n    _this.tabMapping = ['deposits', 'withdraws', 'trades'];\n\n    _this.onCurrentTabChange = function (index) {\n      return _this.setState({\n        currentTabIndex: index\n      });\n    };\n\n    _this.handleMakeRequest = function (index) {\n      if (_this.state.tab === _this.tabMapping[index]) {\n        return;\n      }\n\n      _this.props.resetHistory();\n\n      _this.setState({\n        tab: _this.tabMapping[index]\n      });\n    };\n\n    _this.renderTabs = function () {\n      var tab = _this.state.tab;\n      return [{\n        content: tab === 'deposits' ? React.createElement(HistoryElement, {\n          type: \"deposits\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }) : null,\n        label: _this.props.intl.formatMessage({\n          id: 'page.body.history.deposit'\n        })\n      }, {\n        content: tab === 'withdraws' ? React.createElement(HistoryElement, {\n          type: \"withdraws\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }) : null,\n        label: _this.props.intl.formatMessage({\n          id: 'page.body.history.withdraw'\n        })\n      }, {\n        content: tab === 'trades' ? React.createElement(HistoryElement, {\n          type: \"trades\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }) : null,\n        label: _this.props.intl.formatMessage({\n          id: 'page.body.history.trade'\n        })\n      }];\n    };\n\n    return _this;\n  }\n\n  _createClass(History, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      setDocumentTitle('History');\n      this.props.fetchMarkets();\n      this.props.fetchWallets();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.resetHistory();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"pg-history-tab pg-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pg-history-tab__tabs-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(TabPanel, {\n        panels: this.renderTabs(),\n        onTabChange: this.handleMakeRequest,\n        currentTabIndex: this.state.currentTabIndex,\n        onCurrentTabChange: this.onCurrentTabChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return History;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchMarkets: function fetchMarkets() {\n      return dispatch(marketsFetch());\n    },\n    fetchWallets: function fetchWallets() {\n      return dispatch(walletsFetch());\n    },\n    fetchHistory: function fetchHistory(payload) {\n      return dispatch(_fetchHistory(payload));\n    },\n    resetHistory: function resetHistory() {\n      return dispatch(_resetHistory());\n    }\n  };\n};\n\nexport var HistoryScreen = injectIntl(connect(null, mapDispatchToProps)(History));","map":{"version":3,"sources":["/workspaces/temx/src/screens/History/index.tsx"],"names":["React","injectIntl","connect","TabPanel","HistoryElement","setDocumentTitle","fetchHistory","marketsFetch","resetHistory","walletsFetch","History","state","tab","currentTabIndex","tabMapping","onCurrentTabChange","index","setState","handleMakeRequest","props","renderTabs","content","label","intl","formatMessage","id","fetchMarkets","fetchWallets","Component","mapDispatchToProps","dispatch","payload","HistoryScreen"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n    InjectedIntlProps,\n    injectIntl,\n} from 'react-intl';\nimport {\n    connect,\n    MapDispatchToPropsFunction,\n} from 'react-redux';\nimport { TabPanel } from '../../components';\nimport { HistoryElement } from '../../containers/HistoryElement';\nimport { setDocumentTitle } from '../../helpers';\nimport {\n    fetchHistory,\n    marketsFetch,\n    resetHistory,\n    walletsFetch,\n} from '../../modules';\n\ninterface DispatchProps {\n    resetHistory: typeof resetHistory;\n    fetchMarkets: typeof marketsFetch;\n    fetchWallets: typeof walletsFetch;\n    fetchHistory: typeof fetchHistory;\n}\n\ntype Props = DispatchProps & InjectedIntlProps;\n\ninterface State {\n    tab: string;\n    currentTabIndex: number;\n}\n\nclass History extends React.Component<Props, State> {\n    public state = {\n        tab: 'deposits',\n        currentTabIndex: 0,\n    };\n\n    public tabMapping = ['deposits', 'withdraws', 'trades'];\n\n    public componentDidMount() {\n        setDocumentTitle('History');\n        this.props.fetchMarkets();\n        this.props.fetchWallets();\n    }\n\n    public componentWillUnmount() {\n        this.props.resetHistory();\n    }\n\n    public render() {\n        return (\n            <div className=\"pg-history-tab pg-container\">\n                <div className=\"pg-history-tab__tabs-content\">\n                    <TabPanel\n                        panels={this.renderTabs()}\n                        onTabChange={this.handleMakeRequest}\n                        currentTabIndex={this.state.currentTabIndex}\n                        onCurrentTabChange={this.onCurrentTabChange}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    private onCurrentTabChange = index => this.setState({ currentTabIndex: index });\n\n    private handleMakeRequest = (index: number) => {\n        if (this.state.tab === this.tabMapping[index]) {\n            return;\n        }\n        this.props.resetHistory();\n        this.setState({ tab: this.tabMapping[index] });\n    };\n\n    private renderTabs = () => {\n        const { tab } = this.state;\n        return [\n            {\n                content: tab === 'deposits' ? <HistoryElement type=\"deposits\" /> : null,\n                label: this.props.intl.formatMessage({id: 'page.body.history.deposit'}),\n            },\n            {\n                content: tab === 'withdraws' ? <HistoryElement type=\"withdraws\" /> : null,\n                label: this.props.intl.formatMessage({id: 'page.body.history.withdraw'}),\n            },\n            {\n                content: tab === 'trades' ? <HistoryElement type=\"trades\" /> : null,\n                label: this.props.intl.formatMessage({id: 'page.body.history.trade'}),\n            },\n        ];\n    };\n}\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n    fetchMarkets: () => dispatch(marketsFetch()),\n    fetchWallets: () => dispatch(walletsFetch()),\n    fetchHistory: payload => dispatch(fetchHistory(payload)),\n    resetHistory: () => dispatch(resetHistory()),\n});\n\nexport const HistoryScreen = injectIntl(connect(null, mapDispatchToProps)(History));\n"]},"metadata":{},"sourceType":"module"}