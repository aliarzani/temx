{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(apiKeyUpdateSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { apiKeys2FAModal, apiKeyUpdate } from '../actions';\nvar updateOptions = {\n  apiVersion: 'barong'\n};\nexport function apiKeyUpdateSaga(action) {\n  var totp_code, _action$payload$apiKe, kid, state, updatedApiKey;\n\n  return _regeneratorRuntime.wrap(function apiKeyUpdateSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          totp_code = action.payload.totp_code;\n          _action$payload$apiKe = action.payload.apiKey, kid = _action$payload$apiKe.kid, state = _action$payload$apiKe.state;\n          _context.next = 5;\n          return call(API.patch(updateOptions), \"/resource/api_keys/\".concat(kid), {\n            totp_code: totp_code,\n            state: state\n          });\n\n        case 5:\n          updatedApiKey = _context.sent;\n          _context.next = 8;\n          return put(apiKeyUpdate(updatedApiKey));\n\n        case 8:\n          _context.next = 10;\n          return put(alertPush({\n            message: ['success.api_keys.updated'],\n            type: 'success'\n          }));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 16;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 16:\n          _context.prev = 16;\n          _context.next = 19;\n          return put(apiKeys2FAModal({\n            active: false\n          }));\n\n        case 19:\n          return _context.finish(16);\n\n        case 20:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12, 16, 20]]);\n}","map":{"version":3,"sources":["/workspaces/temx/src/modules/user/apiKeys/sagas/apiKeyUpdateSaga.ts"],"names":["apiKeyUpdateSaga","call","put","API","alertPush","apiKeys2FAModal","apiKeyUpdate","updateOptions","apiVersion","action","totp_code","payload","apiKey","kid","state","patch","updatedApiKey","message","type","code","active"],"mappings":";;;;yBAUiBA,gB;;AAVjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,uBAA1B;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAAiE,YAAjE;AAEA,IAAMC,aAA6B,GAAG;AAClCC,EAAAA,UAAU,EAAE;AADsB,CAAtC;AAIA,OAAO,SAAUR,gBAAV,CAA2BS,MAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEQC,UAAAA,SAFR,GAEqBD,MAAM,CAACE,OAF5B,CAEQD,SAFR;AAAA,kCAGsBD,MAAM,CAACE,OAAP,CAAeC,MAHrC,EAGQC,GAHR,yBAGQA,GAHR,EAGaC,KAHb,yBAGaA,KAHb;AAAA;AAIuB,iBAAMb,IAAI,CAACE,GAAG,CAACY,KAAJ,CAAUR,aAAV,CAAD,+BAAiDM,GAAjD,GAAwD;AAACH,YAAAA,SAAS,EAATA,SAAD;AAAYI,YAAAA,KAAK,EAALA;AAAZ,WAAxD,CAAV;;AAJvB;AAIOE,UAAAA,aAJP;AAAA;AAKC,iBAAMd,GAAG,CAACI,YAAY,CAACU,aAAD,CAAb,CAAT;;AALD;AAAA;AAMC,iBAAMd,GAAG,CAACE,SAAS,CAAC;AAACa,YAAAA,OAAO,EAAE,CAAC,0BAAD,CAAV;AAAwCC,YAAAA,IAAI,EAAE;AAA9C,WAAD,CAAV,CAAT;;AAND;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAQC,iBAAMhB,GAAG,CAACE,SAAS,CAAC;AAACa,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBE,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CD,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AARD;AAAA;AAAA;AAUC,iBAAMhB,GAAG,CAACG,eAAe,CAAC;AAACe,YAAAA,MAAM,EAAE;AAAT,WAAD,CAAhB,CAAT;;AAVD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../public/alert';\nimport { apiKeys2FAModal, apiKeyUpdate, ApiKeyUpdateFetch } from '../actions';\n\nconst updateOptions: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* apiKeyUpdateSaga(action: ApiKeyUpdateFetch) {\n    try {\n        const {totp_code} = action.payload;\n        const {kid, state} = action.payload.apiKey;\n        const updatedApiKey = yield call(API.patch(updateOptions), `/resource/api_keys/${kid}`, {totp_code, state});\n        yield put(apiKeyUpdate(updatedApiKey));\n        yield put(alertPush({message: ['success.api_keys.updated'], type: 'success'}));\n    } catch (error) {\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    } finally {\n        yield put(apiKeys2FAModal({active: false}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}