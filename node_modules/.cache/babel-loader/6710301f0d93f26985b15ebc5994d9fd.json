{"ast":null,"code":"import _toConsumableArray from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { marketStreams } from './actions';\nexport var generateSocketURI = function generateSocketURI(baseUrl, s) {\n  return \"\".concat(baseUrl, \"/?stream=\").concat(s.sort().join('&stream='));\n};\nexport var formatTicker = function formatTicker(events) {\n  var tickers = {};\n\n  for (var market in events) {\n    if (events.hasOwnProperty(market)) {\n      var event = events[market];\n      var open = event.open,\n          low = event.low,\n          high = event.high,\n          last = event.last,\n          volume = event.volume,\n          sell = event.sell,\n          buy = event.buy,\n          avg_price = event.avg_price,\n          price_change_percent = event.price_change_percent;\n      tickers[market] = {\n        open: open,\n        low: low,\n        high: high,\n        last: last,\n        sell: sell,\n        buy: buy,\n        vol: volume,\n        avg_price: avg_price,\n        price_change_percent: price_change_percent\n      };\n    }\n  }\n\n  return tickers;\n};\nexport var streamsBuilder = function streamsBuilder(withAuth, prevSubscriptions, market) {\n  var streams = ['global.tickers'];\n\n  if (withAuth) {\n    streams = [].concat(_toConsumableArray(streams), ['order', 'trade']);\n  }\n\n  if (market) {\n    streams = [].concat(_toConsumableArray(streams), _toConsumableArray(marketStreams(market).channels));\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = prevSubscriptions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var stream = _step.value;\n\n      if (streams.indexOf(stream) < 0) {\n        streams.push(stream);\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return streams;\n};\nexport var periodsMapNumber = {\n  '1m': 1,\n  '5m': 5,\n  '15m': 15,\n  '30m': 30,\n  '1h': 60,\n  '2h': 120,\n  '4h': 240,\n  '6h': 360,\n  '12h': 720,\n  '1d': 1440,\n  '3d': 4320,\n  '1w': 10080\n};\nexport var periodsMapString = {\n  1: '1m',\n  5: '5m',\n  15: '15m',\n  30: '30m',\n  60: '1h',\n  120: '2h',\n  240: '4h',\n  360: '6h',\n  720: '12h',\n  1440: '1d',\n  4320: '3d',\n  10080: '1w'\n};\nexport var periodStringToMinutes = function periodStringToMinutes(period) {\n  return periodsMapNumber[period];\n};\nexport var periodMinutesToString = function periodMinutesToString(period) {\n  return periodsMapString[period];\n};\nexport var marketKlineStreams = function marketKlineStreams(marketId, periodString) {\n  return {\n    channels: [\"\".concat(marketId, \".kline-\").concat(periodString)]\n  };\n};","map":{"version":3,"sources":["/workspaces/temx/src/modules/public/ranger/helpers.ts"],"names":["marketStreams","generateSocketURI","baseUrl","s","sort","join","formatTicker","events","tickers","market","hasOwnProperty","event","open","low","high","last","volume","sell","buy","avg_price","price_change_percent","vol","streamsBuilder","withAuth","prevSubscriptions","streams","channels","stream","indexOf","push","periodsMapNumber","periodsMapString","periodStringToMinutes","period","periodMinutesToString","marketKlineStreams","marketId","periodString"],"mappings":"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","sourcesContent":["import { Market, Ticker, TickerEvent } from '../markets';\nimport { marketStreams } from './actions';\n\nexport const generateSocketURI = (baseUrl: string, s: string[]) => `${baseUrl}/?stream=${s.sort().join('&stream=')}`;\n\nexport const formatTicker = (events: { [pair: string]: TickerEvent }): { [pair: string]: Ticker } => {\n    const tickers = {};\n    for (const market in events) {\n        if (events.hasOwnProperty(market)) {\n            const event: TickerEvent = events[market];\n            const { open, low, high, last, volume, sell, buy, avg_price, price_change_percent } = event;\n            tickers[market] = { open, low, high, last, sell, buy, vol: volume, avg_price, price_change_percent };\n        }\n    }\n    return tickers;\n};\n\nexport const streamsBuilder = (withAuth: boolean, prevSubscriptions: string[], market: Market | undefined) => {\n    let streams: string[] = ['global.tickers'];\n\n    if (withAuth) {\n        streams = [\n            ...streams,\n            'order',\n            'trade',\n        ];\n    }\n    if (market) {\n        streams = [\n            ...streams,\n            ...(marketStreams(market).channels),\n        ];\n    }\n    for (const stream of prevSubscriptions) {\n        if (streams.indexOf(stream) < 0) {\n            streams.push(stream);\n        }\n    }\n    return streams;\n};\n\nexport const periodsMapNumber: { [pair: string]: number } = {\n    '1m': 1,\n    '5m': 5,\n    '15m': 15,\n    '30m': 30,\n    '1h': 60,\n    '2h': 120,\n    '4h': 240,\n    '6h': 360,\n    '12h': 720,\n    '1d': 1440,\n    '3d': 4320,\n    '1w': 10080,\n};\n\nexport const periodsMapString: { [pair: number]: string } = {\n    1: '1m',\n    5: '5m',\n    15: '15m',\n    30: '30m',\n    60: '1h',\n    120: '2h',\n    240: '4h',\n    360: '6h',\n    720: '12h',\n    1440: '1d',\n    4320: '3d',\n    10080: '1w',\n};\n\nexport const periodStringToMinutes = (period: string): number => periodsMapNumber[period];\nexport const periodMinutesToString = (period: number): string => periodsMapString[period];\n\nexport const marketKlineStreams = (marketId: string, periodString: string) => ({\n    channels: [\n        `${marketId}.kline-${periodString}`,\n    ],\n});\n"]},"metadata":{},"sourceType":"module"}