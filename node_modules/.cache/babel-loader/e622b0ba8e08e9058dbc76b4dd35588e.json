{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(resendCodeSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../../api';\nimport { alertPush } from '../../../../public/alert';\nimport { resendCodeData, resendCodeError } from '../actions';\nvar sessionsConfig = {\n  apiVersion: 'barong'\n};\nexport function resendCodeSaga(action) {\n  return _regeneratorRuntime.wrap(function resendCodeSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.post(sessionsConfig), '/resource/phones/send_code', action.payload);\n\n        case 3:\n          _context.next = 5;\n          return put(resendCodeData());\n\n        case 5:\n          _context.next = 7;\n          return put(alertPush({\n            message: ['success.phone.verification.send'],\n            type: 'success'\n          }));\n\n        case 7:\n          _context.next = 15;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 13;\n          return put(resendCodeError(_context.t0));\n\n        case 13:\n          _context.next = 15;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 15:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/modules/user/kyc/phone/sagas/resendCodeSaga.ts"],"names":["resendCodeSaga","call","put","API","alertPush","resendCodeData","resendCodeError","sessionsConfig","apiVersion","action","post","payload","message","type","code"],"mappings":";;;;yBAUiBA,c;;AAVjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,oBAApC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,cAAT,EAAyBC,eAAzB,QAAiE,YAAjE;AAEA,IAAMC,cAA8B,GAAG;AACnCC,EAAAA,UAAU,EAAE;AADuB,CAAvC;AAIA,OAAO,SAAUR,cAAV,CAAyBS,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,iBAAMR,IAAI,CAACE,GAAG,CAACO,IAAJ,CAASH,cAAT,CAAD,EAA2B,4BAA3B,EAAyDE,MAAM,CAACE,OAAhE,CAAV;;AAFD;AAAA;AAGC,iBAAMT,GAAG,CAACG,cAAc,EAAf,CAAT;;AAHD;AAAA;AAIC,iBAAMH,GAAG,CAACE,SAAS,CAAC;AAAEQ,YAAAA,OAAO,EAAE,CAAC,iCAAD,CAAX;AAAgDC,YAAAA,IAAI,EAAE;AAAtD,WAAD,CAAV,CAAT;;AAJD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAMC,iBAAMX,GAAG,CAACI,eAAe,aAAhB,CAAT;;AAND;AAAA;AAOC,iBAAMJ,GAAG,CAACE,SAAS,CAAC;AAACQ,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBE,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CD,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../../api';\nimport { alertPush } from '../../../../public/alert';\nimport { resendCodeData, resendCodeError, ResendCodeFetch } from '../actions';\n\nconst sessionsConfig: RequestOptions = {\n    apiVersion: 'barong',\n};\n\nexport function* resendCodeSaga(action: ResendCodeFetch) {\n    try {\n        yield call(API.post(sessionsConfig), '/resource/phones/send_code', action.payload);\n        yield put(resendCodeData());\n        yield put(alertPush({ message: ['success.phone.verification.send'], type: 'success'}));\n    } catch (error) {\n        yield put(resendCodeError(error));\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}