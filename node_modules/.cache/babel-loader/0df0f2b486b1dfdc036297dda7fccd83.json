{"ast":null,"code":"export var getTotalPrice = function getTotalPrice(amount, proposals) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = proposals[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var p = _step.value;\n\n      if (p.length < 2) {\n        return 0;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  var sum = Number(amount);\n  var list = proposals;\n  var total = 0;\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var proposal = _step2.value;\n\n      if (!sum) {\n        break;\n      }\n\n      if (sum <= Number(proposal[1])) {\n        total += sum * Number(proposal[0]);\n        sum = 0;\n      } else {\n        total += Number(proposal[1]) * Number(proposal[0]);\n        sum -= Number(proposal[1]);\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  if (sum > 0 && list.length >= 1) {\n    // sum is bigger then order book liqudity\n    var lastPrice = Number(list[list.length - 1][0]);\n    total += lastPrice * sum;\n  }\n\n  return total;\n};\nexport var getAmount = function getAmount(avaiblePrice, proposals, value) {\n  var sum = avaiblePrice * value;\n  var list = proposals;\n  var totalAmount = 0;\n  var _iteratorNormalCompletion3 = true;\n  var _didIteratorError3 = false;\n  var _iteratorError3 = undefined;\n\n  try {\n    for (var _iterator3 = list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n      var proposal = _step3.value;\n\n      if (!sum) {\n        break;\n      }\n\n      if (sum <= Number(proposal[0]) * Number(proposal[1])) {\n        totalAmount += sum / Number(proposal[0]);\n        sum = 0;\n      } else {\n        totalAmount += Number(proposal[1]);\n        sum -= Number(proposal[0]) * Number(proposal[1]);\n      }\n    }\n  } catch (err) {\n    _didIteratorError3 = true;\n    _iteratorError3 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n        _iterator3.return();\n      }\n    } finally {\n      if (_didIteratorError3) {\n        throw _iteratorError3;\n      }\n    }\n  }\n\n  return totalAmount;\n};","map":{"version":3,"sources":["/workspaces/temx/src/helpers/getTotalPrice.ts"],"names":["getTotalPrice","amount","proposals","p","length","sum","Number","list","total","proposal","lastPrice","getAmount","avaiblePrice","value","totalAmount"],"mappings":"AAAA,OAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,MAAD,EAAiBC,SAAjB,EAA2C;AAAA;AAAA;AAAA;;AAAA;AACpE,yBAAgBA,SAAhB,8HAA2B;AAAA,UAAhBC,CAAgB;;AACvB,UAAIA,CAAC,CAACC,MAAF,GAAW,CAAf,EAAkB;AACd,eAAO,CAAP;AACH;AACJ;AALmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOpE,MAAIC,GAAG,GAAGC,MAAM,CAACL,MAAD,CAAhB;AAEA,MAAMM,IAAI,GAAGL,SAAb;AACA,MAAIM,KAAK,GAAG,CAAZ;AAVoE;AAAA;AAAA;;AAAA;AAYpE,0BAAuBD,IAAvB,mIAA6B;AAAA,UAAlBE,QAAkB;;AACzB,UAAI,CAACJ,GAAL,EAAU;AACN;AACH;;AAED,UAAIA,GAAG,IAAIC,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CAAjB,EAAgC;AAC5BD,QAAAA,KAAK,IAAIH,GAAG,GAAGC,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CAArB;AACAJ,QAAAA,GAAG,GAAG,CAAN;AACH,OAHD,MAGO;AACHG,QAAAA,KAAK,IAAIF,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CAAN,GAAsBH,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CAArC;AACAJ,QAAAA,GAAG,IAAIC,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CAAb;AACH;AACJ;AAxBmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA0BpE,MAAIJ,GAAG,GAAG,CAAN,IAAWE,IAAI,CAACH,MAAL,IAAe,CAA9B,EAAiC;AAAE;AAC/B,QAAMM,SAAS,GAAGJ,MAAM,CAACC,IAAI,CAACA,IAAI,CAACH,MAAL,GAAc,CAAf,CAAJ,CAAsB,CAAtB,CAAD,CAAxB;AACAI,IAAAA,KAAK,IAAIE,SAAS,GAAGL,GAArB;AACH;;AAED,SAAOG,KAAP;AACH,CAhCM;AAkCP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD,EAAuBV,SAAvB,EAA8CW,KAA9C,EAAgE;AACrF,MAAIR,GAAG,GAAGO,YAAY,GAAGC,KAAzB;AAEA,MAAMN,IAAI,GAAGL,SAAb;AACA,MAAIY,WAAW,GAAG,CAAlB;AAJqF;AAAA;AAAA;;AAAA;AAMrF,0BAAuBP,IAAvB,mIAA6B;AAAA,UAAlBE,QAAkB;;AACzB,UAAI,CAACJ,GAAL,EAAU;AACN;AACH;;AAED,UAAIA,GAAG,IAAKC,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CAAN,GAAsBH,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CAAxC,EAAwD;AACpDK,QAAAA,WAAW,IAAIT,GAAG,GAAGC,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CAA3B;AACAJ,QAAAA,GAAG,GAAG,CAAN;AACH,OAHD,MAGO;AACHS,QAAAA,WAAW,IAAIR,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CAArB;AACAJ,QAAAA,GAAG,IAAKC,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CAAN,GAAsBH,MAAM,CAACG,QAAQ,CAAC,CAAD,CAAT,CAApC;AACH;AACJ;AAlBoF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBrF,SAAOK,WAAP;AACH,CArBM","sourcesContent":["export const getTotalPrice = (amount: string, proposals: string[][]) => {\n    for (const p of proposals) {\n        if (p.length < 2) {\n            return 0;\n        }\n    }\n\n    let sum = Number(amount);\n\n    const list = proposals;\n    let total = 0;\n\n    for (const proposal of list) {\n        if (!sum) {\n            break;\n        }\n\n        if (sum <= Number(proposal[1])) {\n            total += sum * Number(proposal[0]);\n            sum = 0;\n        } else {\n            total += Number(proposal[1]) * Number(proposal[0]);\n            sum -= Number(proposal[1]);\n        }\n    }\n\n    if (sum > 0 && list.length >= 1) { // sum is bigger then order book liqudity\n        const lastPrice = Number(list[list.length - 1][0]);\n        total += lastPrice * sum;\n    }\n\n    return total;\n};\n\nexport const getAmount = (avaiblePrice: number, proposals: string[][], value: number) => {\n    let sum = avaiblePrice * value;\n\n    const list = proposals;\n    let totalAmount = 0;\n\n    for (const proposal of list) {\n        if (!sum) {\n            break;\n        }\n\n        if (sum <= (Number(proposal[0]) * Number(proposal[1]))) {\n            totalAmount += sum / Number(proposal[0]);\n            sum = 0;\n        } else {\n            totalAmount += Number(proposal[1]);\n            sum -= (Number(proposal[0]) * Number(proposal[1]));\n        }\n    }\n\n    return totalAmount;\n};\n"]},"metadata":{},"sourceType":"module"}