{"ast":null,"code":"import _classCallCheck from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/codespaces-blank/baseapp-master/src/components/Order/index.tsx\";\nimport { TabPanel } from '@openware/components';\nimport * as React from 'react';\nimport { OrderForm } from '../';\nvar defaultOrderTypes = ['Limit', 'Market'];\nvar splitBorder = 449;\nvar defaultWidth = 635;\n\nvar Order =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(Order, _React$PureComponent);\n\n  function Order() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Order)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.getPanels = function () {\n      var _this$props = _this.props,\n          availableBase = _this$props.availableBase,\n          availableQuote = _this$props.availableQuote,\n          disabled = _this$props.disabled,\n          priceMarketBuy = _this$props.priceMarketBuy,\n          priceMarketSell = _this$props.priceMarketSell,\n          priceLimit = _this$props.priceLimit,\n          from = _this$props.from,\n          to = _this$props.to,\n          currentMarketAskPrecision = _this$props.currentMarketAskPrecision,\n          currentMarketBidPrecision = _this$props.currentMarketBidPrecision,\n          orderTypeText = _this$props.orderTypeText,\n          priceText = _this$props.priceText,\n          amountText = _this$props.amountText,\n          totalText = _this$props.totalText,\n          availableText = _this$props.availableText,\n          submitBuyButtonText = _this$props.submitBuyButtonText,\n          submitSellButtonText = _this$props.submitSellButtonText,\n          labelFirst = _this$props.labelFirst,\n          labelSecond = _this$props.labelSecond,\n          orderTypes = _this$props.orderTypes,\n          orderTypesIndex = _this$props.orderTypesIndex,\n          asks = _this$props.asks,\n          bids = _this$props.bids,\n          listenInputPrice = _this$props.listenInputPrice;\n      return [{\n        content: React.createElement(OrderForm, {\n          proposals: asks,\n          disabled: disabled,\n          type: \"buy\",\n          from: from,\n          to: to,\n          available: availableQuote,\n          priceMarket: priceMarketBuy,\n          priceLimit: priceLimit,\n          onSubmit: _this.props.onSubmit,\n          orderTypes: orderTypes ? orderTypes : defaultOrderTypes,\n          orderTypesIndex: orderTypesIndex ? orderTypesIndex : defaultOrderTypes,\n          currentMarketAskPrecision: currentMarketAskPrecision,\n          currentMarketBidPrecision: currentMarketBidPrecision,\n          orderTypeText: orderTypeText,\n          priceText: priceText,\n          amountText: amountText,\n          totalText: totalText,\n          availableText: availableText,\n          submitButtonText: submitBuyButtonText,\n          listenInputPrice: listenInputPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }),\n        label: labelFirst ? labelFirst : 'Buy'\n      }, {\n        content: React.createElement(OrderForm, {\n          proposals: bids,\n          type: \"sell\",\n          from: from,\n          to: to,\n          available: availableBase,\n          priceMarket: priceMarketSell,\n          priceLimit: priceLimit,\n          onSubmit: _this.props.onSubmit,\n          orderTypes: orderTypes ? orderTypes : defaultOrderTypes,\n          orderTypesIndex: orderTypesIndex ? orderTypesIndex : defaultOrderTypes,\n          currentMarketAskPrecision: currentMarketAskPrecision,\n          currentMarketBidPrecision: currentMarketBidPrecision,\n          orderTypeText: orderTypeText,\n          priceText: priceText,\n          amountText: amountText,\n          totalText: totalText,\n          availableText: availableText,\n          submitButtonText: submitSellButtonText,\n          listenInputPrice: listenInputPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }),\n        label: labelSecond ? labelSecond : 'Sell'\n      }];\n    };\n\n    _this.getPanelsBuy = function () {\n      var _this$props2 = _this.props,\n          availableQuote = _this$props2.availableQuote,\n          disabled = _this$props2.disabled,\n          priceMarketBuy = _this$props2.priceMarketBuy,\n          priceLimit = _this$props2.priceLimit,\n          from = _this$props2.from,\n          to = _this$props2.to,\n          currentMarketAskPrecision = _this$props2.currentMarketAskPrecision,\n          currentMarketBidPrecision = _this$props2.currentMarketBidPrecision,\n          orderTypeText = _this$props2.orderTypeText,\n          priceText = _this$props2.priceText,\n          amountText = _this$props2.amountText,\n          totalText = _this$props2.totalText,\n          availableText = _this$props2.availableText,\n          submitBuyButtonText = _this$props2.submitBuyButtonText,\n          labelFirst = _this$props2.labelFirst,\n          orderTypes = _this$props2.orderTypes,\n          orderTypesIndex = _this$props2.orderTypesIndex,\n          asks = _this$props2.asks,\n          listenInputPrice = _this$props2.listenInputPrice;\n      return [{\n        content: React.createElement(OrderForm, {\n          proposals: asks,\n          disabled: disabled,\n          type: \"buy\",\n          from: from,\n          to: to,\n          available: availableQuote,\n          priceMarket: priceMarketBuy,\n          priceLimit: priceLimit,\n          onSubmit: _this.props.onSubmit,\n          orderTypes: orderTypes ? orderTypes : defaultOrderTypes,\n          orderTypesIndex: orderTypesIndex ? orderTypesIndex : defaultOrderTypes,\n          currentMarketAskPrecision: currentMarketAskPrecision,\n          currentMarketBidPrecision: currentMarketBidPrecision,\n          orderTypeText: orderTypeText,\n          priceText: priceText,\n          amountText: amountText,\n          totalText: totalText,\n          availableText: availableText,\n          submitButtonText: submitBuyButtonText,\n          listenInputPrice: listenInputPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          },\n          __self: this\n        }),\n        label: labelFirst ? labelFirst : 'Buy'\n      }];\n    };\n\n    _this.getPanelsSell = function () {\n      var _this$props3 = _this.props,\n          availableBase = _this$props3.availableBase,\n          priceMarketSell = _this$props3.priceMarketSell,\n          priceLimit = _this$props3.priceLimit,\n          from = _this$props3.from,\n          to = _this$props3.to,\n          currentMarketAskPrecision = _this$props3.currentMarketAskPrecision,\n          currentMarketBidPrecision = _this$props3.currentMarketBidPrecision,\n          orderTypeText = _this$props3.orderTypeText,\n          priceText = _this$props3.priceText,\n          amountText = _this$props3.amountText,\n          totalText = _this$props3.totalText,\n          availableText = _this$props3.availableText,\n          submitSellButtonText = _this$props3.submitSellButtonText,\n          labelSecond = _this$props3.labelSecond,\n          orderTypes = _this$props3.orderTypes,\n          orderTypesIndex = _this$props3.orderTypesIndex,\n          bids = _this$props3.bids,\n          listenInputPrice = _this$props3.listenInputPrice;\n      return [{\n        content: React.createElement(OrderForm, {\n          proposals: bids,\n          type: \"sell\",\n          from: from,\n          to: to,\n          available: availableBase,\n          priceMarket: priceMarketSell,\n          priceLimit: priceLimit,\n          onSubmit: _this.props.onSubmit,\n          orderTypes: orderTypes ? orderTypes : defaultOrderTypes,\n          orderTypesIndex: orderTypesIndex ? orderTypesIndex : defaultOrderTypes,\n          currentMarketAskPrecision: currentMarketAskPrecision,\n          currentMarketBidPrecision: currentMarketBidPrecision,\n          orderTypeText: orderTypeText,\n          priceText: priceText,\n          amountText: amountText,\n          totalText: totalText,\n          availableText: availableText,\n          submitButtonText: submitSellButtonText,\n          listenInputPrice: listenInputPrice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }),\n        label: labelSecond ? labelSecond : 'Sell'\n      }];\n    };\n\n    _this.handleChangeTab = function (index, label) {\n      if (_this.props.handleSendType && label) {\n        _this.props.handleSendType(index, label);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props$width = this.props.width,\n          width = _this$props$width === void 0 ? defaultWidth : _this$props$width;\n\n      if (width < splitBorder) {\n        return React.createElement(\"div\", {\n          className: \"cr-order\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(TabPanel, {\n          fixed: true,\n          panels: this.getPanels(),\n          onTabChange: this.handleChangeTab,\n          tabIndex: this.props.tabIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"cr-order cr-order--extended\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"cr-order--extended__buy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(TabPanel, {\n        fixed: true,\n        panels: this.getPanelsBuy(),\n        onTabChange: this.handleChangeTab,\n        tabIndex: this.props.tabIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"cr-order--extended__sell\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(TabPanel, {\n        fixed: true,\n        panels: this.getPanelsSell(),\n        onTabChange: this.handleChangeTab,\n        tabIndex: this.props.tabIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Order;\n}(React.PureComponent);\n\nexport { Order };","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/components/Order/index.tsx"],"names":["TabPanel","React","OrderForm","defaultOrderTypes","splitBorder","defaultWidth","Order","getPanels","props","availableBase","availableQuote","disabled","priceMarketBuy","priceMarketSell","priceLimit","from","to","currentMarketAskPrecision","currentMarketBidPrecision","orderTypeText","priceText","amountText","totalText","availableText","submitBuyButtonText","submitSellButtonText","labelFirst","labelSecond","orderTypes","orderTypesIndex","asks","bids","listenInputPrice","content","onSubmit","label","getPanelsBuy","getPanelsSell","handleChangeTab","index","handleSendType","width","tabIndex","PureComponent"],"mappings":"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","sourcesContent":["import { TabPanel } from '@openware/components';\nimport * as React from 'react';\nimport { OrderForm } from '../';\n\nexport type FormType = 'buy' | 'sell';\n\nexport type DropdownElem = number | string | React.ReactNode;\n\nexport interface OrderProps {\n    type: FormType;\n    orderType: string | React.ReactNode;\n    price: number | string;\n    amount: number | string;\n    available: number;\n}\n\nexport type OnSubmitCallback = (order: OrderProps) => void;\n\nexport interface OrderComponentProps {\n    /**\n     * Amount of money in base currency wallet\n     */\n    availableBase: number;\n    /**\n     * Amount of money in quote currency wallet\n     */\n    availableQuote: number;\n    /**\n     * Callback which is called when a form is submitted\n     */\n    onSubmit: OnSubmitCallback;\n    /**\n     * If orderType is 'Market' this value will be used as price for buy tab\n     */\n    priceMarketBuy: number;\n    /**\n     * If orderType is 'Market' this value will be used as price for sell tab\n     */\n    priceMarketSell: number;\n    /**\n     * If orderType is 'Limit' this value will be used as price\n     */\n    priceLimit?: number;\n    /**\n     * Name of currency for price field\n     */\n    from: string;\n    /**\n     * Name of currency for amount field\n     */\n    to: string;\n    /**\n     * Whether order is disabled to execute\n     */\n    disabled?: boolean;\n    handleSendType?: (index: number, label: string) => void;\n    /**\n     * Index of tab to switch on\n     */\n    tabIndex?: number;\n    /**\n     * Precision of amount, total, available, fee value\n     */\n    currentMarketAskPrecision: number;\n    /**\n     * Precision of price value\n     */\n    currentMarketBidPrecision: number;\n    /**\n     * @default 'Order Type'\n     * Text for order type dropdown label.\n     */\n    orderTypeText?: string;\n    /**\n     * @default 'Price'\n     * Text for Price field Text.\n     */\n    priceText?: string;\n    /**\n     * @default 'Amount'\n     * Text for Amount field Text.\n     */\n    amountText?: string;\n    /**\n     * @default 'Total'\n     * Text for Total field Text.\n     */\n    totalText?: string;\n    /**\n     * @default 'Available'\n     * Text for Available field Text.\n     */\n    availableText?: string;\n    /**\n     * @default 'BUY'\n     * Text for buy order submit button.\n     */\n    submitBuyButtonText?: string;\n    /**\n     * @default 'SELL'\n     * Text for sell order submit button.\n     */\n    submitSellButtonText?: string;\n    /**\n     * @default 'Buy'\n     * Text for Buy tab label.\n     */\n    labelFirst?: string;\n    /**\n     * @default 'Sell'\n     * Text for Sell tab label.\n     */\n    labelSecond?: string;\n    orderTypes?: DropdownElem[];\n    orderTypesIndex?: DropdownElem[];\n    /**\n     *\n     */\n    width?: number;\n    /**\n     * proposals for buy\n     */\n    bids: string[][];\n    /**\n     * proposals for sell\n     */\n    asks: string[][];\n    /**\n     * start handling change price\n     */\n    listenInputPrice?: () => void;\n}\n\nconst defaultOrderTypes: DropdownElem[] = [\n    'Limit',\n    'Market',\n];\n\nconst splitBorder = 449;\nconst defaultWidth = 635;\n\nclass Order extends React.PureComponent<OrderComponentProps> {\n    public render() {\n        const {\n            width = defaultWidth,\n        } = this.props;\n\n        if (width < splitBorder) {\n            return (\n                <div className=\"cr-order\">\n                    <TabPanel\n                        fixed={true}\n                        panels={this.getPanels()}\n                        onTabChange={this.handleChangeTab}\n                        tabIndex={this.props.tabIndex}\n                    />\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"cr-order cr-order--extended\">\n                <div className=\"cr-order--extended__buy\">\n                    <TabPanel\n                        fixed={true}\n                        panels={this.getPanelsBuy()}\n                        onTabChange={this.handleChangeTab}\n                        tabIndex={this.props.tabIndex}\n                    />\n                </div>\n                <div className=\"cr-order--extended__sell\">\n                    <TabPanel\n                        fixed={true}\n                        panels={this.getPanelsSell()}\n                        onTabChange={this.handleChangeTab}\n                        tabIndex={this.props.tabIndex}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    private getPanels = () => {\n        const {\n            availableBase,\n            availableQuote,\n            disabled,\n            priceMarketBuy,\n            priceMarketSell,\n            priceLimit,\n            from,\n            to,\n            currentMarketAskPrecision,\n            currentMarketBidPrecision,\n            orderTypeText,\n            priceText,\n            amountText,\n            totalText,\n            availableText,\n            submitBuyButtonText,\n            submitSellButtonText,\n            labelFirst,\n            labelSecond,\n            orderTypes,\n            orderTypesIndex,\n            asks,\n            bids,\n            listenInputPrice,\n        } = this.props;\n        return [\n            {\n                content: (\n                    <OrderForm\n                        proposals={asks}\n                        disabled={disabled}\n                        type=\"buy\"\n                        from={from}\n                        to={to}\n                        available={availableQuote}\n                        priceMarket={priceMarketBuy}\n                        priceLimit={priceLimit}\n                        onSubmit={this.props.onSubmit}\n                        orderTypes={orderTypes ? orderTypes : defaultOrderTypes}\n                        orderTypesIndex={orderTypesIndex ? orderTypesIndex : defaultOrderTypes}\n                        currentMarketAskPrecision={currentMarketAskPrecision}\n                        currentMarketBidPrecision={currentMarketBidPrecision}\n                        orderTypeText={orderTypeText}\n                        priceText={priceText}\n                        amountText={amountText}\n                        totalText={totalText}\n                        availableText={availableText}\n                        submitButtonText={submitBuyButtonText}\n                        listenInputPrice={listenInputPrice}\n                    />\n                ),\n                label: labelFirst ? labelFirst : 'Buy',\n            },\n            {\n                content: (\n                    <OrderForm\n                        proposals={bids}\n                        type=\"sell\"\n                        from={from}\n                        to={to}\n                        available={availableBase}\n                        priceMarket={priceMarketSell}\n                        priceLimit={priceLimit}\n                        onSubmit={this.props.onSubmit}\n                        orderTypes={orderTypes ? orderTypes : defaultOrderTypes}\n                        orderTypesIndex={orderTypesIndex ? orderTypesIndex : defaultOrderTypes}\n                        currentMarketAskPrecision={currentMarketAskPrecision}\n                        currentMarketBidPrecision={currentMarketBidPrecision}\n                        orderTypeText={orderTypeText}\n                        priceText={priceText}\n                        amountText={amountText}\n                        totalText={totalText}\n                        availableText={availableText}\n                        submitButtonText={submitSellButtonText}\n                        listenInputPrice={listenInputPrice}\n                    />\n                ),\n                label: labelSecond ? labelSecond : 'Sell',\n            },\n        ];\n    };\n\n    private getPanelsBuy = () => {\n        const {\n            availableQuote,\n            disabled,\n            priceMarketBuy,\n            priceLimit,\n            from,\n            to,\n            currentMarketAskPrecision,\n            currentMarketBidPrecision,\n            orderTypeText,\n            priceText,\n            amountText,\n            totalText,\n            availableText,\n            submitBuyButtonText,\n            labelFirst,\n            orderTypes,\n            orderTypesIndex,\n            asks,\n            listenInputPrice,\n        } = this.props;\n        return [\n            {\n                content: (\n                    <OrderForm\n                        proposals={asks}\n                        disabled={disabled}\n                        type=\"buy\"\n                        from={from}\n                        to={to}\n                        available={availableQuote}\n                        priceMarket={priceMarketBuy}\n                        priceLimit={priceLimit}\n                        onSubmit={this.props.onSubmit}\n                        orderTypes={orderTypes ? orderTypes : defaultOrderTypes}\n                        orderTypesIndex={orderTypesIndex ? orderTypesIndex : defaultOrderTypes}\n                        currentMarketAskPrecision={currentMarketAskPrecision}\n                        currentMarketBidPrecision={currentMarketBidPrecision}\n                        orderTypeText={orderTypeText}\n                        priceText={priceText}\n                        amountText={amountText}\n                        totalText={totalText}\n                        availableText={availableText}\n                        submitButtonText={submitBuyButtonText}\n                        listenInputPrice={listenInputPrice}\n                    />\n                ),\n                label: labelFirst ? labelFirst : 'Buy',\n            },\n        ];\n    };\n\n    private getPanelsSell = () => {\n        const {\n            availableBase,\n            priceMarketSell,\n            priceLimit,\n            from,\n            to,\n            currentMarketAskPrecision,\n            currentMarketBidPrecision,\n            orderTypeText,\n            priceText,\n            amountText,\n            totalText,\n            availableText,\n            submitSellButtonText,\n            labelSecond,\n            orderTypes,\n            orderTypesIndex,\n            bids,\n            listenInputPrice,\n        } = this.props;\n        return [\n            {\n                content: (\n                    <OrderForm\n                        proposals={bids}\n                        type=\"sell\"\n                        from={from}\n                        to={to}\n                        available={availableBase}\n                        priceMarket={priceMarketSell}\n                        priceLimit={priceLimit}\n                        onSubmit={this.props.onSubmit}\n                        orderTypes={orderTypes ? orderTypes : defaultOrderTypes}\n                        orderTypesIndex={orderTypesIndex ? orderTypesIndex : defaultOrderTypes}\n                        currentMarketAskPrecision={currentMarketAskPrecision}\n                        currentMarketBidPrecision={currentMarketBidPrecision}\n                        orderTypeText={orderTypeText}\n                        priceText={priceText}\n                        amountText={amountText}\n                        totalText={totalText}\n                        availableText={availableText}\n                        submitButtonText={submitSellButtonText}\n                        listenInputPrice={listenInputPrice}\n                    />\n                ),\n                label: labelSecond ? labelSecond : 'Sell',\n            },\n        ];\n    };\n\n    private handleChangeTab = (index: number, label?: string) => {\n        if (this.props.handleSendType && label) {\n          this.props.handleSendType(index, label);\n        }\n    }\n}\n\nexport {\n    Order,\n};\n"]},"metadata":{},"sourceType":"module"}