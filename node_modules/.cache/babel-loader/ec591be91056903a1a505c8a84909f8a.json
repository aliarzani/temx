{"ast":null,"code":"import _regeneratorRuntime from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(ordersCancelAllSaga);\n\n// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API } from '../../../../api';\nimport { alertPush } from '../../../index';\nimport { ordersCancelAllError } from '../actions';\nvar ordersCancelAllOptions = {\n  apiVersion: 'peatio'\n};\nexport function ordersCancelAllSaga(action) {\n  return _regeneratorRuntime.wrap(function ordersCancelAllSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(API.post(ordersCancelAllOptions), '/market/orders/cancel', action.payload);\n\n        case 3:\n          _context.next = 5;\n          return put(alertPush({\n            message: ['success.order.cancelling.all'],\n            type: 'success'\n          }));\n\n        case 5:\n          _context.next = 13;\n          break;\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 11;\n          return put(ordersCancelAllError());\n\n        case 11:\n          _context.next = 13;\n          return put(alertPush({\n            message: _context.t0.message,\n            code: _context.t0.code,\n            type: 'error'\n          }));\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 7]]);\n}","map":{"version":3,"sources":["/workspaces/temx/src/modules/user/ordersHistory/sagas/ordersCancelAllSaga.ts"],"names":["ordersCancelAllSaga","call","put","API","alertPush","ordersCancelAllError","ordersCancelAllOptions","apiVersion","action","post","payload","message","type","code"],"mappings":";;;;yBAaiBA,mB;;AAbjB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,GAAT,QAAoC,iBAApC;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SACIC,oBADJ,QAGO,YAHP;AAKA,IAAMC,sBAAsC,GAAG;AAC3CC,EAAAA,UAAU,EAAE;AAD+B,CAA/C;AAIA,OAAO,SAAUP,mBAAV,CAA8BQ,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEC,iBAAMP,IAAI,CAACE,GAAG,CAACM,IAAJ,CAASH,sBAAT,CAAD,EAAmC,uBAAnC,EAA4DE,MAAM,CAACE,OAAnE,CAAV;;AAFD;AAAA;AAGC,iBAAMR,GAAG,CAACE,SAAS,CAAC;AAAEO,YAAAA,OAAO,EAAE,CAAC,8BAAD,CAAX;AAA6CC,YAAAA,IAAI,EAAE;AAAnD,WAAD,CAAV,CAAT;;AAHD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAKC,iBAAMV,GAAG,CAACG,oBAAoB,EAArB,CAAT;;AALD;AAAA;AAMC,iBAAMH,GAAG,CAACE,SAAS,CAAC;AAACO,YAAAA,OAAO,EAAE,YAAMA,OAAhB;AAAyBE,YAAAA,IAAI,EAAE,YAAMA,IAArC;AAA2CD,YAAAA,IAAI,EAAE;AAAjD,WAAD,CAAV,CAAT;;AAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["// tslint:disable-next-line\nimport { call, put } from 'redux-saga/effects';\nimport { API, RequestOptions } from '../../../../api';\nimport { alertPush } from '../../../index';\nimport {\n    ordersCancelAllError,\n    OrdersCancelAllFetch,\n} from '../actions';\n\nconst ordersCancelAllOptions: RequestOptions = {\n    apiVersion: 'peatio',\n};\n\nexport function* ordersCancelAllSaga(action: OrdersCancelAllFetch) {\n    try {\n        yield call(API.post(ordersCancelAllOptions), '/market/orders/cancel', action.payload);\n        yield put(alertPush({ message: ['success.order.cancelling.all'], type: 'success'}));\n    } catch (error) {\n        yield put(ordersCancelAllError());\n        yield put(alertPush({message: error.message, code: error.code, type: 'error'}));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}