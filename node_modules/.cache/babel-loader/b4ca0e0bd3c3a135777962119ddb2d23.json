{"ast":null,"code":"import _defineProperty from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/workspaces/temx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/temx/src/components/WalletList/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport { WalletItem } from '../WalletItem';\n\nvar removeAlt = function removeAlt(str) {\n  return str.replace('-alt', '');\n};\n\nvar style = {\n  listStyleType: 'none',\n  padding: 'calc(var(--gap) * 0.5) calc(var(--gap))'\n};\n/**\n * Component to display list of user wallets. It is scrollable and reacts on WalletItem click.\n */\n\nexport var WalletList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(WalletList, _React$Component);\n\n  function WalletList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, WalletList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(WalletList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.itemState = function (i) {\n      return _this.props.activeIndex === i;\n    };\n\n    _this.makeWalletItem = function (props, i) {\n      return React.createElement(\"li\", {\n        key: i,\n        style: style,\n        onClick: _this.handleClick.bind(_assertThisInitialized(_this), i, props),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(WalletItem, Object.assign({\n        key: i\n      }, _objectSpread({}, props, {\n        active: _this.itemState(i),\n        currency: removeAlt(props.currency)\n      }), {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    };\n\n    _this.handleClick = function (i, props) {\n      if (_this.props.onWalletSelectionChange) {\n        _this.props.onWalletSelectionChange(props);\n      }\n\n      if (_this.props.onActiveIndexChange) {\n        _this.props.onActiveIndexChange(i);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(WalletList, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"ul\", {\n        className: \"cr-wallet-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.props.walletItems.map(this.makeWalletItem));\n    }\n  }]);\n\n  return WalletList;\n}(React.Component);","map":{"version":3,"sources":["/workspaces/temx/src/components/WalletList/index.tsx"],"names":["React","WalletItem","removeAlt","str","replace","style","listStyleType","padding","WalletList","itemState","i","props","activeIndex","makeWalletItem","handleClick","bind","active","currency","onWalletSelectionChange","onActiveIndexChange","walletItems","map","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA4C,eAA5C;;AAeA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,GAAD;AAAA,SAAyBA,GAAG,CAACC,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAzB;AAAA,CAAlB;;AAEA,IAAMC,KAA0B,GAAG;AAC/BC,EAAAA,aAAa,EAAE,MADgB;AAE/BC,EAAAA,OAAO,EAAE;AAFsB,CAAnC;AAKA;;;;AAGA,WAAaC,UAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UACWC,SADX,GACuB,UAACC,CAAD,EAAe;AAC9B,aAAO,MAAKC,KAAL,CAAWC,WAAX,KAA2BF,CAAlC;AACH,KAHL;;AAAA,UAKWG,cALX,GAK4B,UAACF,KAAD,EAAyBD,CAAzB;AAAA,aACpB;AACI,QAAA,GAAG,EAAEA,CADT;AAEI,QAAA,KAAK,EAAEL,KAFX;AAGI,QAAA,OAAO,EAAE,MAAKS,WAAL,CAAiBC,IAAjB,gCAA4BL,CAA5B,EAA+BC,KAA/B,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI,oBAAC,UAAD;AACI,QAAA,GAAG,EAAED;AADT,2BAGWC,KAHX;AAIQK,QAAAA,MAAM,EAAE,MAAKP,SAAL,CAAeC,CAAf,CAJhB;AAKQO,QAAAA,QAAQ,EAAEf,SAAS,CAACS,KAAK,CAACM,QAAP;AAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALJ,CADoB;AAAA,KAL5B;;AAAA,UAqBWH,WArBX,GAqByB,UAACJ,CAAD,EAAYC,KAAZ,EAAuC;AACxD,UAAI,MAAKA,KAAL,CAAWO,uBAAf,EAAwC;AACpC,cAAKP,KAAL,CAAWO,uBAAX,CAAmCP,KAAnC;AACH;;AACD,UAAI,MAAKA,KAAL,CAAWQ,mBAAf,EAAoC;AAChC,cAAKR,KAAL,CAAWQ,mBAAX,CAA+BT,CAA/B;AACH;AACJ,KA5BL;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BA8BoB;AACZ,aACI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,KAAL,CAAWS,WAAX,CAAuBC,GAAvB,CAA2B,KAAKR,cAAhC,CADL,CADJ;AAKH;AApCL;;AAAA;AAAA,EAAgCb,KAAK,CAACsB,SAAtC","sourcesContent":["import * as React from 'react';\nimport { WalletItem, WalletItemProps } from '../WalletItem';\n\nexport interface WalletListProps {\n    walletItems: WalletItemProps[];\n    activeIndex: number;\n    /**\n     * Callback function which is invoked whenever wallet item is clicked\n     */\n    onWalletSelectionChange(item: WalletItemProps): void;\n    /**\n     * Callback function which is invoked whenever wallet item is clicked\n     */\n    onActiveIndexChange(index: number): void;\n}\n\nconst removeAlt = (str: string): string => str.replace('-alt', '');\n\nconst style: React.CSSProperties = {\n    listStyleType: 'none',\n    padding: 'calc(var(--gap) * 0.5) calc(var(--gap))',\n};\n\n/**\n * Component to display list of user wallets. It is scrollable and reacts on WalletItem click.\n */\nexport class WalletList extends React.Component<WalletListProps> {\n    public itemState = (i: number) => {\n        return this.props.activeIndex === i;\n    };\n\n    public makeWalletItem = (props: WalletItemProps, i: number) => (\n        <li\n            key={i}\n            style={style}\n            onClick={this.handleClick.bind(this, i, props)}\n        >\n            <WalletItem\n                key={i}\n                {...{\n                    ...props,\n                    active: this.itemState(i),\n                    currency: removeAlt(props.currency),\n                }}\n            />\n        </li>\n    );\n    public handleClick = (i: number, props: WalletItemProps) => {\n        if (this.props.onWalletSelectionChange) {\n            this.props.onWalletSelectionChange(props);\n        }\n        if (this.props.onActiveIndexChange) {\n            this.props.onActiveIndexChange(i);\n        }\n    };\n\n    public render() {\n        return (\n            <ul className=\"cr-wallet-list\">\n                {this.props.walletItems.map(this.makeWalletItem)}\n            </ul>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}