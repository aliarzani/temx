{"ast":null,"code":"import _classCallCheck from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/workspaces/codespaces-blank/baseapp-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/workspaces/codespaces-blank/baseapp-master/src/containers/ReferralProgram/index.tsx\";\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CopyableTextField } from '../../components';\nimport { alertPush, selectUserInfo } from '../../modules';\n\nvar copy = function copy(id) {\n  var copyText = document.querySelector(\"#\".concat(id));\n\n  if (copyText) {\n    copyText.select();\n    document.execCommand('copy');\n    window.getSelection().removeAllRanges(); // tslint:disable-line\n  }\n};\n\nvar ReferralProgramClass =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReferralProgramClass, _React$Component);\n\n  function ReferralProgramClass() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ReferralProgramClass);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ReferralProgramClass)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.translate = function (e) {\n      return _this.props.intl.formatMessage({\n        id: e\n      });\n    };\n\n    _this.doCopy = function () {\n      copy('referral-id');\n\n      _this.props.fetchSuccess({\n        message: ['page.body.wallets.tabs.deposit.ccy.message.success'],\n        type: 'success'\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ReferralProgramClass, [{\n    key: \"render\",\n    value: function render() {\n      var user = this.props.user;\n      var referralLink = \"\".concat(window.document.location.origin, \"/signup?refid=\").concat(user.uid);\n      return React.createElement(\"div\", {\n        className: \"pg-profile-page__referral mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        className: \"pg-copyable-text__section\",\n        onClick: this.doCopy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        className: \"cr-deposit-crypto__copyable-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(FormattedMessage, {\n        id: \"page.body.profile.header.referralProgram\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(CopyableTextField, {\n        className: \"pg-copyable-text-field__input\",\n        value: referralLink,\n        fieldId: \"referral-id\",\n        copyButtonText: this.translate('page.body.profile.content.copyLink'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ReferralProgramClass;\n}(React.Component);\n\nReferralProgramClass.propsTypes = {\n  intl: intlShape.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: selectUserInfo(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchSuccess: function fetchSuccess(payload) {\n      return dispatch(alertPush(payload));\n    }\n  };\n}; // tslint:disable-next-line\n\n\nexport var ReferralProgram = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ReferralProgramClass));","map":{"version":3,"sources":["/workspaces/codespaces-blank/baseapp-master/src/containers/ReferralProgram/index.tsx"],"names":["React","FormattedMessage","injectIntl","intlShape","connect","CopyableTextField","alertPush","selectUserInfo","copy","id","copyText","document","querySelector","select","execCommand","window","getSelection","removeAllRanges","ReferralProgramClass","translate","e","props","intl","formatMessage","doCopy","fetchSuccess","message","type","user","referralLink","location","origin","uid","Component","propsTypes","isRequired","mapStateToProps","state","mapDispatchToProps","dispatch","payload","ReferralProgram"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACIC,gBADJ,EAGIC,UAHJ,EAIIC,SAJJ,QAKO,YALP;AAMA,SAASC,OAAT,QAA4C,aAA5C;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SACIC,SADJ,EAGIC,cAHJ,QAKO,eALP;;AAkBA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,EAAD,EAAgB;AACzB,MAAMC,QAAmB,GAAGC,QAAQ,CAACC,aAAT,YAA2BH,EAA3B,EAA5B;;AAEA,MAAIC,QAAJ,EAAc;AACVA,IAAAA,QAAQ,CAACG,MAAT;AAEAF,IAAAA,QAAQ,CAACG,WAAT,CAAqB,MAArB;AACCC,IAAAA,MAAM,CAACC,YAAP,EAAD,CAA+BC,eAA/B,GAJU,CAIwC;AACrD;AACJ,CATD;;IAaMC,oB;;;;;;;;;;;;;;;;;;UAMKC,S,GAAY,UAACC,CAAD,EAAe;AAC9B,aAAO,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,aAAhB,CAA8B;AAACd,QAAAA,EAAE,EAAEW;AAAL,OAA9B,CAAP;AACH,K;;UAEMI,M,GAAS,YAAM;AAClBhB,MAAAA,IAAI,CAAC,aAAD,CAAJ;;AACA,YAAKa,KAAL,CAAWI,YAAX,CAAwB;AAACC,QAAAA,OAAO,EAAE,CAAC,oDAAD,CAAV;AAAkEC,QAAAA,IAAI,EAAE;AAAxE,OAAxB;AACH,K;;;;;;;6BAEe;AAAA,UACJC,IADI,GACK,KAAKP,KADV,CACJO,IADI;AAEZ,UAAMC,YAAY,aAAMd,MAAM,CAACJ,QAAP,CAAgBmB,QAAhB,CAAyBC,MAA/B,2BAAsDH,IAAI,CAACI,GAA3D,CAAlB;AACA,aACI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAU,QAAA,SAAS,EAAC,2BAApB;AAAgD,QAAA,OAAO,EAAE,KAAKR,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,mCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,0CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII,oBAAC,iBAAD;AACI,QAAA,SAAS,EAAC,+BADd;AAEI,QAAA,KAAK,EAAEK,YAFX;AAGI,QAAA,OAAO,EAAC,aAHZ;AAII,QAAA,cAAc,EAAE,KAAKV,SAAL,CAAe,oCAAf,CAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ,CADJ;AAeH;;;;EAjC8BnB,KAAK,CAACiC,S;;AAAnCf,oB,CAEYgB,U,GAAuC;AACjDZ,EAAAA,IAAI,EAAEnB,SAAS,CAACgC;AADiC,C;;AAkCzD,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAmC;AACvDT,IAAAA,IAAI,EAAErB,cAAc,CAAC8B,KAAD;AADmC,GAAnC;AAAA,CAAxB;;AAIA,IAAMC,kBAAyD,GAAG,SAA5DA,kBAA4D,CAAAC,QAAQ;AAAA,SAAK;AAC3Ed,IAAAA,YAAY,EAAE,sBAAAe,OAAO;AAAA,aAAID,QAAQ,CAACjC,SAAS,CAACkC,OAAD,CAAV,CAAZ;AAAA;AADsD,GAAL;AAAA,CAA1E,C,CAIA;;;AACA,OAAO,IAAMC,eAAe,GAAGvC,UAAU,CAACE,OAAO,CAACgC,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CpB,oBAA7C,CAAD,CAAlC","sourcesContent":["import * as React from 'react';\nimport {\n    FormattedMessage,\n    InjectedIntlProps,\n    injectIntl,\n    intlShape,\n} from 'react-intl';\nimport { connect, MapDispatchToProps } from 'react-redux';\nimport { CopyableTextField } from '../../components';\nimport {\n    alertPush,\n    RootState,\n    selectUserInfo,\n    User,\n} from '../../modules';\n\ninterface ReduxProps {\n    user: User;\n}\n\ninterface DispatchProps {\n    fetchSuccess: typeof alertPush;\n}\n\n\ntype CopyTypes = HTMLInputElement | null;\n\nconst copy = (id: string) => {\n    const copyText: CopyTypes = document.querySelector(`#${id}`);\n\n    if (copyText) {\n        copyText.select();\n\n        document.execCommand('copy');\n        (window.getSelection() as any).removeAllRanges(); // tslint:disable-line\n    }\n};\n\ntype Props = ReduxProps & DispatchProps & InjectedIntlProps;\n\nclass ReferralProgramClass extends React.Component<Props> {\n    //tslint:disable-next-line:no-any\n    public static propsTypes: React.ValidationMap<any> = {\n        intl: intlShape.isRequired,\n    };\n\n    public translate = (e: string) => {\n        return this.props.intl.formatMessage({id: e});\n    };\n\n    public doCopy = () => {\n        copy('referral-id');\n        this.props.fetchSuccess({message: ['page.body.wallets.tabs.deposit.ccy.message.success'], type: 'success'});\n    };\n\n    public render() {\n        const { user } = this.props;\n        const referralLink = `${window.document.location.origin}/signup?refid=${user.uid}`;\n        return (\n            <div className=\"pg-profile-page__referral mb-3\">\n                <fieldset className=\"pg-copyable-text__section\" onClick={this.doCopy}>\n                    <legend className=\"cr-deposit-crypto__copyable-title\">\n                        <FormattedMessage id=\"page.body.profile.header.referralProgram\"/>\n                    </legend>\n                    <CopyableTextField\n                        className=\"pg-copyable-text-field__input\"\n                        value={referralLink}\n                        fieldId=\"referral-id\"\n                        copyButtonText={this.translate('page.body.profile.content.copyLink')}\n                    />\n                </fieldset>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    user: selectUserInfo(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n    fetchSuccess: payload => dispatch(alertPush(payload)),\n});\n\n// tslint:disable-next-line\nexport const ReferralProgram = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ReferralProgramClass) as any);\n"]},"metadata":{},"sourceType":"module"}